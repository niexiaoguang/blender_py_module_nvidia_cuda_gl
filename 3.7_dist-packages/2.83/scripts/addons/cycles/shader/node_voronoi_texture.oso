OpenShadingLanguage 1.00
# Compiled by oslc 1.10.9
# options: -q -O2 -I/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders -IOSL_SHADER_DIR-NOTFOUND -o /mnt/hd/dev/blender/build_linux_bpy/intern/cycles/kernel/shaders/node_voronoi_texture.oso
shader node_voronoi_texture
param	int	use_mapping	0		%read{10,10} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{11,11} %write{2147483647,-1}
param	string	dimensions	"3D"		%read{14,1572} %write{2147483647,-1}
param	string	feature	"f1"		%read{16,2471} %write{2147483647,-1}
param	string	metric	"euclidean"		%read{296,2132} %write{2147483647,-1}
param	point	Vector	0 0 0		%read{9,9} %write{0,0} %initexpr
param	float	WIn	0		%read{12,12} %write{2147483647,-1}
param	float	Scale	5		%read{12,2735} %write{2147483647,-1}
param	float	Smoothness	5		%read{5,5} %write{2147483647,-1}
param	float	Exponent	1		%read{329,2149} %write{2147483647,-1}
param	float	Randomness	1		%read{3,3} %write{2147483647,-1}
oparam	float	Distance	0		%read{2147483647,-1} %write{43,2470}
oparam	color	Color	0 0 0		%read{2147483647,-1} %write{56,2217}
oparam	point	Position	0 0 0		%read{1570,1570} %write{1,2738} %initexpr
oparam	float	WOut	0		%read{251,251} %write{57,2739}
oparam	float	Radius	0		%read{2147483647,-1} %write{247,2718}
global	point	P	%read{0,1} %write{2147483647,-1}
local	float	___381_b_inv	%read{682,752} %write{682,752}
local	float	___435_b_inv	%read{2333,2469} %write{2333,2469}
local	float	___491_cellPosition	%read{20,57} %write{19,19}
local	float	___491_localPosition	%read{24,42} %write{20,20}
local	float	___491_minDistance	%read{24,43} %write{21,42}
local	float	___491_targetOffset	%read{44,44} %write{24,42}
local	float	___491_targetPosition	%read{57,57} %write{24,42}
local	int	___492_i	%read{24,42} %write{23,42}
local	float	___493_cellOffset	%read{24,42} %write{24,42}
local	float	___493_pointPosition	%read{24,42} %write{24,42}
local	float	___493_distanceToPoint	%read{24,42} %write{24,42}
local	float	___495_cellPosition	%read{62,114} %write{61,61}
local	float	___495_localPosition	%read{68,111} %write{62,62}
local	float	___495_smoothDistance	%read{68,112} %write{63,111}
local	float	___495_smoothPosition	%read{68,114} %write{64,111}
local	color	___495_smoothColor	%read{68,113} %write{65,111}
local	int	___496_i	%read{68,111} %write{67,111}
local	float	___497_cellOffset	%read{68,111} %write{68,111}
local	float	___497_pointPosition	%read{68,111} %write{68,111}
local	float	___497_distanceToPoint	%read{68,111} %write{68,111}
local	float	___497_h	%read{68,111} %write{68,111}
local	float	___497_correctionFactor	%read{68,111} %write{68,111}
local	color	___497_cellColor	%read{68,111} %write{68,111}
local	float	___498_cellPosition	%read{119,167} %write{118,118}
local	float	___498_localPosition	%read{126,152} %write{119,119}
local	float	___498_distanceF1	%read{126,152} %write{120,152}
local	float	___498_distanceF2	%read{126,153} %write{121,152}
local	float	___498_offsetF1	%read{126,152} %write{122,152}
local	float	___498_positionF1	%read{126,152} %write{123,152}
local	float	___498_offsetF2	%read{154,154} %write{126,152}
local	float	___498_positionF2	%read{167,167} %write{126,152}
local	int	___499_i	%read{126,152} %write{125,152}
local	float	___500_cellOffset	%read{126,152} %write{126,152}
local	float	___500_pointPosition	%read{126,152} %write{126,152}
local	float	___500_distanceToPoint	%read{126,152} %write{126,152}
local	float	___503_cellPosition	%read{172,190} %write{171,171}
local	float	___503_localPosition	%read{176,190} %write{172,172}
local	float	___503_minDistance	%read{176,191} %write{173,190}
local	int	___504_i	%read{176,190} %write{175,190}
local	float	___505_cellOffset	%read{176,190} %write{176,190}
local	float	___505_pointPosition	%read{176,190} %write{176,190}
local	float	___505_distanceToPoint	%read{176,190} %write{176,190}
local	float	___506_cellPosition	%read{196,243} %write{195,195}
local	float	___506_localPosition	%read{200,218} %write{196,196}
local	float	___506_closestPoint	%read{222,245} %write{200,218}
local	float	___506_closestPointOffset	%read{222,243} %write{200,218}
local	float	___506_minDistance	%read{200,243} %write{197,243}
local	int	___507_i	%read{200,218} %write{199,218}
local	float	___508_cellOffset	%read{200,218} %write{200,218}
local	float	___508_pointPosition	%read{200,218} %write{200,218}
local	float	___508_distanceToPoint	%read{200,218} %write{200,218}
local	float	___506_closestPointToClosestPoint	%read{245,245} %write{222,243}
local	int	___510_i	%read{222,243} %write{221,243}
local	float	___511_cellOffset	%read{222,243} %write{222,243}
local	float	___511_pointPosition	%read{222,243} %write{222,243}
local	float	___511_distanceToPoint	%read{222,243} %write{222,243}
local	float	___520_cellPosition.x	%read{264,365} %write{261,261} %mystruct{___520_cellPosition} %mystructfield{0}
local	float	___520_cellPosition.y	%read{265,366} %write{262,262} %mystruct{___520_cellPosition} %mystructfield{1}
local	float	___520_localPosition.x	%read{269,349} %write{264,264} %mystruct{___520_localPosition} %mystructfield{0}
local	float	___520_localPosition.y	%read{269,349} %write{265,265} %mystruct{___520_localPosition} %mystructfield{1}
local	float	___520_minDistance	%read{269,350} %write{266,349}
local	float	___520_targetOffset.x	%read{352,352} %write{269,349} %mystruct{___520_targetOffset} %mystructfield{0}
local	float	___520_targetOffset.y	%read{353,353} %write{269,349} %mystruct{___520_targetOffset} %mystructfield{1}
local	float	___520_targetPosition.x	%read{365,365} %write{269,349} %mystruct{___520_targetPosition} %mystructfield{0}
local	float	___520_targetPosition.y	%read{366,366} %write{269,349} %mystruct{___520_targetPosition} %mystructfield{1}
local	int	___521_j	%read{269,349} %write{268,349}
local	int	___523_i	%read{269,349} %write{269,349}
local	float	___524_cellOffset.x	%read{269,349} %write{269,349} %mystruct{___524_cellOffset} %mystructfield{0}
local	float	___524_cellOffset.y	%read{269,349} %write{269,349} %mystruct{___524_cellOffset} %mystructfield{1}
local	float	___524_pointPosition.x	%read{269,349} %write{269,349} %mystruct{___524_pointPosition} %mystructfield{0}
local	float	___524_pointPosition.y	%read{269,349} %write{269,349} %mystruct{___524_pointPosition} %mystructfield{1}
local	float	___524_distanceToPoint	%read{269,349} %write{269,349}
local	float	___526_cellPosition.x	%read{374,496} %write{371,371} %mystruct{___526_cellPosition} %mystructfield{0}
local	float	___526_cellPosition.y	%read{375,497} %write{372,372} %mystruct{___526_cellPosition} %mystructfield{1}
local	float	___526_localPosition.x	%read{382,492} %write{374,374} %mystruct{___526_localPosition} %mystructfield{0}
local	float	___526_localPosition.y	%read{382,492} %write{375,375} %mystruct{___526_localPosition} %mystructfield{1}
local	float	___526_smoothDistance	%read{382,493} %write{376,492}
local	color	___526_smoothColor	%read{382,494} %write{377,492}
local	float	___526_smoothPosition.x	%read{382,496} %write{378,492} %mystruct{___526_smoothPosition} %mystructfield{0}
local	float	___526_smoothPosition.y	%read{382,497} %write{379,492} %mystruct{___526_smoothPosition} %mystructfield{1}
local	int	___527_j	%read{382,492} %write{381,492}
local	int	___529_i	%read{382,492} %write{382,492}
local	float	___530_cellOffset.x	%read{382,492} %write{382,492} %mystruct{___530_cellOffset} %mystructfield{0}
local	float	___530_cellOffset.y	%read{382,492} %write{382,492} %mystruct{___530_cellOffset} %mystructfield{1}
local	float	___530_pointPosition.x	%read{382,492} %write{382,492} %mystruct{___530_pointPosition} %mystructfield{0}
local	float	___530_pointPosition.y	%read{382,492} %write{382,492} %mystruct{___530_pointPosition} %mystructfield{1}
local	float	___530_distanceToPoint	%read{382,492} %write{382,492}
local	float	___530_h	%read{382,492} %write{382,492}
local	float	___530_correctionFactor	%read{382,492} %write{382,492}
local	color	___530_cellColor	%read{382,492} %write{382,492}
local	float	___531_cellPosition.x	%read{505,623} %write{502,502} %mystruct{___531_cellPosition} %mystructfield{0}
local	float	___531_cellPosition.y	%read{506,624} %write{503,503} %mystruct{___531_cellPosition} %mystructfield{1}
local	float	___531_localPosition.x	%read{515,607} %write{505,505} %mystruct{___531_localPosition} %mystructfield{0}
local	float	___531_localPosition.y	%read{515,607} %write{506,506} %mystruct{___531_localPosition} %mystructfield{1}
local	float	___531_distanceF1	%read{515,607} %write{507,607}
local	float	___531_distanceF2	%read{515,608} %write{508,607}
local	float	___531_offsetF1.x	%read{515,607} %write{509,607} %mystruct{___531_offsetF1} %mystructfield{0}
local	float	___531_offsetF1.y	%read{515,607} %write{510,607} %mystruct{___531_offsetF1} %mystructfield{1}
local	float	___531_positionF1.x	%read{515,607} %write{511,607} %mystruct{___531_positionF1} %mystructfield{0}
local	float	___531_positionF1.y	%read{515,607} %write{512,607} %mystruct{___531_positionF1} %mystructfield{1}
local	float	___531_offsetF2.x	%read{610,610} %write{515,607} %mystruct{___531_offsetF2} %mystructfield{0}
local	float	___531_offsetF2.y	%read{611,611} %write{515,607} %mystruct{___531_offsetF2} %mystructfield{1}
local	float	___531_positionF2.x	%read{623,623} %write{515,607} %mystruct{___531_positionF2} %mystructfield{0}
local	float	___531_positionF2.y	%read{624,624} %write{515,607} %mystruct{___531_positionF2} %mystructfield{1}
local	int	___532_j	%read{515,607} %write{514,607}
local	int	___534_i	%read{515,607} %write{515,607}
local	float	___535_cellOffset.x	%read{515,607} %write{515,607} %mystruct{___535_cellOffset} %mystructfield{0}
local	float	___535_cellOffset.y	%read{515,607} %write{515,607} %mystruct{___535_cellOffset} %mystructfield{1}
local	float	___535_pointPosition.x	%read{515,607} %write{515,607} %mystruct{___535_pointPosition} %mystructfield{0}
local	float	___535_pointPosition.y	%read{515,607} %write{515,607} %mystruct{___535_pointPosition} %mystructfield{1}
local	float	___535_distanceToPoint	%read{515,607} %write{515,607}
local	float	___538_cellPosition.x	%read{632,752} %write{629,629} %mystruct{___538_cellPosition} %mystructfield{0}
local	float	___538_cellPosition.y	%read{633,752} %write{630,630} %mystruct{___538_cellPosition} %mystructfield{1}
local	float	___538_localPosition.x	%read{637,752} %write{632,632} %mystruct{___538_localPosition} %mystructfield{0}
local	float	___538_localPosition.y	%read{637,752} %write{633,633} %mystruct{___538_localPosition} %mystructfield{1}
local	float	___538_vectorToClosest.x	%read{682,752} %write{637,678} %mystruct{___538_vectorToClosest} %mystructfield{0}
local	float	___538_vectorToClosest.y	%read{682,752} %write{637,678} %mystruct{___538_vectorToClosest} %mystructfield{1}
local	float	___538_minDistance	%read{637,753} %write{634,752}
local	int	___539_j	%read{637,678} %write{636,678}
local	int	___541_i	%read{637,678} %write{637,678}
local	float	___542_cellOffset.x	%read{637,678} %write{637,678} %mystruct{___542_cellOffset} %mystructfield{0}
local	float	___542_cellOffset.y	%read{637,678} %write{637,678} %mystruct{___542_cellOffset} %mystructfield{1}
local	float	___542_vectorToPoint.x	%read{637,678} %write{637,678} %mystruct{___542_vectorToPoint} %mystructfield{0}
local	float	___542_vectorToPoint.y	%read{637,678} %write{637,678} %mystruct{___542_vectorToPoint} %mystructfield{1}
local	float	___542_distanceToPoint	%read{637,678} %write{637,678}
local	int	___544_j	%read{682,752} %write{681,752}
local	int	___546_i	%read{682,752} %write{682,752}
local	float	___547_cellOffset.x	%read{682,752} %write{682,752} %mystruct{___547_cellOffset} %mystructfield{0}
local	float	___547_cellOffset.y	%read{682,752} %write{682,752} %mystruct{___547_cellOffset} %mystructfield{1}
local	float	___547_vectorToPoint.x	%read{682,752} %write{682,752} %mystruct{___547_vectorToPoint} %mystructfield{0}
local	float	___547_vectorToPoint.y	%read{682,752} %write{682,752} %mystruct{___547_vectorToPoint} %mystructfield{1}
local	float	___547_perpendicularToEdge.x	%read{682,752} %write{682,752} %mystruct{___547_perpendicularToEdge} %mystructfield{0}
local	float	___547_perpendicularToEdge.y	%read{682,752} %write{682,752} %mystruct{___547_perpendicularToEdge} %mystructfield{1}
local	float	___548_distanceToEdge	%read{682,752} %write{682,752}
local	float	___549_cellPosition.x	%read{761,871} %write{758,758} %mystruct{___549_cellPosition} %mystructfield{0}
local	float	___549_cellPosition.y	%read{762,871} %write{759,759} %mystruct{___549_cellPosition} %mystructfield{1}
local	float	___549_localPosition.x	%read{766,812} %write{761,761} %mystruct{___549_localPosition} %mystructfield{0}
local	float	___549_localPosition.y	%read{766,812} %write{762,762} %mystruct{___549_localPosition} %mystructfield{1}
local	float	___549_closestPoint.x	%read{816,874} %write{766,812} %mystruct{___549_closestPoint} %mystructfield{0}
local	float	___549_closestPoint.y	%read{816,875} %write{766,812} %mystruct{___549_closestPoint} %mystructfield{1}
local	float	___549_closestPointOffset.x	%read{816,871} %write{766,812} %mystruct{___549_closestPointOffset} %mystructfield{0}
local	float	___549_closestPointOffset.y	%read{816,871} %write{766,812} %mystruct{___549_closestPointOffset} %mystructfield{1}
local	float	___549_minDistance	%read{766,871} %write{763,871}
local	int	___550_j	%read{766,812} %write{765,812}
local	int	___552_i	%read{766,812} %write{766,812}
local	float	___553_cellOffset.x	%read{766,812} %write{766,812} %mystruct{___553_cellOffset} %mystructfield{0}
local	float	___553_cellOffset.y	%read{766,812} %write{766,812} %mystruct{___553_cellOffset} %mystructfield{1}
local	float	___553_pointPosition.x	%read{766,812} %write{766,812} %mystruct{___553_pointPosition} %mystructfield{0}
local	float	___553_pointPosition.y	%read{766,812} %write{766,812} %mystruct{___553_pointPosition} %mystructfield{1}
local	float	___553_distanceToPoint	%read{766,812} %write{766,812}
local	float	___549_closestPointToClosestPoint.x	%read{874,874} %write{816,871} %mystruct{___549_closestPointToClosestPoint} %mystructfield{0}
local	float	___549_closestPointToClosestPoint.y	%read{875,875} %write{816,871} %mystruct{___549_closestPointToClosestPoint} %mystructfield{1}
local	int	___555_j	%read{816,871} %write{815,871}
local	int	___557_i	%read{816,871} %write{816,871}
local	float	___558_cellOffset.x	%read{816,871} %write{816,871} %mystruct{___558_cellOffset} %mystructfield{0}
local	float	___558_cellOffset.y	%read{816,871} %write{816,871} %mystruct{___558_cellOffset} %mystructfield{1}
local	float	___558_pointPosition.x	%read{816,871} %write{816,871} %mystruct{___558_pointPosition} %mystructfield{0}
local	float	___558_pointPosition.y	%read{816,871} %write{816,871} %mystruct{___558_pointPosition} %mystructfield{1}
local	float	___558_distanceToPoint	%read{816,871} %write{816,871}
local	point	___567_cellPosition	%read{901,1034} %write{900,900}
local	point	___567_localPosition	%read{905,1013} %write{901,901}
local	float	___567_minDistance	%read{905,1014} %write{902,1013}
local	point	___567_targetOffset	%read{1015,1015} %write{905,1013}
local	point	___567_targetPosition	%read{1034,1034} %write{905,1013}
local	int	___568_k	%read{905,1013} %write{904,1013}
local	int	___570_j	%read{905,1013} %write{905,1013}
local	int	___572_i	%read{905,1013} %write{905,1013}
local	point	___573_cellOffset	%read{905,1013} %write{905,1013}
local	point	___573_pointPosition	%read{905,1013} %write{905,1013}
local	float	___573_distanceToPoint	%read{905,1013} %write{905,1013}
local	point	___575_cellPosition	%read{1039,1187} %write{1038,1038}
local	point	___575_localPosition	%read{1045,1184} %write{1039,1039}
local	float	___575_smoothDistance	%read{1045,1185} %write{1040,1184}
local	color	___575_smoothColor	%read{1045,1186} %write{1041,1184}
local	point	___575_smoothPosition	%read{1045,1187} %write{1042,1184}
local	int	___576_k	%read{1045,1184} %write{1044,1184}
local	int	___578_j	%read{1045,1184} %write{1045,1184}
local	int	___580_i	%read{1045,1184} %write{1045,1184}
local	point	___581_cellOffset	%read{1045,1184} %write{1045,1184}
local	point	___581_pointPosition	%read{1045,1184} %write{1045,1184}
local	float	___581_distanceToPoint	%read{1045,1184} %write{1045,1184}
local	float	___581_h	%read{1045,1184} %write{1045,1184}
local	float	___581_correctionFactor	%read{1045,1184} %write{1045,1184}
local	color	___581_cellColor	%read{1045,1184} %write{1045,1184}
local	point	___582_cellPosition	%read{1192,1336} %write{1191,1191}
local	point	___582_localPosition	%read{1199,1315} %write{1192,1192}
local	float	___582_distanceF1	%read{1199,1315} %write{1193,1315}
local	float	___582_distanceF2	%read{1199,1316} %write{1194,1315}
local	point	___582_offsetF1	%read{1199,1315} %write{1195,1315}
local	point	___582_positionF1	%read{1199,1315} %write{1196,1315}
local	point	___582_offsetF2	%read{1317,1317} %write{1199,1315}
local	point	___582_positionF2	%read{1336,1336} %write{1199,1315}
local	int	___583_k	%read{1199,1315} %write{1198,1315}
local	int	___585_j	%read{1199,1315} %write{1199,1315}
local	int	___587_i	%read{1199,1315} %write{1199,1315}
local	point	___588_cellOffset	%read{1199,1315} %write{1199,1315}
local	point	___588_pointPosition	%read{1199,1315} %write{1199,1315}
local	float	___588_distanceToPoint	%read{1199,1315} %write{1199,1315}
local	point	___591_cellPosition	%read{1341,1445} %write{1340,1340}
local	point	___591_localPosition	%read{1345,1445} %write{1341,1341}
local	point	___591_vectorToClosest	%read{1395,1445} %write{1345,1391}
local	float	___591_minDistance	%read{1345,1446} %write{1342,1445}
local	int	___592_k	%read{1345,1391} %write{1344,1391}
local	int	___594_j	%read{1345,1391} %write{1345,1391}
local	int	___596_i	%read{1345,1391} %write{1345,1391}
local	point	___597_cellOffset	%read{1345,1391} %write{1345,1391}
local	point	___597_vectorToPoint	%read{1345,1391} %write{1345,1391}
local	float	___597_distanceToPoint	%read{1345,1391} %write{1345,1391}
local	int	___599_k	%read{1395,1445} %write{1394,1445}
local	int	___601_j	%read{1395,1445} %write{1395,1445}
local	int	___603_i	%read{1395,1445} %write{1395,1445}
local	point	___604_cellOffset	%read{1395,1445} %write{1395,1445}
local	point	___604_vectorToPoint	%read{1395,1445} %write{1395,1445}
local	point	___604_perpendicularToEdge	%read{1395,1445} %write{1395,1445}
local	float	___605_distanceToEdge	%read{1395,1445} %write{1395,1445}
local	point	___606_cellPosition	%read{1451,1564} %write{1450,1450}
local	point	___606_localPosition	%read{1455,1501} %write{1451,1451}
local	point	___606_closestPoint	%read{1505,1565} %write{1455,1501}
local	point	___606_closestPointOffset	%read{1505,1564} %write{1455,1501}
local	float	___606_minDistance	%read{1455,1564} %write{1452,1564}
local	int	___607_k	%read{1455,1501} %write{1454,1501}
local	int	___609_j	%read{1455,1501} %write{1455,1501}
local	int	___611_i	%read{1455,1501} %write{1455,1501}
local	point	___612_cellOffset	%read{1455,1501} %write{1455,1501}
local	point	___612_pointPosition	%read{1455,1501} %write{1455,1501}
local	float	___612_distanceToPoint	%read{1455,1501} %write{1455,1501}
local	point	___606_closestPointToClosestPoint	%read{1565,1565} %write{1505,1564}
local	int	___614_k	%read{1505,1564} %write{1504,1564}
local	int	___616_j	%read{1505,1564} %write{1505,1564}
local	int	___618_i	%read{1505,1564} %write{1505,1564}
local	point	___619_cellOffset	%read{1505,1564} %write{1505,1564}
local	point	___619_pointPosition	%read{1505,1564} %write{1505,1564}
local	float	___619_distanceToPoint	%read{1505,1564} %write{1505,1564}
local	float	___628_cellPosition.x	%read{1587,1771} %write{1582,1582} %mystruct{___628_cellPosition} %mystructfield{0}
local	float	___628_cellPosition.y	%read{1588,1772} %write{1583,1583} %mystruct{___628_cellPosition} %mystructfield{1}
local	float	___628_cellPosition.z	%read{1589,1773} %write{1584,1584} %mystruct{___628_cellPosition} %mystructfield{2}
local	float	___628_cellPosition.w	%read{1590,1774} %write{1585,1585} %mystruct{___628_cellPosition} %mystructfield{3}
local	float	___628_localPosition.x	%read{1594,1744} %write{1587,1587} %mystruct{___628_localPosition} %mystructfield{0}
local	float	___628_localPosition.y	%read{1594,1744} %write{1588,1588} %mystruct{___628_localPosition} %mystructfield{1}
local	float	___628_localPosition.z	%read{1594,1744} %write{1589,1589} %mystruct{___628_localPosition} %mystructfield{2}
local	float	___628_localPosition.w	%read{1594,1744} %write{1590,1590} %mystruct{___628_localPosition} %mystructfield{3}
local	float	___628_minDistance	%read{1594,1745} %write{1591,1744}
local	float	___628_targetOffset.x	%read{1747,1747} %write{1594,1744} %mystruct{___628_targetOffset} %mystructfield{0}
local	float	___628_targetOffset.y	%read{1748,1748} %write{1594,1744} %mystruct{___628_targetOffset} %mystructfield{1}
local	float	___628_targetOffset.z	%read{1749,1749} %write{1594,1744} %mystruct{___628_targetOffset} %mystructfield{2}
local	float	___628_targetOffset.w	%read{1750,1750} %write{1594,1744} %mystruct{___628_targetOffset} %mystructfield{3}
local	float	___628_targetPosition.x	%read{1771,1771} %write{1594,1744} %mystruct{___628_targetPosition} %mystructfield{0}
local	float	___628_targetPosition.y	%read{1772,1772} %write{1594,1744} %mystruct{___628_targetPosition} %mystructfield{1}
local	float	___628_targetPosition.z	%read{1773,1773} %write{1594,1744} %mystruct{___628_targetPosition} %mystructfield{2}
local	float	___628_targetPosition.w	%read{1774,1774} %write{1594,1744} %mystruct{___628_targetPosition} %mystructfield{3}
local	int	___629_u	%read{1594,1744} %write{1593,1744}
local	int	___631_k	%read{1594,1744} %write{1594,1744}
local	int	___633_j	%read{1594,1744} %write{1594,1744}
local	int	___635_i	%read{1594,1744} %write{1594,1744}
local	float	___636_cellOffset.x	%read{1594,1744} %write{1594,1744} %mystruct{___636_cellOffset} %mystructfield{0}
local	float	___636_cellOffset.y	%read{1594,1744} %write{1594,1744} %mystruct{___636_cellOffset} %mystructfield{1}
local	float	___636_cellOffset.z	%read{1594,1744} %write{1594,1744} %mystruct{___636_cellOffset} %mystructfield{2}
local	float	___636_cellOffset.w	%read{1594,1744} %write{1594,1744} %mystruct{___636_cellOffset} %mystructfield{3}
local	float	___636_pointPosition.x	%read{1594,1744} %write{1594,1744} %mystruct{___636_pointPosition} %mystructfield{0}
local	float	___636_pointPosition.y	%read{1594,1744} %write{1594,1744} %mystruct{___636_pointPosition} %mystructfield{1}
local	float	___636_pointPosition.z	%read{1594,1744} %write{1594,1744} %mystruct{___636_pointPosition} %mystructfield{2}
local	float	___636_pointPosition.w	%read{1594,1744} %write{1594,1744} %mystruct{___636_pointPosition} %mystructfield{3}
local	float	___636_distanceToPoint	%read{1594,1744} %write{1594,1744}
local	float	___638_cellPosition.x	%read{1784,1993} %write{1779,1779} %mystruct{___638_cellPosition} %mystructfield{0}
local	float	___638_cellPosition.y	%read{1785,1994} %write{1780,1780} %mystruct{___638_cellPosition} %mystructfield{1}
local	float	___638_cellPosition.z	%read{1786,1995} %write{1781,1781} %mystruct{___638_cellPosition} %mystructfield{2}
local	float	___638_cellPosition.w	%read{1787,1996} %write{1782,1782} %mystruct{___638_cellPosition} %mystructfield{3}
local	float	___638_localPosition.x	%read{1796,1989} %write{1784,1784} %mystruct{___638_localPosition} %mystructfield{0}
local	float	___638_localPosition.y	%read{1796,1989} %write{1785,1785} %mystruct{___638_localPosition} %mystructfield{1}
local	float	___638_localPosition.z	%read{1796,1989} %write{1786,1786} %mystruct{___638_localPosition} %mystructfield{2}
local	float	___638_localPosition.w	%read{1796,1989} %write{1787,1787} %mystruct{___638_localPosition} %mystructfield{3}
local	float	___638_smoothDistance	%read{1796,1990} %write{1788,1989}
local	color	___638_smoothColor	%read{1796,1991} %write{1789,1989}
local	float	___638_smoothPosition.x	%read{1796,1993} %write{1790,1989} %mystruct{___638_smoothPosition} %mystructfield{0}
local	float	___638_smoothPosition.y	%read{1796,1994} %write{1791,1989} %mystruct{___638_smoothPosition} %mystructfield{1}
local	float	___638_smoothPosition.z	%read{1796,1995} %write{1792,1989} %mystruct{___638_smoothPosition} %mystructfield{2}
local	float	___638_smoothPosition.w	%read{1796,1996} %write{1793,1989} %mystruct{___638_smoothPosition} %mystructfield{3}
local	int	___639_u	%read{1796,1989} %write{1795,1989}
local	int	___641_k	%read{1796,1989} %write{1796,1989}
local	int	___643_j	%read{1796,1989} %write{1796,1989}
local	int	___645_i	%read{1796,1989} %write{1796,1989}
local	float	___646_cellOffset.x	%read{1796,1989} %write{1796,1989} %mystruct{___646_cellOffset} %mystructfield{0}
local	float	___646_cellOffset.y	%read{1796,1989} %write{1796,1989} %mystruct{___646_cellOffset} %mystructfield{1}
local	float	___646_cellOffset.z	%read{1796,1989} %write{1796,1989} %mystruct{___646_cellOffset} %mystructfield{2}
local	float	___646_cellOffset.w	%read{1796,1989} %write{1796,1989} %mystruct{___646_cellOffset} %mystructfield{3}
local	float	___646_pointPosition.x	%read{1796,1989} %write{1796,1989} %mystruct{___646_pointPosition} %mystructfield{0}
local	float	___646_pointPosition.y	%read{1796,1989} %write{1796,1989} %mystruct{___646_pointPosition} %mystructfield{1}
local	float	___646_pointPosition.z	%read{1796,1989} %write{1796,1989} %mystruct{___646_pointPosition} %mystructfield{2}
local	float	___646_pointPosition.w	%read{1796,1989} %write{1796,1989} %mystruct{___646_pointPosition} %mystructfield{3}
local	float	___646_distanceToPoint	%read{1796,1989} %write{1796,1989}
local	float	___646_h	%read{1796,1989} %write{1796,1989}
local	float	___646_correctionFactor	%read{1796,1989} %write{1796,1989}
local	color	___646_cellColor	%read{1796,1989} %write{1796,1989}
local	float	___647_cellPosition.x	%read{2006,2219} %write{2001,2001} %mystruct{___647_cellPosition} %mystructfield{0}
local	float	___647_cellPosition.y	%read{2007,2220} %write{2002,2002} %mystruct{___647_cellPosition} %mystructfield{1}
local	float	___647_cellPosition.z	%read{2008,2221} %write{2003,2003} %mystruct{___647_cellPosition} %mystructfield{2}
local	float	___647_cellPosition.w	%read{2009,2222} %write{2004,2004} %mystruct{___647_cellPosition} %mystructfield{3}
local	float	___647_localPosition.x	%read{2022,2192} %write{2006,2006} %mystruct{___647_localPosition} %mystructfield{0}
local	float	___647_localPosition.y	%read{2022,2192} %write{2007,2007} %mystruct{___647_localPosition} %mystructfield{1}
local	float	___647_localPosition.z	%read{2022,2192} %write{2008,2008} %mystruct{___647_localPosition} %mystructfield{2}
local	float	___647_localPosition.w	%read{2022,2192} %write{2009,2009} %mystruct{___647_localPosition} %mystructfield{3}
local	float	___647_distanceF1	%read{2022,2192} %write{2010,2192}
local	float	___647_distanceF2	%read{2022,2193} %write{2011,2192}
local	float	___647_offsetF1.x	%read{2022,2192} %write{2012,2192} %mystruct{___647_offsetF1} %mystructfield{0}
local	float	___647_offsetF1.y	%read{2022,2192} %write{2013,2192} %mystruct{___647_offsetF1} %mystructfield{1}
local	float	___647_offsetF1.z	%read{2022,2192} %write{2014,2192} %mystruct{___647_offsetF1} %mystructfield{2}
local	float	___647_offsetF1.w	%read{2022,2192} %write{2015,2192} %mystruct{___647_offsetF1} %mystructfield{3}
local	float	___647_positionF1.x	%read{2022,2192} %write{2016,2192} %mystruct{___647_positionF1} %mystructfield{0}
local	float	___647_positionF1.y	%read{2022,2192} %write{2017,2192} %mystruct{___647_positionF1} %mystructfield{1}
local	float	___647_positionF1.z	%read{2022,2192} %write{2018,2192} %mystruct{___647_positionF1} %mystructfield{2}
local	float	___647_positionF1.w	%read{2022,2192} %write{2019,2192} %mystruct{___647_positionF1} %mystructfield{3}
local	float	___647_offsetF2.x	%read{2195,2195} %write{2022,2192} %mystruct{___647_offsetF2} %mystructfield{0}
local	float	___647_offsetF2.y	%read{2196,2196} %write{2022,2192} %mystruct{___647_offsetF2} %mystructfield{1}
local	float	___647_offsetF2.z	%read{2197,2197} %write{2022,2192} %mystruct{___647_offsetF2} %mystructfield{2}
local	float	___647_offsetF2.w	%read{2198,2198} %write{2022,2192} %mystruct{___647_offsetF2} %mystructfield{3}
local	float	___647_positionF2.x	%read{2219,2219} %write{2022,2192} %mystruct{___647_positionF2} %mystructfield{0}
local	float	___647_positionF2.y	%read{2220,2220} %write{2022,2192} %mystruct{___647_positionF2} %mystructfield{1}
local	float	___647_positionF2.z	%read{2221,2221} %write{2022,2192} %mystruct{___647_positionF2} %mystructfield{2}
local	float	___647_positionF2.w	%read{2222,2222} %write{2022,2192} %mystruct{___647_positionF2} %mystructfield{3}
local	int	___648_u	%read{2022,2192} %write{2021,2192}
local	int	___650_k	%read{2022,2192} %write{2022,2192}
local	int	___652_j	%read{2022,2192} %write{2022,2192}
local	int	___654_i	%read{2022,2192} %write{2022,2192}
local	float	___655_cellOffset.x	%read{2022,2192} %write{2022,2192} %mystruct{___655_cellOffset} %mystructfield{0}
local	float	___655_cellOffset.y	%read{2022,2192} %write{2022,2192} %mystruct{___655_cellOffset} %mystructfield{1}
local	float	___655_cellOffset.z	%read{2022,2192} %write{2022,2192} %mystruct{___655_cellOffset} %mystructfield{2}
local	float	___655_cellOffset.w	%read{2022,2192} %write{2022,2192} %mystruct{___655_cellOffset} %mystructfield{3}
local	float	___655_pointPosition.x	%read{2022,2192} %write{2022,2192} %mystruct{___655_pointPosition} %mystructfield{0}
local	float	___655_pointPosition.y	%read{2022,2192} %write{2022,2192} %mystruct{___655_pointPosition} %mystructfield{1}
local	float	___655_pointPosition.z	%read{2022,2192} %write{2022,2192} %mystruct{___655_pointPosition} %mystructfield{2}
local	float	___655_pointPosition.w	%read{2022,2192} %write{2022,2192} %mystruct{___655_pointPosition} %mystructfield{3}
local	float	___655_distanceToPoint	%read{2022,2192} %write{2022,2192}
local	float	___658_cellPosition.x	%read{2232,2469} %write{2227,2227} %mystruct{___658_cellPosition} %mystructfield{0}
local	float	___658_cellPosition.y	%read{2233,2469} %write{2228,2228} %mystruct{___658_cellPosition} %mystructfield{1}
local	float	___658_cellPosition.z	%read{2234,2469} %write{2229,2229} %mystruct{___658_cellPosition} %mystructfield{2}
local	float	___658_cellPosition.w	%read{2235,2469} %write{2230,2230} %mystruct{___658_cellPosition} %mystructfield{3}
local	float	___658_localPosition.x	%read{2239,2469} %write{2232,2232} %mystruct{___658_localPosition} %mystructfield{0}
local	float	___658_localPosition.y	%read{2239,2469} %write{2233,2233} %mystruct{___658_localPosition} %mystructfield{1}
local	float	___658_localPosition.z	%read{2239,2469} %write{2234,2234} %mystruct{___658_localPosition} %mystructfield{2}
local	float	___658_localPosition.w	%read{2239,2469} %write{2235,2235} %mystruct{___658_localPosition} %mystructfield{3}
local	float	___658_vectorToClosest.x	%read{2333,2469} %write{2239,2329} %mystruct{___658_vectorToClosest} %mystructfield{0}
local	float	___658_vectorToClosest.y	%read{2333,2469} %write{2239,2329} %mystruct{___658_vectorToClosest} %mystructfield{1}
local	float	___658_vectorToClosest.z	%read{2333,2469} %write{2239,2329} %mystruct{___658_vectorToClosest} %mystructfield{2}
local	float	___658_vectorToClosest.w	%read{2333,2469} %write{2239,2329} %mystruct{___658_vectorToClosest} %mystructfield{3}
local	float	___658_minDistance	%read{2239,2470} %write{2236,2469}
local	int	___659_u	%read{2239,2329} %write{2238,2329}
local	int	___661_k	%read{2239,2329} %write{2239,2329}
local	int	___663_j	%read{2239,2329} %write{2239,2329}
local	int	___665_i	%read{2239,2329} %write{2239,2329}
local	float	___666_cellOffset.x	%read{2239,2329} %write{2239,2329} %mystruct{___666_cellOffset} %mystructfield{0}
local	float	___666_cellOffset.y	%read{2239,2329} %write{2239,2329} %mystruct{___666_cellOffset} %mystructfield{1}
local	float	___666_cellOffset.z	%read{2239,2329} %write{2239,2329} %mystruct{___666_cellOffset} %mystructfield{2}
local	float	___666_cellOffset.w	%read{2239,2329} %write{2239,2329} %mystruct{___666_cellOffset} %mystructfield{3}
local	float	___666_vectorToPoint.x	%read{2239,2329} %write{2239,2329} %mystruct{___666_vectorToPoint} %mystructfield{0}
local	float	___666_vectorToPoint.y	%read{2239,2329} %write{2239,2329} %mystruct{___666_vectorToPoint} %mystructfield{1}
local	float	___666_vectorToPoint.z	%read{2239,2329} %write{2239,2329} %mystruct{___666_vectorToPoint} %mystructfield{2}
local	float	___666_vectorToPoint.w	%read{2239,2329} %write{2239,2329} %mystruct{___666_vectorToPoint} %mystructfield{3}
local	float	___666_distanceToPoint	%read{2239,2329} %write{2239,2329}
local	int	___668_u	%read{2333,2469} %write{2332,2469}
local	int	___670_k	%read{2333,2469} %write{2333,2469}
local	int	___672_j	%read{2333,2469} %write{2333,2469}
local	int	___674_i	%read{2333,2469} %write{2333,2469}
local	float	___675_cellOffset.x	%read{2333,2469} %write{2333,2469} %mystruct{___675_cellOffset} %mystructfield{0}
local	float	___675_cellOffset.y	%read{2333,2469} %write{2333,2469} %mystruct{___675_cellOffset} %mystructfield{1}
local	float	___675_cellOffset.z	%read{2333,2469} %write{2333,2469} %mystruct{___675_cellOffset} %mystructfield{2}
local	float	___675_cellOffset.w	%read{2333,2469} %write{2333,2469} %mystruct{___675_cellOffset} %mystructfield{3}
local	float	___675_vectorToPoint.x	%read{2333,2469} %write{2333,2469} %mystruct{___675_vectorToPoint} %mystructfield{0}
local	float	___675_vectorToPoint.y	%read{2333,2469} %write{2333,2469} %mystruct{___675_vectorToPoint} %mystructfield{1}
local	float	___675_vectorToPoint.z	%read{2333,2469} %write{2333,2469} %mystruct{___675_vectorToPoint} %mystructfield{2}
local	float	___675_vectorToPoint.w	%read{2333,2469} %write{2333,2469} %mystruct{___675_vectorToPoint} %mystructfield{3}
local	float	___675_perpendicularToEdge.x	%read{2333,2469} %write{2333,2469} %mystruct{___675_perpendicularToEdge} %mystructfield{0}
local	float	___675_perpendicularToEdge.y	%read{2333,2469} %write{2333,2469} %mystruct{___675_perpendicularToEdge} %mystructfield{1}
local	float	___675_perpendicularToEdge.z	%read{2333,2469} %write{2333,2469} %mystruct{___675_perpendicularToEdge} %mystructfield{2}
local	float	___675_perpendicularToEdge.w	%read{2333,2469} %write{2333,2469} %mystruct{___675_perpendicularToEdge} %mystructfield{3}
local	float	___676_distanceToEdge	%read{2333,2469} %write{2333,2469}
local	float	___677_cellPosition.x	%read{2480,2702} %write{2475,2475} %mystruct{___677_cellPosition} %mystructfield{0}
local	float	___677_cellPosition.y	%read{2481,2702} %write{2476,2476} %mystruct{___677_cellPosition} %mystructfield{1}
local	float	___677_cellPosition.z	%read{2482,2702} %write{2477,2477} %mystruct{___677_cellPosition} %mystructfield{2}
local	float	___677_cellPosition.w	%read{2483,2702} %write{2478,2478} %mystruct{___677_cellPosition} %mystructfield{3}
local	float	___677_localPosition.x	%read{2487,2583} %write{2480,2480} %mystruct{___677_localPosition} %mystructfield{0}
local	float	___677_localPosition.y	%read{2487,2583} %write{2481,2481} %mystruct{___677_localPosition} %mystructfield{1}
local	float	___677_localPosition.z	%read{2487,2583} %write{2482,2482} %mystruct{___677_localPosition} %mystructfield{2}
local	float	___677_localPosition.w	%read{2487,2583} %write{2483,2483} %mystruct{___677_localPosition} %mystructfield{3}
local	float	___677_closestPoint.x	%read{2587,2705} %write{2487,2583} %mystruct{___677_closestPoint} %mystructfield{0}
local	float	___677_closestPoint.y	%read{2587,2706} %write{2487,2583} %mystruct{___677_closestPoint} %mystructfield{1}
local	float	___677_closestPoint.z	%read{2587,2707} %write{2487,2583} %mystruct{___677_closestPoint} %mystructfield{2}
local	float	___677_closestPoint.w	%read{2587,2708} %write{2487,2583} %mystruct{___677_closestPoint} %mystructfield{3}
local	float	___677_closestPointOffset.x	%read{2587,2702} %write{2487,2583} %mystruct{___677_closestPointOffset} %mystructfield{0}
local	float	___677_closestPointOffset.y	%read{2587,2702} %write{2487,2583} %mystruct{___677_closestPointOffset} %mystructfield{1}
local	float	___677_closestPointOffset.z	%read{2587,2702} %write{2487,2583} %mystruct{___677_closestPointOffset} %mystructfield{2}
local	float	___677_closestPointOffset.w	%read{2587,2702} %write{2487,2583} %mystruct{___677_closestPointOffset} %mystructfield{3}
local	float	___677_minDistance	%read{2487,2702} %write{2484,2702}
local	int	___678_u	%read{2487,2583} %write{2486,2583}
local	int	___680_k	%read{2487,2583} %write{2487,2583}
local	int	___682_j	%read{2487,2583} %write{2487,2583}
local	int	___684_i	%read{2487,2583} %write{2487,2583}
local	float	___685_cellOffset.x	%read{2487,2583} %write{2487,2583} %mystruct{___685_cellOffset} %mystructfield{0}
local	float	___685_cellOffset.y	%read{2487,2583} %write{2487,2583} %mystruct{___685_cellOffset} %mystructfield{1}
local	float	___685_cellOffset.z	%read{2487,2583} %write{2487,2583} %mystruct{___685_cellOffset} %mystructfield{2}
local	float	___685_cellOffset.w	%read{2487,2583} %write{2487,2583} %mystruct{___685_cellOffset} %mystructfield{3}
local	float	___685_pointPosition.x	%read{2487,2583} %write{2487,2583} %mystruct{___685_pointPosition} %mystructfield{0}
local	float	___685_pointPosition.y	%read{2487,2583} %write{2487,2583} %mystruct{___685_pointPosition} %mystructfield{1}
local	float	___685_pointPosition.z	%read{2487,2583} %write{2487,2583} %mystruct{___685_pointPosition} %mystructfield{2}
local	float	___685_pointPosition.w	%read{2487,2583} %write{2487,2583} %mystruct{___685_pointPosition} %mystructfield{3}
local	float	___685_distanceToPoint	%read{2487,2583} %write{2487,2583}
local	float	___677_closestPointToClosestPoint.x	%read{2705,2705} %write{2587,2702} %mystruct{___677_closestPointToClosestPoint} %mystructfield{0}
local	float	___677_closestPointToClosestPoint.y	%read{2706,2706} %write{2587,2702} %mystruct{___677_closestPointToClosestPoint} %mystructfield{1}
local	float	___677_closestPointToClosestPoint.z	%read{2707,2707} %write{2587,2702} %mystruct{___677_closestPointToClosestPoint} %mystructfield{2}
local	float	___677_closestPointToClosestPoint.w	%read{2708,2708} %write{2587,2702} %mystruct{___677_closestPointToClosestPoint} %mystructfield{3}
local	int	___687_u	%read{2587,2702} %write{2586,2702}
local	int	___689_k	%read{2587,2702} %write{2587,2702}
local	int	___691_j	%read{2587,2702} %write{2587,2702}
local	int	___693_i	%read{2587,2702} %write{2587,2702}
local	float	___694_cellOffset.x	%read{2587,2702} %write{2587,2702} %mystruct{___694_cellOffset} %mystructfield{0}
local	float	___694_cellOffset.y	%read{2587,2702} %write{2587,2702} %mystruct{___694_cellOffset} %mystructfield{1}
local	float	___694_cellOffset.z	%read{2587,2702} %write{2587,2702} %mystruct{___694_cellOffset} %mystructfield{2}
local	float	___694_cellOffset.w	%read{2587,2702} %write{2587,2702} %mystruct{___694_cellOffset} %mystructfield{3}
local	float	___694_pointPosition.x	%read{2587,2702} %write{2587,2702} %mystruct{___694_pointPosition} %mystructfield{0}
local	float	___694_pointPosition.y	%read{2587,2702} %write{2587,2702} %mystruct{___694_pointPosition} %mystructfield{1}
local	float	___694_pointPosition.z	%read{2587,2702} %write{2587,2702} %mystruct{___694_pointPosition} %mystructfield{2}
local	float	___694_pointPosition.w	%read{2587,2702} %write{2587,2702} %mystruct{___694_pointPosition} %mystructfield{3}
local	float	___694_distanceToPoint	%read{2587,2702} %write{2587,2702}
local	float	randomness	%read{24,2702} %write{4,4}
local	float	smoothness	%read{68,1989} %write{8,8}
local	point	coord	%read{11,1576} %write{9,13}
local	float	w	%read{19,1577} %write{12,12}
local	float	___704_coord2D.x	%read{261,761} %write{255,255} %mystruct{___704_coord2D} %mystructfield{0}
local	float	___704_coord2D.y	%read{262,762} %write{256,256} %mystruct{___704_coord2D} %mystructfield{1}
local	float	___704_outPosition2D.x	%read{887,894} %write{365,888} %mystruct{___704_outPosition2D} %mystructfield{0}
local	float	___704_outPosition2D.y	%read{891,894} %write{366,892} %mystruct{___704_outPosition2D} %mystructfield{1}
local	float	___718_coord4D.x	%read{1582,2480} %write{1574,1574} %mystruct{___718_coord4D} %mystructfield{0}
local	float	___718_coord4D.y	%read{1583,2481} %write{1575,1575} %mystruct{___718_coord4D} %mystructfield{1}
local	float	___718_coord4D.z	%read{1584,2482} %write{1576,1576} %mystruct{___718_coord4D} %mystructfield{2}
local	float	___718_coord4D.w	%read{1585,2483} %write{1577,1577} %mystruct{___718_coord4D} %mystructfield{3}
local	float	___718_outPosition4D.x	%read{2723,2738} %write{1771,2724} %mystruct{___718_outPosition4D} %mystructfield{0}
local	float	___718_outPosition4D.y	%read{2727,2738} %write{1772,2728} %mystruct{___718_outPosition4D} %mystructfield{1}
local	float	___718_outPosition4D.z	%read{2731,2738} %write{1773,2732} %mystruct{___718_outPosition4D} %mystructfield{2}
local	float	___718_outPosition4D.w	%read{2735,2739} %write{1774,2736} %mystruct{___718_outPosition4D} %mystructfield{3}
const	float	$const1	0		%read{4,2736} %write{2147483647,-1}
const	float	$const2	1		%read{3,2443} %write{2147483647,-1}
const	string	$const3	"clamp"		%read{2,6} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{3,3}
const	float	$const4	2		%read{5,2718} %write{2147483647,-1}
temp	float	$tmp2	%read{7,7} %write{5,5}
const	float	$const5	0.5		%read{7,1931} %write{2147483647,-1}
temp	float	$tmp3	%read{8,8} %write{7,7}
const	string	$const6	"1D"		%read{14,14} %write{2147483647,-1}
temp	int	$tmp4	%read{15,15} %write{14,14}
const	string	$const7	"f1"		%read{16,1578} %write{2147483647,-1}
temp	int	$tmp5	%read{17,17} %write{16,16}
const	string	$const8	"voronoi_f1_1d"		%read{18,18} %write{2147483647,-1}
const	float	$const9	8		%read{21,2584} %write{2147483647,-1}
const	int	$const10	-1		%read{23,2598} %write{2147483647,-1}
const	int	$const11	1		%read{24,2702} %write{2147483647,-1}
temp	int	$tmp6	%read{24,42} %write{24,42}
temp	int	$tmp7	%read{22,42} %write{23,42}
const	int	$const12	0		%read{25,2615} %write{2147483647,-1}
temp	float	$tmp8	%read{24,42} %write{24,42}
temp	float	$tmp9	%read{24,42} %write{24,42}
temp	float	$tmp10	%read{24,42} %write{24,42}
const	string	$const13	"hash_float_to_float"		%read{29,231} %write{2147483647,-1}
temp	float	$tmp11	%read{24,42} %write{24,42}
const	string	$const14	"voronoi_distance"		%read{33,2085} %write{2147483647,-1}
temp	float	$tmp12	%read{24,42} %write{24,42}
temp	int	$tmp13	%read{24,42} %write{24,42}
temp	int	$tmp14	%read{2147483647,-1} %write{24,42}
temp	float	$tmp15	%read{47,52} %write{44,44}
const	string	$const15	"hash_float_to_color"		%read{45,155} %write{2147483647,-1}
temp	float	$tmp16	%read{56,56} %write{47,47}
temp	float	$tmp17	%read{56,56} %write{51,51}
temp	float	$tmp18.x	%read{51,51} %write{48,48}
temp	float	$tmp18.y	%read{51,51} %write{49,49}
const	string	$const16	"hash_vector2_to_float"		%read{50,839} %write{2147483647,-1}
temp	float	$tmp19	%read{56,56} %write{55,55}
temp	float	$tmp20.x	%read{55,55} %write{52,52}
temp	float	$tmp20.y	%read{55,55} %write{53,53}
const	string	$const17	"smooth_f1"		%read{58,1775} %write{2147483647,-1}
temp	int	$tmp21	%read{59,59} %write{58,58}
const	string	$const18	"voronoi_smooth_f1_1d"		%read{60,60} %write{2147483647,-1}
const	color	$const19	0 0 0		%read{65,1789} %write{2147483647,-1}
const	int	$const20	-2		%read{67,1807} %write{2147483647,-1}
const	int	$const21	2		%read{68,1808} %write{2147483647,-1}
temp	int	$tmp22	%read{68,111} %write{68,111}
temp	int	$tmp23	%read{66,111} %write{67,111}
temp	float	$tmp24	%read{68,111} %write{68,111}
temp	float	$tmp25	%read{68,111} %write{68,111}
temp	float	$tmp26	%read{68,111} %write{68,111}
temp	float	$tmp27	%read{68,111} %write{68,111}
temp	float	$tmp28	%read{68,111} %write{68,111}
temp	float	$tmp29	%read{68,111} %write{68,111}
temp	float	$tmp30	%read{68,111} %write{68,111}
temp	float	$tmp31	%read{68,111} %write{68,111}
temp	float	$tmp32	%read{68,111} %write{68,111}
temp	float	$tmp33	%read{68,111} %write{68,111}
temp	float	$tmp34	%read{68,111} %write{68,111}
temp	float	$tmp35	%read{68,111} %write{68,111}
const	float	$const22	3		%read{90,1938} %write{2147483647,-1}
temp	float	$tmp36	%read{68,111} %write{68,111}
temp	float	$tmp37	%read{68,111} %write{68,111}
temp	float	$tmp38	%read{68,111} %write{68,111}
temp	float	$tmp39	%read{68,111} %write{68,111}
temp	float	$tmp40	%read{68,111} %write{68,111}
temp	float	$tmp41.x	%read{68,111} %write{68,111}
temp	float	$tmp41.y	%read{68,111} %write{68,111}
temp	float	$tmp42	%read{68,111} %write{68,111}
temp	float	$tmp43.x	%read{68,111} %write{68,111}
temp	float	$tmp43.y	%read{68,111} %write{68,111}
temp	color	$tmp44	%read{68,111} %write{68,111}
temp	float	$tmp45	%read{68,111} %write{68,111}
temp	int	$tmp46	%read{2147483647,-1} %write{68,111}
const	string	$const23	"f2"		%read{115,1997} %write{2147483647,-1}
temp	int	$tmp47	%read{116,116} %write{115,115}
const	string	$const24	"voronoi_f2_1d"		%read{117,117} %write{2147483647,-1}
temp	int	$tmp48	%read{126,152} %write{126,152}
temp	int	$tmp49	%read{124,152} %write{125,152}
temp	float	$tmp50	%read{126,152} %write{126,152}
temp	float	$tmp51	%read{126,152} %write{126,152}
temp	float	$tmp52	%read{126,152} %write{126,152}
temp	float	$tmp53	%read{126,152} %write{126,152}
temp	float	$tmp54	%read{126,152} %write{126,152}
temp	int	$tmp55	%read{126,152} %write{126,152}
temp	int	$tmp56	%read{126,152} %write{126,152}
temp	int	$tmp57	%read{2147483647,-1} %write{126,152}
temp	float	$tmp58	%read{157,162} %write{154,154}
temp	float	$tmp59	%read{166,166} %write{157,157}
temp	float	$tmp60	%read{166,166} %write{161,161}
temp	float	$tmp61.x	%read{161,161} %write{158,158}
temp	float	$tmp61.y	%read{161,161} %write{159,159}
temp	float	$tmp62	%read{166,166} %write{165,165}
temp	float	$tmp63.x	%read{165,165} %write{162,162}
temp	float	$tmp63.y	%read{165,165} %write{163,163}
const	string	$const25	"distance_to_edge"		%read{168,2223} %write{2147483647,-1}
temp	int	$tmp64	%read{169,169} %write{168,168}
const	string	$const26	"voronoi_distance_to_edge_1d"		%read{170,170} %write{2147483647,-1}
temp	int	$tmp65	%read{176,190} %write{176,190}
temp	int	$tmp66	%read{174,190} %write{175,190}
temp	float	$tmp67	%read{176,190} %write{176,190}
temp	float	$tmp68	%read{176,190} %write{176,190}
temp	float	$tmp69	%read{176,190} %write{176,190}
temp	float	$tmp70	%read{176,190} %write{176,190}
const	string	$const27	"distance"		%read{185,2703} %write{2147483647,-1}
temp	float	$tmp71	%read{176,190} %write{176,190}
temp	int	$tmp72	%read{2147483647,-1} %write{176,190}
const	string	$const28	"n_sphere_radius"		%read{192,2471} %write{2147483647,-1}
temp	int	$tmp73	%read{193,193} %write{192,192}
const	string	$const29	"voronoi_n_sphere_radius_1d"		%read{194,194} %write{2147483647,-1}
temp	int	$tmp74	%read{200,218} %write{200,218}
temp	int	$tmp75	%read{198,218} %write{199,218}
temp	float	$tmp76	%read{200,218} %write{200,218}
temp	float	$tmp77	%read{200,218} %write{200,218}
temp	float	$tmp78	%read{200,218} %write{200,218}
temp	float	$tmp79	%read{200,218} %write{200,218}
temp	float	$tmp80	%read{200,218} %write{200,218}
temp	int	$tmp81	%read{200,218} %write{200,218}
temp	int	$tmp82	%read{2147483647,-1} %write{200,218}
temp	int	$tmp83	%read{222,243} %write{222,243}
temp	int	$tmp84	%read{220,243} %write{221,243}
temp	int	$tmp85	%read{222,243} %write{222,243}
temp	float	$tmp86	%read{222,243} %write{222,243}
temp	float	$tmp87	%read{222,243} %write{222,243}
temp	float	$tmp88	%read{222,243} %write{222,243}
temp	float	$tmp89	%read{222,243} %write{222,243}
temp	float	$tmp90	%read{222,243} %write{222,243}
temp	float	$tmp91	%read{222,243} %write{222,243}
temp	int	$tmp92	%read{222,243} %write{222,243}
temp	int	$tmp93	%read{2147483647,-1} %write{222,243}
temp	float	$tmp94	%read{247,247} %write{246,246}
temp	float	$tmp95	%read{246,246} %write{245,245}
const	string	$const30	"Unknown feature!"		%read{248,2719} %write{2147483647,-1}
temp	int	$tmp96	%read{250,250} %write{249,249}
const	string	$const31	"2D"		%read{253,253} %write{2147483647,-1}
temp	int	$tmp97	%read{254,254} %write{253,253}
temp	int	$tmp98	%read{258,258} %write{257,257}
const	string	$const32	"voronoi_f1_2d"		%read{259,259} %write{2147483647,-1}
const	string	$const33	"floor"		%read{260,2474} %write{2147483647,-1}
const	string	$const34	"__operator__sub__"		%read{263,2704} %write{2147483647,-1}
temp	int	$tmp99	%read{269,349} %write{269,349}
temp	int	$tmp100	%read{267,349} %write{268,349}
temp	int	$tmp101	%read{269,349} %write{269,349}
temp	int	$tmp102	%read{269,349} %write{269,349}
temp	float	$tmp103.x	%read{269,349} %write{269,349}
temp	float	$tmp103.y	%read{269,349} %write{269,349}
temp	float	$tmp104.x	%read{269,349} %write{269,349}
temp	float	$tmp104.y	%read{269,349} %write{269,349}
temp	float	$tmp105.x	%read{269,349} %write{269,349}
temp	float	$tmp105.y	%read{269,349} %write{269,349}
const	string	$const35	"__operator__add__"		%read{277,2668} %write{2147483647,-1}
const	string	$const36	"hash_vector2_to_vector2"		%read{280,838} %write{2147483647,-1}
temp	point	$tmp106	%read{269,349} %write{269,349}
const	string	$const37	"hash_vector3_to_float"		%read{284,1535} %write{2147483647,-1}
const	string	$const38	"__operator__mul__"		%read{286,2663} %write{2147483647,-1}
temp	float	$tmp107.x	%read{269,349} %write{269,349}
temp	float	$tmp107.y	%read{269,349} %write{269,349}
const	string	$const39	"euclidean"		%read{296,2086} %write{2147483647,-1}
temp	int	$tmp108	%read{269,349} %write{269,349}
temp	float	$tmp109.x	%read{269,349} %write{269,349}
temp	float	$tmp109.y	%read{269,349} %write{269,349}
const	string	$const40	"length"		%read{302,2709} %write{2147483647,-1}
const	string	$const41	"hypot"		%read{303,877} %write{2147483647,-1}
temp	float	$tmp110	%read{269,349} %write{269,349}
temp	float	$tmp111	%read{269,349} %write{269,349}
temp	float	$tmp112	%read{269,349} %write{269,349}
const	string	$const42	"manhattan"		%read{309,2104} %write{2147483647,-1}
temp	int	$tmp113	%read{269,349} %write{269,349}
temp	float	$tmp114	%read{269,349} %write{269,349}
temp	float	$tmp115	%read{269,349} %write{269,349}
temp	float	$tmp116	%read{269,349} %write{269,349}
temp	float	$tmp117	%read{269,349} %write{269,349}
const	string	$const43	"chebychev"		%read{317,2118} %write{2147483647,-1}
temp	int	$tmp118	%read{269,349} %write{269,349}
temp	float	$tmp119	%read{269,349} %write{269,349}
temp	float	$tmp120	%read{269,349} %write{269,349}
temp	float	$tmp121	%read{269,349} %write{269,349}
temp	float	$tmp122	%read{269,349} %write{269,349}
const	string	$const44	"minkowski"		%read{325,2132} %write{2147483647,-1}
temp	int	$tmp123	%read{269,349} %write{269,349}
temp	float	$tmp124	%read{269,349} %write{269,349}
temp	float	$tmp125	%read{269,349} %write{269,349}
temp	float	$tmp126	%read{269,349} %write{269,349}
temp	float	$tmp127	%read{269,349} %write{269,349}
temp	float	$tmp128	%read{269,349} %write{269,349}
temp	float	$tmp129	%read{269,349} %write{269,349}
temp	float	$tmp130	%read{269,349} %write{269,349}
temp	float	$tmp131	%read{269,349} %write{269,349}
temp	int	$tmp132	%read{269,349} %write{269,349}
temp	int	$tmp133	%read{2147483647,-1} %write{269,349}
temp	int	$tmp134	%read{2147483647,-1} %write{269,349}
temp	float	$tmp135.x	%read{356,360} %write{352,352}
temp	float	$tmp135.y	%read{356,360} %write{353,353}
const	string	$const45	"hash_vector2_to_color"		%read{354,612} %write{2147483647,-1}
temp	float	$tmp136	%read{363,363} %write{356,356}
temp	float	$tmp137	%read{363,363} %write{359,359}
temp	point	$tmp138	%read{359,359} %write{357,357}
temp	float	$tmp139	%read{363,363} %write{362,362}
temp	point	$tmp140	%read{362,362} %write{360,360}
temp	int	$tmp141	%read{368,368} %write{367,367}
const	string	$const46	"voronoi_smooth_f1_2d"		%read{369,369} %write{2147483647,-1}
temp	int	$tmp142	%read{382,492} %write{382,492}
temp	int	$tmp143	%read{380,492} %write{381,492}
temp	int	$tmp144	%read{382,492} %write{382,492}
temp	int	$tmp145	%read{382,492} %write{382,492}
temp	float	$tmp146.x	%read{382,492} %write{382,492}
temp	float	$tmp146.y	%read{382,492} %write{382,492}
temp	float	$tmp147.x	%read{382,492} %write{382,492}
temp	float	$tmp147.y	%read{382,492} %write{382,492}
temp	float	$tmp148.x	%read{382,492} %write{382,492}
temp	float	$tmp148.y	%read{382,492} %write{382,492}
temp	point	$tmp149	%read{382,492} %write{382,492}
temp	float	$tmp150.x	%read{382,492} %write{382,492}
temp	float	$tmp150.y	%read{382,492} %write{382,492}
temp	int	$tmp151	%read{382,492} %write{382,492}
temp	float	$tmp152.x	%read{382,492} %write{382,492}
temp	float	$tmp152.y	%read{382,492} %write{382,492}
temp	float	$tmp153	%read{382,492} %write{382,492}
temp	float	$tmp154	%read{382,492} %write{382,492}
temp	float	$tmp155	%read{382,492} %write{382,492}
temp	int	$tmp156	%read{382,492} %write{382,492}
temp	float	$tmp157	%read{382,492} %write{382,492}
temp	float	$tmp158	%read{382,492} %write{382,492}
temp	float	$tmp159	%read{382,492} %write{382,492}
temp	float	$tmp160	%read{382,492} %write{382,492}
temp	int	$tmp161	%read{382,492} %write{382,492}
temp	float	$tmp162	%read{382,492} %write{382,492}
temp	float	$tmp163	%read{382,492} %write{382,492}
temp	float	$tmp164	%read{382,492} %write{382,492}
temp	float	$tmp165	%read{382,492} %write{382,492}
temp	int	$tmp166	%read{382,492} %write{382,492}
temp	float	$tmp167	%read{382,492} %write{382,492}
temp	float	$tmp168	%read{382,492} %write{382,492}
temp	float	$tmp169	%read{382,492} %write{382,492}
temp	float	$tmp170	%read{382,492} %write{382,492}
temp	float	$tmp171	%read{382,492} %write{382,492}
temp	float	$tmp172	%read{382,492} %write{382,492}
temp	float	$tmp173	%read{382,492} %write{382,492}
temp	float	$tmp174	%read{382,492} %write{382,492}
temp	float	$tmp175	%read{382,492} %write{382,492}
temp	float	$tmp176	%read{382,492} %write{382,492}
temp	float	$tmp177	%read{382,492} %write{382,492}
temp	float	$tmp178	%read{382,492} %write{382,492}
temp	float	$tmp179	%read{382,492} %write{382,492}
temp	float	$tmp180	%read{382,492} %write{382,492}
temp	float	$tmp181	%read{382,492} %write{382,492}
temp	float	$tmp182	%read{382,492} %write{382,492}
temp	float	$tmp183	%read{382,492} %write{382,492}
temp	float	$tmp184.x	%read{382,492} %write{382,492}
temp	float	$tmp184.y	%read{382,492} %write{382,492}
temp	float	$tmp185	%read{382,492} %write{382,492}
temp	float	$tmp186	%read{382,492} %write{382,492}
temp	point	$tmp187	%read{382,492} %write{382,492}
temp	float	$tmp188	%read{382,492} %write{382,492}
temp	point	$tmp189	%read{382,492} %write{382,492}
temp	color	$tmp190	%read{382,492} %write{382,492}
temp	float	$tmp191.x	%read{382,492} %write{382,492}
temp	float	$tmp191.y	%read{382,492} %write{382,492}
const	string	$const47	"mix"		%read{480,1967} %write{2147483647,-1}
temp	float	$tmp192.x	%read{382,492} %write{382,492}
temp	float	$tmp192.y	%read{382,492} %write{382,492}
temp	int	$tmp193	%read{2147483647,-1} %write{382,492}
temp	int	$tmp194	%read{2147483647,-1} %write{382,492}
temp	int	$tmp195	%read{499,499} %write{498,498}
const	string	$const48	"voronoi_f2_2d"		%read{500,500} %write{2147483647,-1}
temp	int	$tmp196	%read{515,607} %write{515,607}
temp	int	$tmp197	%read{513,607} %write{514,607}
temp	int	$tmp198	%read{515,607} %write{515,607}
temp	int	$tmp199	%read{515,607} %write{515,607}
temp	float	$tmp200.x	%read{515,607} %write{515,607}
temp	float	$tmp200.y	%read{515,607} %write{515,607}
temp	float	$tmp201.x	%read{515,607} %write{515,607}
temp	float	$tmp201.y	%read{515,607} %write{515,607}
temp	float	$tmp202.x	%read{515,607} %write{515,607}
temp	float	$tmp202.y	%read{515,607} %write{515,607}
temp	point	$tmp203	%read{515,607} %write{515,607}
temp	float	$tmp204.x	%read{515,607} %write{515,607}
temp	float	$tmp204.y	%read{515,607} %write{515,607}
temp	int	$tmp205	%read{515,607} %write{515,607}
temp	float	$tmp206.x	%read{515,607} %write{515,607}
temp	float	$tmp206.y	%read{515,607} %write{515,607}
temp	float	$tmp207	%read{515,607} %write{515,607}
temp	float	$tmp208	%read{515,607} %write{515,607}
temp	float	$tmp209	%read{515,607} %write{515,607}
temp	int	$tmp210	%read{515,607} %write{515,607}
temp	float	$tmp211	%read{515,607} %write{515,607}
temp	float	$tmp212	%read{515,607} %write{515,607}
temp	float	$tmp213	%read{515,607} %write{515,607}
temp	float	$tmp214	%read{515,607} %write{515,607}
temp	int	$tmp215	%read{515,607} %write{515,607}
temp	float	$tmp216	%read{515,607} %write{515,607}
temp	float	$tmp217	%read{515,607} %write{515,607}
temp	float	$tmp218	%read{515,607} %write{515,607}
temp	float	$tmp219	%read{515,607} %write{515,607}
temp	int	$tmp220	%read{515,607} %write{515,607}
temp	float	$tmp221	%read{515,607} %write{515,607}
temp	float	$tmp222	%read{515,607} %write{515,607}
temp	float	$tmp223	%read{515,607} %write{515,607}
temp	float	$tmp224	%read{515,607} %write{515,607}
temp	float	$tmp225	%read{515,607} %write{515,607}
temp	float	$tmp226	%read{515,607} %write{515,607}
temp	float	$tmp227	%read{515,607} %write{515,607}
temp	float	$tmp228	%read{515,607} %write{515,607}
temp	int	$tmp229	%read{515,607} %write{515,607}
temp	int	$tmp230	%read{515,607} %write{515,607}
temp	int	$tmp231	%read{2147483647,-1} %write{515,607}
temp	int	$tmp232	%read{2147483647,-1} %write{515,607}
temp	float	$tmp233.x	%read{614,618} %write{610,610}
temp	float	$tmp233.y	%read{614,618} %write{611,611}
temp	float	$tmp234	%read{621,621} %write{614,614}
temp	float	$tmp235	%read{621,621} %write{617,617}
temp	point	$tmp236	%read{617,617} %write{615,615}
temp	float	$tmp237	%read{621,621} %write{620,620}
temp	point	$tmp238	%read{620,620} %write{618,618}
temp	int	$tmp239	%read{626,626} %write{625,625}
const	string	$const49	"voronoi_distance_to_edge_2d"		%read{627,627} %write{2147483647,-1}
temp	int	$tmp240	%read{637,678} %write{637,678}
temp	int	$tmp241	%read{635,678} %write{636,678}
temp	int	$tmp242	%read{637,678} %write{637,678}
temp	int	$tmp243	%read{637,678} %write{637,678}
temp	float	$tmp244.x	%read{637,678} %write{637,678}
temp	float	$tmp244.y	%read{637,678} %write{637,678}
temp	float	$tmp245.x	%read{637,678} %write{637,678}
temp	float	$tmp245.y	%read{637,678} %write{637,678}
temp	float	$tmp246.x	%read{637,678} %write{637,678}
temp	float	$tmp246.y	%read{637,678} %write{637,678}
temp	float	$tmp247.x	%read{637,678} %write{637,678}
temp	float	$tmp247.y	%read{637,678} %write{637,678}
temp	point	$tmp248	%read{637,678} %write{637,678}
temp	float	$tmp249.x	%read{637,678} %write{637,678}
temp	float	$tmp249.y	%read{637,678} %write{637,678}
const	string	$const50	"dot"		%read{666,2453} %write{2147483647,-1}
temp	float	$tmp250	%read{637,678} %write{637,678}
temp	float	$tmp251	%read{637,678} %write{637,678}
temp	int	$tmp252	%read{637,678} %write{637,678}
temp	int	$tmp253	%read{2147483647,-1} %write{637,678}
temp	int	$tmp254	%read{2147483647,-1} %write{637,678}
temp	int	$tmp255	%read{682,752} %write{682,752}
temp	int	$tmp256	%read{680,752} %write{681,752}
temp	int	$tmp257	%read{682,752} %write{682,752}
temp	int	$tmp258	%read{682,752} %write{682,752}
temp	float	$tmp259.x	%read{682,752} %write{682,752}
temp	float	$tmp259.y	%read{682,752} %write{682,752}
temp	float	$tmp260.x	%read{682,752} %write{682,752}
temp	float	$tmp260.y	%read{682,752} %write{682,752}
temp	float	$tmp261.x	%read{682,752} %write{682,752}
temp	float	$tmp261.y	%read{682,752} %write{682,752}
temp	float	$tmp262.x	%read{682,752} %write{682,752}
temp	float	$tmp262.y	%read{682,752} %write{682,752}
temp	point	$tmp263	%read{682,752} %write{682,752}
temp	float	$tmp264.x	%read{682,752} %write{682,752}
temp	float	$tmp264.y	%read{682,752} %write{682,752}
temp	float	$tmp265	%read{682,752} %write{682,752}
temp	float	$tmp266	%read{682,752} %write{682,752}
temp	float	$tmp267	%read{682,752} %write{682,752}
const	float	$const51	9.99999975e-05		%read{718,2414} %write{2147483647,-1}
temp	int	$tmp268	%read{682,752} %write{682,752}
temp	float	$tmp269.x	%read{682,752} %write{682,752}
temp	float	$tmp269.y	%read{682,752} %write{682,752}
temp	float	$tmp270.x	%read{682,752} %write{682,752}
temp	float	$tmp270.y	%read{682,752} %write{682,752}
const	string	$const52	"__operator__div__"		%read{723,2442} %write{2147483647,-1}
temp	float	$tmp271.x	%read{682,752} %write{682,752}
temp	float	$tmp271.y	%read{682,752} %write{682,752}
temp	float	$tmp272.x	%read{682,752} %write{682,752}
temp	float	$tmp272.y	%read{682,752} %write{682,752}
const	string	$const53	"normalize"		%read{730,2432} %write{2147483647,-1}
temp	float	$tmp273	%read{682,752} %write{682,752}
temp	float	$tmp274	%read{682,752} %write{682,752}
temp	float	$tmp275	%read{682,752} %write{682,752}
temp	float	$tmp276	%read{682,752} %write{682,752}
temp	float	$tmp277.x	%read{682,752} %write{682,752}
temp	float	$tmp277.y	%read{682,752} %write{682,752}
temp	float	$tmp278	%read{682,752} %write{682,752}
temp	float	$tmp279	%read{682,752} %write{682,752}
temp	int	$tmp280	%read{2147483647,-1} %write{682,752}
temp	int	$tmp281	%read{2147483647,-1} %write{682,752}
temp	int	$tmp282	%read{755,755} %write{754,754}
const	string	$const54	"voronoi_n_sphere_radius_2d"		%read{756,756} %write{2147483647,-1}
temp	int	$tmp283	%read{766,812} %write{766,812}
temp	int	$tmp284	%read{764,812} %write{765,812}
temp	int	$tmp285	%read{766,812} %write{766,812}
temp	int	$tmp286	%read{766,812} %write{766,812}
temp	float	$tmp287.x	%read{766,812} %write{766,812}
temp	float	$tmp287.y	%read{766,812} %write{766,812}
temp	float	$tmp288.x	%read{766,812} %write{766,812}
temp	float	$tmp288.y	%read{766,812} %write{766,812}
temp	float	$tmp289.x	%read{766,812} %write{766,812}
temp	float	$tmp289.y	%read{766,812} %write{766,812}
temp	point	$tmp290	%read{766,812} %write{766,812}
temp	float	$tmp291.x	%read{766,812} %write{766,812}
temp	float	$tmp291.y	%read{766,812} %write{766,812}
temp	float	$tmp292.x	%read{766,812} %write{766,812}
temp	float	$tmp292.y	%read{766,812} %write{766,812}
temp	float	$tmp293	%read{766,812} %write{766,812}
temp	float	$tmp294	%read{766,812} %write{766,812}
temp	float	$tmp295	%read{766,812} %write{766,812}
temp	int	$tmp296	%read{766,812} %write{766,812}
temp	int	$tmp297	%read{2147483647,-1} %write{766,812}
temp	int	$tmp298	%read{2147483647,-1} %write{766,812}
temp	int	$tmp299	%read{816,871} %write{816,871}
temp	int	$tmp300	%read{814,871} %write{815,871}
temp	int	$tmp301	%read{816,871} %write{816,871}
temp	int	$tmp302	%read{816,871} %write{816,871}
temp	int	$tmp303	%read{816,871} %write{816,871}
temp	int	$tmp304	%read{816,871} %write{816,871}
temp	int	$tmp305	%read{816,871} %write{816,871}
temp	int	$tmp306	%read{816,871} %write{816,871}
temp	float	$tmp307.x	%read{816,871} %write{816,871}
temp	float	$tmp307.y	%read{816,871} %write{816,871}
temp	float	$tmp308.x	%read{816,871} %write{816,871}
temp	float	$tmp308.y	%read{816,871} %write{816,871}
temp	float	$tmp309.x	%read{816,871} %write{816,871}
temp	float	$tmp309.y	%read{816,871} %write{816,871}
temp	float	$tmp310.x	%read{816,871} %write{816,871}
temp	float	$tmp310.y	%read{816,871} %write{816,871}
temp	point	$tmp311	%read{816,871} %write{816,871}
temp	float	$tmp312.x	%read{816,871} %write{816,871}
temp	float	$tmp312.y	%read{816,871} %write{816,871}
temp	float	$tmp313.x	%read{816,871} %write{816,871}
temp	float	$tmp313.y	%read{816,871} %write{816,871}
temp	float	$tmp314	%read{816,871} %write{816,871}
temp	float	$tmp315	%read{816,871} %write{816,871}
temp	float	$tmp316	%read{816,871} %write{816,871}
temp	int	$tmp317	%read{816,871} %write{816,871}
temp	int	$tmp318	%read{2147483647,-1} %write{816,871}
temp	int	$tmp319	%read{2147483647,-1} %write{816,871}
temp	float	$tmp320	%read{882,882} %write{881,881}
temp	float	$tmp321.x	%read{878,878} %write{874,874}
temp	float	$tmp321.y	%read{879,879} %write{875,875}
temp	float	$tmp322	%read{880,880} %write{878,878}
temp	float	$tmp323	%read{880,880} %write{879,879}
temp	float	$tmp324	%read{881,881} %write{880,880}
const	string	$const55	"safe_divide"		%read{884,2720} %write{2147483647,-1}
temp	int	$tmp325	%read{886,886} %write{885,885}
temp	int	$tmp326	%read{890,890} %write{889,889}
const	string	$const56	"3D"		%read{895,895} %write{2147483647,-1}
temp	int	$tmp327	%read{896,896} %write{895,895}
temp	int	$tmp328	%read{898,898} %write{897,897}
const	string	$const57	"voronoi_f1_3d"		%read{899,899} %write{2147483647,-1}
temp	int	$tmp329	%read{905,1013} %write{905,1013}
temp	int	$tmp330	%read{903,1013} %write{904,1013}
temp	int	$tmp331	%read{905,1013} %write{905,1013}
temp	int	$tmp332	%read{905,1013} %write{905,1013}
temp	int	$tmp333	%read{905,1013} %write{905,1013}
temp	int	$tmp334	%read{905,1013} %write{905,1013}
temp	float	$tmp335	%read{905,1013} %write{905,1013}
temp	float	$tmp336	%read{905,1013} %write{905,1013}
temp	float	$tmp337	%read{905,1013} %write{905,1013}
temp	point	$tmp338	%read{905,1013} %write{905,1013}
temp	point	$tmp339	%read{905,1013} %write{905,1013}
const	string	$const58	"hash_vector3_to_vector3"		%read{920,1534} %write{2147483647,-1}
temp	float	$tmp340	%read{905,1013} %write{905,1013}
temp	float	$tmp341	%read{905,1013} %write{905,1013}
temp	float	$tmp342.x	%read{905,1013} %write{905,1013}
temp	float	$tmp342.y	%read{905,1013} %write{905,1013}
temp	float	$tmp342.z	%read{905,1013} %write{905,1013}
temp	float	$tmp342.w	%read{905,1013} %write{905,1013}
const	string	$const59	"hash_vector4_to_float"		%read{927,2655} %write{2147483647,-1}
temp	point	$tmp343	%read{905,1013} %write{905,1013}
temp	float	$tmp344	%read{905,1013} %write{905,1013}
temp	float	$tmp345.x	%read{905,1013} %write{905,1013}
temp	float	$tmp345.y	%read{905,1013} %write{905,1013}
temp	float	$tmp345.z	%read{905,1013} %write{905,1013}
temp	float	$tmp345.w	%read{905,1013} %write{905,1013}
temp	point	$tmp346	%read{905,1013} %write{905,1013}
temp	point	$tmp347	%read{905,1013} %write{905,1013}
temp	int	$tmp348	%read{905,1013} %write{905,1013}
temp	int	$tmp349	%read{905,1013} %write{905,1013}
temp	float	$tmp350	%read{905,1013} %write{905,1013}
temp	float	$tmp351	%read{905,1013} %write{905,1013}
temp	float	$tmp352	%read{905,1013} %write{905,1013}
temp	float	$tmp353	%read{905,1013} %write{905,1013}
temp	float	$tmp354	%read{905,1013} %write{905,1013}
temp	float	$tmp355	%read{905,1013} %write{905,1013}
temp	float	$tmp356	%read{905,1013} %write{905,1013}
temp	float	$tmp357	%read{905,1013} %write{905,1013}
temp	float	$tmp358	%read{905,1013} %write{905,1013}
temp	float	$tmp359	%read{905,1013} %write{905,1013}
temp	float	$tmp360	%read{905,1013} %write{905,1013}
temp	float	$tmp361	%read{905,1013} %write{905,1013}
temp	float	$tmp362	%read{905,1013} %write{905,1013}
temp	int	$tmp363	%read{905,1013} %write{905,1013}
temp	float	$tmp364	%read{905,1013} %write{905,1013}
temp	float	$tmp365	%read{905,1013} %write{905,1013}
temp	float	$tmp366	%read{905,1013} %write{905,1013}
temp	float	$tmp367	%read{905,1013} %write{905,1013}
temp	float	$tmp368	%read{905,1013} %write{905,1013}
temp	float	$tmp369	%read{905,1013} %write{905,1013}
temp	float	$tmp370	%read{905,1013} %write{905,1013}
temp	float	$tmp371	%read{905,1013} %write{905,1013}
temp	float	$tmp372	%read{905,1013} %write{905,1013}
temp	float	$tmp373	%read{905,1013} %write{905,1013}
temp	float	$tmp374	%read{905,1013} %write{905,1013}
temp	float	$tmp375	%read{905,1013} %write{905,1013}
temp	float	$tmp376	%read{905,1013} %write{905,1013}
temp	int	$tmp377	%read{905,1013} %write{905,1013}
temp	float	$tmp378	%read{905,1013} %write{905,1013}
temp	float	$tmp379	%read{905,1013} %write{905,1013}
temp	float	$tmp380	%read{905,1013} %write{905,1013}
temp	float	$tmp381	%read{905,1013} %write{905,1013}
temp	float	$tmp382	%read{905,1013} %write{905,1013}
temp	float	$tmp383	%read{905,1013} %write{905,1013}
temp	float	$tmp384	%read{905,1013} %write{905,1013}
temp	float	$tmp385	%read{905,1013} %write{905,1013}
temp	float	$tmp386	%read{905,1013} %write{905,1013}
temp	float	$tmp387	%read{905,1013} %write{905,1013}
temp	float	$tmp388	%read{905,1013} %write{905,1013}
temp	float	$tmp389	%read{905,1013} %write{905,1013}
temp	float	$tmp390	%read{905,1013} %write{905,1013}
temp	float	$tmp391	%read{905,1013} %write{905,1013}
temp	float	$tmp392	%read{905,1013} %write{905,1013}
temp	float	$tmp393	%read{905,1013} %write{905,1013}
temp	float	$tmp394	%read{905,1013} %write{905,1013}
temp	float	$tmp395	%read{905,1013} %write{905,1013}
temp	int	$tmp396	%read{905,1013} %write{905,1013}
temp	int	$tmp397	%read{2147483647,-1} %write{905,1013}
temp	int	$tmp398	%read{2147483647,-1} %write{905,1013}
temp	int	$tmp399	%read{2147483647,-1} %write{905,1013}
temp	point	$tmp400	%read{1018,1028} %write{1015,1015}
const	string	$const60	"hash_vector3_to_color"		%read{1016,1318} %write{2147483647,-1}
temp	float	$tmp401	%read{1033,1033} %write{1018,1018}
temp	float	$tmp402	%read{1033,1033} %write{1025,1025}
temp	float	$tmp403.x	%read{1024,1024} %write{1019,1019}
temp	float	$tmp403.y	%read{1024,1024} %write{1020,1020}
temp	float	$tmp403.z	%read{1024,1024} %write{1021,1021}
temp	float	$tmp403.w	%read{1025,1025} %write{1022,1022}
temp	point	$tmp404	%read{1025,1025} %write{1024,1024}
temp	float	$tmp405	%read{1033,1033} %write{1032,1032}
temp	float	$tmp406.x	%read{1031,1031} %write{1026,1026}
temp	float	$tmp406.y	%read{1031,1031} %write{1027,1027}
temp	float	$tmp406.z	%read{1031,1031} %write{1028,1028}
temp	float	$tmp406.w	%read{1032,1032} %write{1029,1029}
temp	point	$tmp407	%read{1032,1032} %write{1031,1031}
temp	int	$tmp408	%read{1036,1036} %write{1035,1035}
const	string	$const61	"voronoi_smooth_f1_3d"		%read{1037,1037} %write{2147483647,-1}
const	point	$const62	0 0 0		%read{1042,1571} %write{2147483647,-1}
temp	int	$tmp409	%read{1045,1184} %write{1045,1184}
temp	int	$tmp410	%read{1043,1184} %write{1044,1184}
temp	int	$tmp411	%read{1045,1184} %write{1045,1184}
temp	int	$tmp412	%read{1045,1184} %write{1045,1184}
temp	int	$tmp413	%read{1045,1184} %write{1045,1184}
temp	int	$tmp414	%read{1045,1184} %write{1045,1184}
temp	float	$tmp415	%read{1045,1184} %write{1045,1184}
temp	float	$tmp416	%read{1045,1184} %write{1045,1184}
temp	float	$tmp417	%read{1045,1184} %write{1045,1184}
temp	point	$tmp418	%read{1045,1184} %write{1045,1184}
temp	point	$tmp419	%read{1045,1184} %write{1045,1184}
temp	float	$tmp420	%read{1045,1184} %write{1045,1184}
temp	float	$tmp421	%read{1045,1184} %write{1045,1184}
temp	float	$tmp422.x	%read{1045,1184} %write{1045,1184}
temp	float	$tmp422.y	%read{1045,1184} %write{1045,1184}
temp	float	$tmp422.z	%read{1045,1184} %write{1045,1184}
temp	float	$tmp422.w	%read{1045,1184} %write{1045,1184}
temp	point	$tmp423	%read{1045,1184} %write{1045,1184}
temp	float	$tmp424	%read{1045,1184} %write{1045,1184}
temp	float	$tmp425.x	%read{1045,1184} %write{1045,1184}
temp	float	$tmp425.y	%read{1045,1184} %write{1045,1184}
temp	float	$tmp425.z	%read{1045,1184} %write{1045,1184}
temp	float	$tmp425.w	%read{1045,1184} %write{1045,1184}
temp	point	$tmp426	%read{1045,1184} %write{1045,1184}
temp	point	$tmp427	%read{1045,1184} %write{1045,1184}
temp	int	$tmp428	%read{1045,1184} %write{1045,1184}
temp	int	$tmp429	%read{1045,1184} %write{1045,1184}
temp	float	$tmp430	%read{1045,1184} %write{1045,1184}
temp	float	$tmp431	%read{1045,1184} %write{1045,1184}
temp	float	$tmp432	%read{1045,1184} %write{1045,1184}
temp	float	$tmp433	%read{1045,1184} %write{1045,1184}
temp	float	$tmp434	%read{1045,1184} %write{1045,1184}
temp	float	$tmp435	%read{1045,1184} %write{1045,1184}
temp	float	$tmp436	%read{1045,1184} %write{1045,1184}
temp	float	$tmp437	%read{1045,1184} %write{1045,1184}
temp	float	$tmp438	%read{1045,1184} %write{1045,1184}
temp	float	$tmp439	%read{1045,1184} %write{1045,1184}
temp	float	$tmp440	%read{1045,1184} %write{1045,1184}
temp	float	$tmp441	%read{1045,1184} %write{1045,1184}
temp	float	$tmp442	%read{1045,1184} %write{1045,1184}
temp	int	$tmp443	%read{1045,1184} %write{1045,1184}
temp	float	$tmp444	%read{1045,1184} %write{1045,1184}
temp	float	$tmp445	%read{1045,1184} %write{1045,1184}
temp	float	$tmp446	%read{1045,1184} %write{1045,1184}
temp	float	$tmp447	%read{1045,1184} %write{1045,1184}
temp	float	$tmp448	%read{1045,1184} %write{1045,1184}
temp	float	$tmp449	%read{1045,1184} %write{1045,1184}
temp	float	$tmp450	%read{1045,1184} %write{1045,1184}
temp	float	$tmp451	%read{1045,1184} %write{1045,1184}
temp	float	$tmp452	%read{1045,1184} %write{1045,1184}
temp	float	$tmp453	%read{1045,1184} %write{1045,1184}
temp	float	$tmp454	%read{1045,1184} %write{1045,1184}
temp	float	$tmp455	%read{1045,1184} %write{1045,1184}
temp	float	$tmp456	%read{1045,1184} %write{1045,1184}
temp	int	$tmp457	%read{1045,1184} %write{1045,1184}
temp	float	$tmp458	%read{1045,1184} %write{1045,1184}
temp	float	$tmp459	%read{1045,1184} %write{1045,1184}
temp	float	$tmp460	%read{1045,1184} %write{1045,1184}
temp	float	$tmp461	%read{1045,1184} %write{1045,1184}
temp	float	$tmp462	%read{1045,1184} %write{1045,1184}
temp	float	$tmp463	%read{1045,1184} %write{1045,1184}
temp	float	$tmp464	%read{1045,1184} %write{1045,1184}
temp	float	$tmp465	%read{1045,1184} %write{1045,1184}
temp	float	$tmp466	%read{1045,1184} %write{1045,1184}
temp	float	$tmp467	%read{1045,1184} %write{1045,1184}
temp	float	$tmp468	%read{1045,1184} %write{1045,1184}
temp	float	$tmp469	%read{1045,1184} %write{1045,1184}
temp	float	$tmp470	%read{1045,1184} %write{1045,1184}
temp	float	$tmp471	%read{1045,1184} %write{1045,1184}
temp	float	$tmp472	%read{1045,1184} %write{1045,1184}
temp	float	$tmp473	%read{1045,1184} %write{1045,1184}
temp	float	$tmp474	%read{1045,1184} %write{1045,1184}
temp	float	$tmp475	%read{1045,1184} %write{1045,1184}
temp	float	$tmp476	%read{1045,1184} %write{1045,1184}
temp	float	$tmp477	%read{1045,1184} %write{1045,1184}
temp	float	$tmp478	%read{1045,1184} %write{1045,1184}
temp	float	$tmp479	%read{1045,1184} %write{1045,1184}
temp	float	$tmp480	%read{1045,1184} %write{1045,1184}
temp	float	$tmp481	%read{1045,1184} %write{1045,1184}
temp	float	$tmp482	%read{1045,1184} %write{1045,1184}
temp	float	$tmp483	%read{1045,1184} %write{1045,1184}
temp	float	$tmp484	%read{1045,1184} %write{1045,1184}
temp	point	$tmp485	%read{1045,1184} %write{1045,1184}
temp	float	$tmp486	%read{1045,1184} %write{1045,1184}
temp	float	$tmp487	%read{1045,1184} %write{1045,1184}
temp	float	$tmp488.x	%read{1045,1184} %write{1045,1184}
temp	float	$tmp488.y	%read{1045,1184} %write{1045,1184}
temp	float	$tmp488.z	%read{1045,1184} %write{1045,1184}
temp	float	$tmp488.w	%read{1045,1184} %write{1045,1184}
temp	point	$tmp489	%read{1045,1184} %write{1045,1184}
temp	float	$tmp490	%read{1045,1184} %write{1045,1184}
temp	float	$tmp491.x	%read{1045,1184} %write{1045,1184}
temp	float	$tmp491.y	%read{1045,1184} %write{1045,1184}
temp	float	$tmp491.z	%read{1045,1184} %write{1045,1184}
temp	float	$tmp491.w	%read{1045,1184} %write{1045,1184}
temp	point	$tmp492	%read{1045,1184} %write{1045,1184}
temp	color	$tmp493	%read{1045,1184} %write{1045,1184}
temp	point	$tmp494	%read{1045,1184} %write{1045,1184}
temp	int	$tmp495	%read{2147483647,-1} %write{1045,1184}
temp	int	$tmp496	%read{2147483647,-1} %write{1045,1184}
temp	int	$tmp497	%read{2147483647,-1} %write{1045,1184}
temp	int	$tmp498	%read{1189,1189} %write{1188,1188}
const	string	$const63	"voronoi_f2_3d"		%read{1190,1190} %write{2147483647,-1}
temp	int	$tmp499	%read{1199,1315} %write{1199,1315}
temp	int	$tmp500	%read{1197,1315} %write{1198,1315}
temp	int	$tmp501	%read{1199,1315} %write{1199,1315}
temp	int	$tmp502	%read{1199,1315} %write{1199,1315}
temp	int	$tmp503	%read{1199,1315} %write{1199,1315}
temp	int	$tmp504	%read{1199,1315} %write{1199,1315}
temp	float	$tmp505	%read{1199,1315} %write{1199,1315}
temp	float	$tmp506	%read{1199,1315} %write{1199,1315}
temp	float	$tmp507	%read{1199,1315} %write{1199,1315}
temp	point	$tmp508	%read{1199,1315} %write{1199,1315}
temp	point	$tmp509	%read{1199,1315} %write{1199,1315}
temp	float	$tmp510	%read{1199,1315} %write{1199,1315}
temp	float	$tmp511	%read{1199,1315} %write{1199,1315}
temp	float	$tmp512.x	%read{1199,1315} %write{1199,1315}
temp	float	$tmp512.y	%read{1199,1315} %write{1199,1315}
temp	float	$tmp512.z	%read{1199,1315} %write{1199,1315}
temp	float	$tmp512.w	%read{1199,1315} %write{1199,1315}
temp	point	$tmp513	%read{1199,1315} %write{1199,1315}
temp	float	$tmp514	%read{1199,1315} %write{1199,1315}
temp	float	$tmp515.x	%read{1199,1315} %write{1199,1315}
temp	float	$tmp515.y	%read{1199,1315} %write{1199,1315}
temp	float	$tmp515.z	%read{1199,1315} %write{1199,1315}
temp	float	$tmp515.w	%read{1199,1315} %write{1199,1315}
temp	point	$tmp516	%read{1199,1315} %write{1199,1315}
temp	point	$tmp517	%read{1199,1315} %write{1199,1315}
temp	int	$tmp518	%read{1199,1315} %write{1199,1315}
temp	int	$tmp519	%read{1199,1315} %write{1199,1315}
temp	float	$tmp520	%read{1199,1315} %write{1199,1315}
temp	float	$tmp521	%read{1199,1315} %write{1199,1315}
temp	float	$tmp522	%read{1199,1315} %write{1199,1315}
temp	float	$tmp523	%read{1199,1315} %write{1199,1315}
temp	float	$tmp524	%read{1199,1315} %write{1199,1315}
temp	float	$tmp525	%read{1199,1315} %write{1199,1315}
temp	float	$tmp526	%read{1199,1315} %write{1199,1315}
temp	float	$tmp527	%read{1199,1315} %write{1199,1315}
temp	float	$tmp528	%read{1199,1315} %write{1199,1315}
temp	float	$tmp529	%read{1199,1315} %write{1199,1315}
temp	float	$tmp530	%read{1199,1315} %write{1199,1315}
temp	float	$tmp531	%read{1199,1315} %write{1199,1315}
temp	float	$tmp532	%read{1199,1315} %write{1199,1315}
temp	int	$tmp533	%read{1199,1315} %write{1199,1315}
temp	float	$tmp534	%read{1199,1315} %write{1199,1315}
temp	float	$tmp535	%read{1199,1315} %write{1199,1315}
temp	float	$tmp536	%read{1199,1315} %write{1199,1315}
temp	float	$tmp537	%read{1199,1315} %write{1199,1315}
temp	float	$tmp538	%read{1199,1315} %write{1199,1315}
temp	float	$tmp539	%read{1199,1315} %write{1199,1315}
temp	float	$tmp540	%read{1199,1315} %write{1199,1315}
temp	float	$tmp541	%read{1199,1315} %write{1199,1315}
temp	float	$tmp542	%read{1199,1315} %write{1199,1315}
temp	float	$tmp543	%read{1199,1315} %write{1199,1315}
temp	float	$tmp544	%read{1199,1315} %write{1199,1315}
temp	float	$tmp545	%read{1199,1315} %write{1199,1315}
temp	float	$tmp546	%read{1199,1315} %write{1199,1315}
temp	int	$tmp547	%read{1199,1315} %write{1199,1315}
temp	float	$tmp548	%read{1199,1315} %write{1199,1315}
temp	float	$tmp549	%read{1199,1315} %write{1199,1315}
temp	float	$tmp550	%read{1199,1315} %write{1199,1315}
temp	float	$tmp551	%read{1199,1315} %write{1199,1315}
temp	float	$tmp552	%read{1199,1315} %write{1199,1315}
temp	float	$tmp553	%read{1199,1315} %write{1199,1315}
temp	float	$tmp554	%read{1199,1315} %write{1199,1315}
temp	float	$tmp555	%read{1199,1315} %write{1199,1315}
temp	float	$tmp556	%read{1199,1315} %write{1199,1315}
temp	float	$tmp557	%read{1199,1315} %write{1199,1315}
temp	float	$tmp558	%read{1199,1315} %write{1199,1315}
temp	float	$tmp559	%read{1199,1315} %write{1199,1315}
temp	float	$tmp560	%read{1199,1315} %write{1199,1315}
temp	float	$tmp561	%read{1199,1315} %write{1199,1315}
temp	float	$tmp562	%read{1199,1315} %write{1199,1315}
temp	float	$tmp563	%read{1199,1315} %write{1199,1315}
temp	float	$tmp564	%read{1199,1315} %write{1199,1315}
temp	float	$tmp565	%read{1199,1315} %write{1199,1315}
temp	int	$tmp566	%read{1199,1315} %write{1199,1315}
temp	int	$tmp567	%read{1199,1315} %write{1199,1315}
temp	int	$tmp568	%read{2147483647,-1} %write{1199,1315}
temp	int	$tmp569	%read{2147483647,-1} %write{1199,1315}
temp	int	$tmp570	%read{2147483647,-1} %write{1199,1315}
temp	point	$tmp571	%read{1320,1330} %write{1317,1317}
temp	float	$tmp572	%read{1335,1335} %write{1320,1320}
temp	float	$tmp573	%read{1335,1335} %write{1327,1327}
temp	float	$tmp574.x	%read{1326,1326} %write{1321,1321}
temp	float	$tmp574.y	%read{1326,1326} %write{1322,1322}
temp	float	$tmp574.z	%read{1326,1326} %write{1323,1323}
temp	float	$tmp574.w	%read{1327,1327} %write{1324,1324}
temp	point	$tmp575	%read{1327,1327} %write{1326,1326}
temp	float	$tmp576	%read{1335,1335} %write{1334,1334}
temp	float	$tmp577.x	%read{1333,1333} %write{1328,1328}
temp	float	$tmp577.y	%read{1333,1333} %write{1329,1329}
temp	float	$tmp577.z	%read{1333,1333} %write{1330,1330}
temp	float	$tmp577.w	%read{1334,1334} %write{1331,1331}
temp	point	$tmp578	%read{1334,1334} %write{1333,1333}
temp	int	$tmp579	%read{1338,1338} %write{1337,1337}
const	string	$const64	"voronoi_distance_to_edge_3d"		%read{1339,1339} %write{2147483647,-1}
temp	int	$tmp580	%read{1345,1391} %write{1345,1391}
temp	int	$tmp581	%read{1343,1391} %write{1344,1391}
temp	int	$tmp582	%read{1345,1391} %write{1345,1391}
temp	int	$tmp583	%read{1345,1391} %write{1345,1391}
temp	int	$tmp584	%read{1345,1391} %write{1345,1391}
temp	int	$tmp585	%read{1345,1391} %write{1345,1391}
temp	float	$tmp586	%read{1345,1391} %write{1345,1391}
temp	float	$tmp587	%read{1345,1391} %write{1345,1391}
temp	float	$tmp588	%read{1345,1391} %write{1345,1391}
temp	point	$tmp589	%read{1345,1391} %write{1345,1391}
temp	point	$tmp590	%read{1345,1391} %write{1345,1391}
temp	float	$tmp591	%read{1345,1391} %write{1345,1391}
temp	float	$tmp592	%read{1345,1391} %write{1345,1391}
temp	float	$tmp593.x	%read{1345,1391} %write{1345,1391}
temp	float	$tmp593.y	%read{1345,1391} %write{1345,1391}
temp	float	$tmp593.z	%read{1345,1391} %write{1345,1391}
temp	float	$tmp593.w	%read{1345,1391} %write{1345,1391}
temp	point	$tmp594	%read{1345,1391} %write{1345,1391}
temp	float	$tmp595	%read{1345,1391} %write{1345,1391}
temp	float	$tmp596.x	%read{1345,1391} %write{1345,1391}
temp	float	$tmp596.y	%read{1345,1391} %write{1345,1391}
temp	float	$tmp596.z	%read{1345,1391} %write{1345,1391}
temp	float	$tmp596.w	%read{1345,1391} %write{1345,1391}
temp	point	$tmp597	%read{1345,1391} %write{1345,1391}
temp	point	$tmp598	%read{1345,1391} %write{1345,1391}
temp	point	$tmp599	%read{1345,1391} %write{1345,1391}
temp	int	$tmp600	%read{1345,1391} %write{1345,1391}
temp	int	$tmp601	%read{2147483647,-1} %write{1345,1391}
temp	int	$tmp602	%read{2147483647,-1} %write{1345,1391}
temp	int	$tmp603	%read{2147483647,-1} %write{1345,1391}
temp	int	$tmp604	%read{1395,1445} %write{1395,1445}
temp	int	$tmp605	%read{1393,1445} %write{1394,1445}
temp	int	$tmp606	%read{1395,1445} %write{1395,1445}
temp	int	$tmp607	%read{1395,1445} %write{1395,1445}
temp	int	$tmp608	%read{1395,1445} %write{1395,1445}
temp	int	$tmp609	%read{1395,1445} %write{1395,1445}
temp	float	$tmp610	%read{1395,1445} %write{1395,1445}
temp	float	$tmp611	%read{1395,1445} %write{1395,1445}
temp	float	$tmp612	%read{1395,1445} %write{1395,1445}
temp	point	$tmp613	%read{1395,1445} %write{1395,1445}
temp	point	$tmp614	%read{1395,1445} %write{1395,1445}
temp	float	$tmp615	%read{1395,1445} %write{1395,1445}
temp	float	$tmp616	%read{1395,1445} %write{1395,1445}
temp	float	$tmp617.x	%read{1395,1445} %write{1395,1445}
temp	float	$tmp617.y	%read{1395,1445} %write{1395,1445}
temp	float	$tmp617.z	%read{1395,1445} %write{1395,1445}
temp	float	$tmp617.w	%read{1395,1445} %write{1395,1445}
temp	point	$tmp618	%read{1395,1445} %write{1395,1445}
temp	float	$tmp619	%read{1395,1445} %write{1395,1445}
temp	float	$tmp620.x	%read{1395,1445} %write{1395,1445}
temp	float	$tmp620.y	%read{1395,1445} %write{1395,1445}
temp	float	$tmp620.z	%read{1395,1445} %write{1395,1445}
temp	float	$tmp620.w	%read{1395,1445} %write{1395,1445}
temp	point	$tmp621	%read{1395,1445} %write{1395,1445}
temp	point	$tmp622	%read{1395,1445} %write{1395,1445}
temp	point	$tmp623	%read{1395,1445} %write{1395,1445}
temp	float	$tmp624	%read{1395,1445} %write{1395,1445}
temp	int	$tmp625	%read{1395,1445} %write{1395,1445}
temp	point	$tmp626	%read{1395,1445} %write{1395,1445}
temp	point	$tmp627	%read{1395,1445} %write{1395,1445}
temp	vector	$tmp628	%read{1395,1445} %write{1395,1445}
temp	int	$tmp629	%read{2147483647,-1} %write{1395,1445}
temp	int	$tmp630	%read{2147483647,-1} %write{1395,1445}
temp	int	$tmp631	%read{2147483647,-1} %write{1395,1445}
temp	int	$tmp632	%read{1448,1448} %write{1447,1447}
const	string	$const65	"voronoi_n_sphere_radius_3d"		%read{1449,1449} %write{2147483647,-1}
temp	int	$tmp633	%read{1455,1501} %write{1455,1501}
temp	int	$tmp634	%read{1453,1501} %write{1454,1501}
temp	int	$tmp635	%read{1455,1501} %write{1455,1501}
temp	int	$tmp636	%read{1455,1501} %write{1455,1501}
temp	int	$tmp637	%read{1455,1501} %write{1455,1501}
temp	int	$tmp638	%read{1455,1501} %write{1455,1501}
temp	float	$tmp639	%read{1455,1501} %write{1455,1501}
temp	float	$tmp640	%read{1455,1501} %write{1455,1501}
temp	float	$tmp641	%read{1455,1501} %write{1455,1501}
temp	point	$tmp642	%read{1455,1501} %write{1455,1501}
temp	point	$tmp643	%read{1455,1501} %write{1455,1501}
temp	float	$tmp644	%read{1455,1501} %write{1455,1501}
temp	float	$tmp645	%read{1455,1501} %write{1455,1501}
temp	float	$tmp646.x	%read{1455,1501} %write{1455,1501}
temp	float	$tmp646.y	%read{1455,1501} %write{1455,1501}
temp	float	$tmp646.z	%read{1455,1501} %write{1455,1501}
temp	float	$tmp646.w	%read{1455,1501} %write{1455,1501}
temp	point	$tmp647	%read{1455,1501} %write{1455,1501}
temp	float	$tmp648	%read{1455,1501} %write{1455,1501}
temp	float	$tmp649.x	%read{1455,1501} %write{1455,1501}
temp	float	$tmp649.y	%read{1455,1501} %write{1455,1501}
temp	float	$tmp649.z	%read{1455,1501} %write{1455,1501}
temp	float	$tmp649.w	%read{1455,1501} %write{1455,1501}
temp	point	$tmp650	%read{1455,1501} %write{1455,1501}
temp	point	$tmp651	%read{1455,1501} %write{1455,1501}
temp	int	$tmp652	%read{1455,1501} %write{1455,1501}
temp	int	$tmp653	%read{2147483647,-1} %write{1455,1501}
temp	int	$tmp654	%read{2147483647,-1} %write{1455,1501}
temp	int	$tmp655	%read{2147483647,-1} %write{1455,1501}
temp	int	$tmp656	%read{1505,1564} %write{1505,1564}
temp	int	$tmp657	%read{1503,1564} %write{1504,1564}
temp	int	$tmp658	%read{1505,1564} %write{1505,1564}
temp	int	$tmp659	%read{1505,1564} %write{1505,1564}
temp	int	$tmp660	%read{1505,1564} %write{1505,1564}
temp	int	$tmp661	%read{1505,1564} %write{1505,1564}
temp	int	$tmp662	%read{1505,1564} %write{1505,1564}
temp	int	$tmp663	%read{1505,1564} %write{1505,1564}
temp	int	$tmp664	%read{1505,1564} %write{1505,1564}
temp	int	$tmp665	%read{1505,1564} %write{1505,1564}
temp	int	$tmp666	%read{1505,1564} %write{1505,1564}
temp	int	$tmp667	%read{1505,1564} %write{1505,1564}
temp	int	$tmp668	%read{1505,1564} %write{1505,1564}
temp	point	$tmp669	%read{1505,1564} %write{1505,1564}
temp	float	$tmp670	%read{1505,1564} %write{1505,1564}
temp	float	$tmp671	%read{1505,1564} %write{1505,1564}
temp	float	$tmp672	%read{1505,1564} %write{1505,1564}
temp	point	$tmp673	%read{1505,1564} %write{1505,1564}
temp	point	$tmp674	%read{1505,1564} %write{1505,1564}
temp	float	$tmp675	%read{1505,1564} %write{1505,1564}
temp	float	$tmp676	%read{1505,1564} %write{1505,1564}
temp	float	$tmp677.x	%read{1505,1564} %write{1505,1564}
temp	float	$tmp677.y	%read{1505,1564} %write{1505,1564}
temp	float	$tmp677.z	%read{1505,1564} %write{1505,1564}
temp	float	$tmp677.w	%read{1505,1564} %write{1505,1564}
temp	point	$tmp678	%read{1505,1564} %write{1505,1564}
temp	float	$tmp679	%read{1505,1564} %write{1505,1564}
temp	float	$tmp680.x	%read{1505,1564} %write{1505,1564}
temp	float	$tmp680.y	%read{1505,1564} %write{1505,1564}
temp	float	$tmp680.z	%read{1505,1564} %write{1505,1564}
temp	float	$tmp680.w	%read{1505,1564} %write{1505,1564}
temp	point	$tmp681	%read{1505,1564} %write{1505,1564}
temp	point	$tmp682	%read{1505,1564} %write{1505,1564}
temp	int	$tmp683	%read{1505,1564} %write{1505,1564}
temp	int	$tmp684	%read{2147483647,-1} %write{1505,1564}
temp	int	$tmp685	%read{2147483647,-1} %write{1505,1564}
temp	int	$tmp686	%read{2147483647,-1} %write{1505,1564}
temp	float	$tmp687	%read{1566,1566} %write{1565,1565}
temp	int	$tmp688	%read{1569,1569} %write{1568,1568}
const	string	$const66	"4D"		%read{1572,1572} %write{2147483647,-1}
temp	int	$tmp689	%read{1573,1573} %write{1572,1572}
temp	int	$tmp690	%read{1579,1579} %write{1578,1578}
const	string	$const67	"voronoi_f1_4d"		%read{1580,1580} %write{2147483647,-1}
temp	int	$tmp691	%read{1594,1744} %write{1594,1744}
temp	int	$tmp692	%read{1592,1744} %write{1593,1744}
temp	int	$tmp693	%read{1594,1744} %write{1594,1744}
temp	int	$tmp694	%read{1594,1744} %write{1594,1744}
temp	int	$tmp695	%read{1594,1744} %write{1594,1744}
temp	int	$tmp696	%read{1594,1744} %write{1594,1744}
temp	int	$tmp697	%read{1594,1744} %write{1594,1744}
temp	int	$tmp698	%read{1594,1744} %write{1594,1744}
temp	float	$tmp699.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp699.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp699.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp699.w	%read{1594,1744} %write{1594,1744}
temp	float	$tmp700.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp700.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp700.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp700.w	%read{1594,1744} %write{1594,1744}
temp	float	$tmp701.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp701.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp701.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp701.w	%read{1594,1744} %write{1594,1744}
const	string	$const68	"hash_vector4_to_vector4"		%read{1617,2633} %write{2147483647,-1}
temp	point	$tmp702	%read{1594,1744} %write{1594,1744}
temp	float	$tmp703.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp703.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp703.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp703.w	%read{1594,1744} %write{1594,1744}
temp	point	$tmp704	%read{1594,1744} %write{1594,1744}
temp	float	$tmp705.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp705.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp705.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp705.w	%read{1594,1744} %write{1594,1744}
temp	point	$tmp706	%read{1594,1744} %write{1594,1744}
temp	float	$tmp707.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp707.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp707.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp707.w	%read{1594,1744} %write{1594,1744}
temp	point	$tmp708	%read{1594,1744} %write{1594,1744}
temp	float	$tmp709.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp709.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp709.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp709.w	%read{1594,1744} %write{1594,1744}
temp	int	$tmp710	%read{1594,1744} %write{1594,1744}
temp	float	$tmp711.x	%read{1594,1744} %write{1594,1744}
temp	float	$tmp711.y	%read{1594,1744} %write{1594,1744}
temp	float	$tmp711.z	%read{1594,1744} %write{1594,1744}
temp	float	$tmp711.w	%read{1594,1744} %write{1594,1744}
temp	float	$tmp712	%read{1594,1744} %write{1594,1744}
temp	float	$tmp713	%read{1594,1744} %write{1594,1744}
temp	float	$tmp714	%read{1594,1744} %write{1594,1744}
temp	float	$tmp715	%read{1594,1744} %write{1594,1744}
temp	float	$tmp716	%read{1594,1744} %write{1594,1744}
temp	float	$tmp717	%read{1594,1744} %write{1594,1744}
temp	float	$tmp718	%read{1594,1744} %write{1594,1744}
temp	int	$tmp719	%read{1594,1744} %write{1594,1744}
temp	float	$tmp720	%read{1594,1744} %write{1594,1744}
temp	float	$tmp721	%read{1594,1744} %write{1594,1744}
temp	float	$tmp722	%read{1594,1744} %write{1594,1744}
temp	float	$tmp723	%read{1594,1744} %write{1594,1744}
temp	float	$tmp724	%read{1594,1744} %write{1594,1744}
temp	float	$tmp725	%read{1594,1744} %write{1594,1744}
temp	float	$tmp726	%read{1594,1744} %write{1594,1744}
temp	float	$tmp727	%read{1594,1744} %write{1594,1744}
temp	float	$tmp728	%read{1594,1744} %write{1594,1744}
temp	float	$tmp729	%read{1594,1744} %write{1594,1744}
temp	int	$tmp730	%read{1594,1744} %write{1594,1744}
temp	float	$tmp731	%read{1594,1744} %write{1594,1744}
temp	float	$tmp732	%read{1594,1744} %write{1594,1744}
temp	float	$tmp733	%read{1594,1744} %write{1594,1744}
temp	float	$tmp734	%read{1594,1744} %write{1594,1744}
temp	float	$tmp735	%read{1594,1744} %write{1594,1744}
temp	float	$tmp736	%read{1594,1744} %write{1594,1744}
temp	float	$tmp737	%read{1594,1744} %write{1594,1744}
temp	float	$tmp738	%read{1594,1744} %write{1594,1744}
temp	float	$tmp739	%read{1594,1744} %write{1594,1744}
temp	float	$tmp740	%read{1594,1744} %write{1594,1744}
temp	int	$tmp741	%read{1594,1744} %write{1594,1744}
temp	float	$tmp742	%read{1594,1744} %write{1594,1744}
temp	float	$tmp743	%read{1594,1744} %write{1594,1744}
temp	float	$tmp744	%read{1594,1744} %write{1594,1744}
temp	float	$tmp745	%read{1594,1744} %write{1594,1744}
temp	float	$tmp746	%read{1594,1744} %write{1594,1744}
temp	float	$tmp747	%read{1594,1744} %write{1594,1744}
temp	float	$tmp748	%read{1594,1744} %write{1594,1744}
temp	float	$tmp749	%read{1594,1744} %write{1594,1744}
temp	float	$tmp750	%read{1594,1744} %write{1594,1744}
temp	float	$tmp751	%read{1594,1744} %write{1594,1744}
temp	float	$tmp752	%read{1594,1744} %write{1594,1744}
temp	float	$tmp753	%read{1594,1744} %write{1594,1744}
temp	float	$tmp754	%read{1594,1744} %write{1594,1744}
temp	float	$tmp755	%read{1594,1744} %write{1594,1744}
temp	float	$tmp756	%read{1594,1744} %write{1594,1744}
temp	float	$tmp757	%read{1594,1744} %write{1594,1744}
temp	int	$tmp758	%read{1594,1744} %write{1594,1744}
temp	int	$tmp759	%read{2147483647,-1} %write{1594,1744}
temp	int	$tmp760	%read{2147483647,-1} %write{1594,1744}
temp	int	$tmp761	%read{2147483647,-1} %write{1594,1744}
temp	int	$tmp762	%read{2147483647,-1} %write{1594,1744}
temp	float	$tmp763.x	%read{1753,1765} %write{1747,1747}
temp	float	$tmp763.y	%read{1753,1764} %write{1748,1748}
temp	float	$tmp763.z	%read{1753,1763} %write{1749,1749}
temp	float	$tmp763.w	%read{1754,1762} %write{1750,1750}
const	string	$const69	"hash_vector4_to_color"		%read{1751,2199} %write{2147483647,-1}
temp	float	$tmp764	%read{1769,1769} %write{1754,1754}
temp	point	$tmp765	%read{1754,1754} %write{1753,1753}
temp	float	$tmp766	%read{1769,1769} %write{1761,1761}
temp	float	$tmp767.x	%read{1760,1760} %write{1755,1755}
temp	float	$tmp767.y	%read{1760,1760} %write{1756,1756}
temp	float	$tmp767.z	%read{1760,1760} %write{1757,1757}
temp	float	$tmp767.w	%read{1761,1761} %write{1758,1758}
temp	point	$tmp768	%read{1761,1761} %write{1760,1760}
temp	float	$tmp769	%read{1769,1769} %write{1768,1768}
temp	float	$tmp770.x	%read{1767,1767} %write{1762,1762}
temp	float	$tmp770.y	%read{1767,1767} %write{1763,1763}
temp	float	$tmp770.z	%read{1767,1767} %write{1764,1764}
temp	float	$tmp770.w	%read{1768,1768} %write{1765,1765}
temp	point	$tmp771	%read{1768,1768} %write{1767,1767}
temp	int	$tmp772	%read{1776,1776} %write{1775,1775}
const	string	$const70	"voronoi_smooth_f1_4d"		%read{1777,1777} %write{2147483647,-1}
temp	int	$tmp773	%read{1796,1989} %write{1796,1989}
temp	int	$tmp774	%read{1794,1989} %write{1795,1989}
temp	int	$tmp775	%read{1796,1989} %write{1796,1989}
temp	int	$tmp776	%read{1796,1989} %write{1796,1989}
temp	int	$tmp777	%read{1796,1989} %write{1796,1989}
temp	int	$tmp778	%read{1796,1989} %write{1796,1989}
temp	int	$tmp779	%read{1796,1989} %write{1796,1989}
temp	int	$tmp780	%read{1796,1989} %write{1796,1989}
temp	float	$tmp781.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp781.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp781.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp781.w	%read{1796,1989} %write{1796,1989}
temp	float	$tmp782.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp782.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp782.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp782.w	%read{1796,1989} %write{1796,1989}
temp	float	$tmp783.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp783.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp783.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp783.w	%read{1796,1989} %write{1796,1989}
temp	point	$tmp784	%read{1796,1989} %write{1796,1989}
temp	float	$tmp785.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp785.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp785.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp785.w	%read{1796,1989} %write{1796,1989}
temp	point	$tmp786	%read{1796,1989} %write{1796,1989}
temp	float	$tmp787.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp787.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp787.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp787.w	%read{1796,1989} %write{1796,1989}
temp	point	$tmp788	%read{1796,1989} %write{1796,1989}
temp	float	$tmp789.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp789.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp789.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp789.w	%read{1796,1989} %write{1796,1989}
temp	point	$tmp790	%read{1796,1989} %write{1796,1989}
temp	float	$tmp791.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp791.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp791.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp791.w	%read{1796,1989} %write{1796,1989}
temp	int	$tmp792	%read{1796,1989} %write{1796,1989}
temp	float	$tmp793.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp793.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp793.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp793.w	%read{1796,1989} %write{1796,1989}
temp	float	$tmp794	%read{1796,1989} %write{1796,1989}
temp	float	$tmp795	%read{1796,1989} %write{1796,1989}
temp	float	$tmp796	%read{1796,1989} %write{1796,1989}
temp	float	$tmp797	%read{1796,1989} %write{1796,1989}
temp	float	$tmp798	%read{1796,1989} %write{1796,1989}
temp	float	$tmp799	%read{1796,1989} %write{1796,1989}
temp	float	$tmp800	%read{1796,1989} %write{1796,1989}
temp	int	$tmp801	%read{1796,1989} %write{1796,1989}
temp	float	$tmp802	%read{1796,1989} %write{1796,1989}
temp	float	$tmp803	%read{1796,1989} %write{1796,1989}
temp	float	$tmp804	%read{1796,1989} %write{1796,1989}
temp	float	$tmp805	%read{1796,1989} %write{1796,1989}
temp	float	$tmp806	%read{1796,1989} %write{1796,1989}
temp	float	$tmp807	%read{1796,1989} %write{1796,1989}
temp	float	$tmp808	%read{1796,1989} %write{1796,1989}
temp	float	$tmp809	%read{1796,1989} %write{1796,1989}
temp	float	$tmp810	%read{1796,1989} %write{1796,1989}
temp	float	$tmp811	%read{1796,1989} %write{1796,1989}
temp	int	$tmp812	%read{1796,1989} %write{1796,1989}
temp	float	$tmp813	%read{1796,1989} %write{1796,1989}
temp	float	$tmp814	%read{1796,1989} %write{1796,1989}
temp	float	$tmp815	%read{1796,1989} %write{1796,1989}
temp	float	$tmp816	%read{1796,1989} %write{1796,1989}
temp	float	$tmp817	%read{1796,1989} %write{1796,1989}
temp	float	$tmp818	%read{1796,1989} %write{1796,1989}
temp	float	$tmp819	%read{1796,1989} %write{1796,1989}
temp	float	$tmp820	%read{1796,1989} %write{1796,1989}
temp	float	$tmp821	%read{1796,1989} %write{1796,1989}
temp	float	$tmp822	%read{1796,1989} %write{1796,1989}
temp	int	$tmp823	%read{1796,1989} %write{1796,1989}
temp	float	$tmp824	%read{1796,1989} %write{1796,1989}
temp	float	$tmp825	%read{1796,1989} %write{1796,1989}
temp	float	$tmp826	%read{1796,1989} %write{1796,1989}
temp	float	$tmp827	%read{1796,1989} %write{1796,1989}
temp	float	$tmp828	%read{1796,1989} %write{1796,1989}
temp	float	$tmp829	%read{1796,1989} %write{1796,1989}
temp	float	$tmp830	%read{1796,1989} %write{1796,1989}
temp	float	$tmp831	%read{1796,1989} %write{1796,1989}
temp	float	$tmp832	%read{1796,1989} %write{1796,1989}
temp	float	$tmp833	%read{1796,1989} %write{1796,1989}
temp	float	$tmp834	%read{1796,1989} %write{1796,1989}
temp	float	$tmp835	%read{1796,1989} %write{1796,1989}
temp	float	$tmp836	%read{1796,1989} %write{1796,1989}
temp	float	$tmp837	%read{1796,1989} %write{1796,1989}
temp	float	$tmp838	%read{1796,1989} %write{1796,1989}
temp	float	$tmp839	%read{1796,1989} %write{1796,1989}
temp	float	$tmp840	%read{1796,1989} %write{1796,1989}
temp	float	$tmp841	%read{1796,1989} %write{1796,1989}
temp	float	$tmp842	%read{1796,1989} %write{1796,1989}
temp	float	$tmp843	%read{1796,1989} %write{1796,1989}
temp	float	$tmp844	%read{1796,1989} %write{1796,1989}
temp	float	$tmp845	%read{1796,1989} %write{1796,1989}
temp	float	$tmp846	%read{1796,1989} %write{1796,1989}
temp	float	$tmp847	%read{1796,1989} %write{1796,1989}
temp	float	$tmp848	%read{1796,1989} %write{1796,1989}
temp	float	$tmp849.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp849.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp849.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp849.w	%read{1796,1989} %write{1796,1989}
temp	float	$tmp850	%read{1796,1989} %write{1796,1989}
temp	point	$tmp851	%read{1796,1989} %write{1796,1989}
temp	float	$tmp852	%read{1796,1989} %write{1796,1989}
temp	float	$tmp853.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp853.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp853.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp853.w	%read{1796,1989} %write{1796,1989}
temp	point	$tmp854	%read{1796,1989} %write{1796,1989}
temp	float	$tmp855	%read{1796,1989} %write{1796,1989}
temp	float	$tmp856.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp856.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp856.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp856.w	%read{1796,1989} %write{1796,1989}
temp	point	$tmp857	%read{1796,1989} %write{1796,1989}
temp	color	$tmp858	%read{1796,1989} %write{1796,1989}
temp	float	$tmp859.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp859.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp859.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp859.w	%read{1796,1989} %write{1796,1989}
temp	float	$tmp860.x	%read{1796,1989} %write{1796,1989}
temp	float	$tmp860.y	%read{1796,1989} %write{1796,1989}
temp	float	$tmp860.z	%read{1796,1989} %write{1796,1989}
temp	float	$tmp860.w	%read{1796,1989} %write{1796,1989}
temp	int	$tmp861	%read{2147483647,-1} %write{1796,1989}
temp	int	$tmp862	%read{2147483647,-1} %write{1796,1989}
temp	int	$tmp863	%read{2147483647,-1} %write{1796,1989}
temp	int	$tmp864	%read{2147483647,-1} %write{1796,1989}
temp	int	$tmp865	%read{1998,1998} %write{1997,1997}
const	string	$const71	"voronoi_f2_4d"		%read{1999,1999} %write{2147483647,-1}
temp	int	$tmp866	%read{2022,2192} %write{2022,2192}
temp	int	$tmp867	%read{2020,2192} %write{2021,2192}
temp	int	$tmp868	%read{2022,2192} %write{2022,2192}
temp	int	$tmp869	%read{2022,2192} %write{2022,2192}
temp	int	$tmp870	%read{2022,2192} %write{2022,2192}
temp	int	$tmp871	%read{2022,2192} %write{2022,2192}
temp	int	$tmp872	%read{2022,2192} %write{2022,2192}
temp	int	$tmp873	%read{2022,2192} %write{2022,2192}
temp	float	$tmp874.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp874.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp874.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp874.w	%read{2022,2192} %write{2022,2192}
temp	float	$tmp875.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp875.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp875.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp875.w	%read{2022,2192} %write{2022,2192}
temp	float	$tmp876.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp876.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp876.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp876.w	%read{2022,2192} %write{2022,2192}
temp	point	$tmp877	%read{2022,2192} %write{2022,2192}
temp	float	$tmp878.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp878.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp878.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp878.w	%read{2022,2192} %write{2022,2192}
temp	point	$tmp879	%read{2022,2192} %write{2022,2192}
temp	float	$tmp880.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp880.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp880.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp880.w	%read{2022,2192} %write{2022,2192}
temp	point	$tmp881	%read{2022,2192} %write{2022,2192}
temp	float	$tmp882.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp882.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp882.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp882.w	%read{2022,2192} %write{2022,2192}
temp	point	$tmp883	%read{2022,2192} %write{2022,2192}
temp	float	$tmp884.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp884.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp884.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp884.w	%read{2022,2192} %write{2022,2192}
temp	int	$tmp885	%read{2022,2192} %write{2022,2192}
temp	float	$tmp886.x	%read{2022,2192} %write{2022,2192}
temp	float	$tmp886.y	%read{2022,2192} %write{2022,2192}
temp	float	$tmp886.z	%read{2022,2192} %write{2022,2192}
temp	float	$tmp886.w	%read{2022,2192} %write{2022,2192}
temp	float	$tmp887	%read{2022,2192} %write{2022,2192}
temp	float	$tmp888	%read{2022,2192} %write{2022,2192}
temp	float	$tmp889	%read{2022,2192} %write{2022,2192}
temp	float	$tmp890	%read{2022,2192} %write{2022,2192}
temp	float	$tmp891	%read{2022,2192} %write{2022,2192}
temp	float	$tmp892	%read{2022,2192} %write{2022,2192}
temp	float	$tmp893	%read{2022,2192} %write{2022,2192}
temp	int	$tmp894	%read{2022,2192} %write{2022,2192}
temp	float	$tmp895	%read{2022,2192} %write{2022,2192}
temp	float	$tmp896	%read{2022,2192} %write{2022,2192}
temp	float	$tmp897	%read{2022,2192} %write{2022,2192}
temp	float	$tmp898	%read{2022,2192} %write{2022,2192}
temp	float	$tmp899	%read{2022,2192} %write{2022,2192}
temp	float	$tmp900	%read{2022,2192} %write{2022,2192}
temp	float	$tmp901	%read{2022,2192} %write{2022,2192}
temp	float	$tmp902	%read{2022,2192} %write{2022,2192}
temp	float	$tmp903	%read{2022,2192} %write{2022,2192}
temp	float	$tmp904	%read{2022,2192} %write{2022,2192}
temp	int	$tmp905	%read{2022,2192} %write{2022,2192}
temp	float	$tmp906	%read{2022,2192} %write{2022,2192}
temp	float	$tmp907	%read{2022,2192} %write{2022,2192}
temp	float	$tmp908	%read{2022,2192} %write{2022,2192}
temp	float	$tmp909	%read{2022,2192} %write{2022,2192}
temp	float	$tmp910	%read{2022,2192} %write{2022,2192}
temp	float	$tmp911	%read{2022,2192} %write{2022,2192}
temp	float	$tmp912	%read{2022,2192} %write{2022,2192}
temp	float	$tmp913	%read{2022,2192} %write{2022,2192}
temp	float	$tmp914	%read{2022,2192} %write{2022,2192}
temp	float	$tmp915	%read{2022,2192} %write{2022,2192}
temp	int	$tmp916	%read{2022,2192} %write{2022,2192}
temp	float	$tmp917	%read{2022,2192} %write{2022,2192}
temp	float	$tmp918	%read{2022,2192} %write{2022,2192}
temp	float	$tmp919	%read{2022,2192} %write{2022,2192}
temp	float	$tmp920	%read{2022,2192} %write{2022,2192}
temp	float	$tmp921	%read{2022,2192} %write{2022,2192}
temp	float	$tmp922	%read{2022,2192} %write{2022,2192}
temp	float	$tmp923	%read{2022,2192} %write{2022,2192}
temp	float	$tmp924	%read{2022,2192} %write{2022,2192}
temp	float	$tmp925	%read{2022,2192} %write{2022,2192}
temp	float	$tmp926	%read{2022,2192} %write{2022,2192}
temp	float	$tmp927	%read{2022,2192} %write{2022,2192}
temp	float	$tmp928	%read{2022,2192} %write{2022,2192}
temp	float	$tmp929	%read{2022,2192} %write{2022,2192}
temp	float	$tmp930	%read{2022,2192} %write{2022,2192}
temp	float	$tmp931	%read{2022,2192} %write{2022,2192}
temp	float	$tmp932	%read{2022,2192} %write{2022,2192}
temp	int	$tmp933	%read{2022,2192} %write{2022,2192}
temp	int	$tmp934	%read{2022,2192} %write{2022,2192}
temp	int	$tmp935	%read{2147483647,-1} %write{2022,2192}
temp	int	$tmp936	%read{2147483647,-1} %write{2022,2192}
temp	int	$tmp937	%read{2147483647,-1} %write{2022,2192}
temp	int	$tmp938	%read{2147483647,-1} %write{2022,2192}
temp	float	$tmp939.x	%read{2201,2213} %write{2195,2195}
temp	float	$tmp939.y	%read{2201,2212} %write{2196,2196}
temp	float	$tmp939.z	%read{2201,2211} %write{2197,2197}
temp	float	$tmp939.w	%read{2202,2210} %write{2198,2198}
temp	float	$tmp940	%read{2217,2217} %write{2202,2202}
temp	point	$tmp941	%read{2202,2202} %write{2201,2201}
temp	float	$tmp942	%read{2217,2217} %write{2209,2209}
temp	float	$tmp943.x	%read{2208,2208} %write{2203,2203}
temp	float	$tmp943.y	%read{2208,2208} %write{2204,2204}
temp	float	$tmp943.z	%read{2208,2208} %write{2205,2205}
temp	float	$tmp943.w	%read{2209,2209} %write{2206,2206}
temp	point	$tmp944	%read{2209,2209} %write{2208,2208}
temp	float	$tmp945	%read{2217,2217} %write{2216,2216}
temp	float	$tmp946.x	%read{2215,2215} %write{2210,2210}
temp	float	$tmp946.y	%read{2215,2215} %write{2211,2211}
temp	float	$tmp946.z	%read{2215,2215} %write{2212,2212}
temp	float	$tmp946.w	%read{2216,2216} %write{2213,2213}
temp	point	$tmp947	%read{2216,2216} %write{2215,2215}
temp	int	$tmp948	%read{2224,2224} %write{2223,2223}
const	string	$const72	"voronoi_distance_to_edge_4d"		%read{2225,2225} %write{2147483647,-1}
temp	int	$tmp949	%read{2239,2329} %write{2239,2329}
temp	int	$tmp950	%read{2237,2329} %write{2238,2329}
temp	int	$tmp951	%read{2239,2329} %write{2239,2329}
temp	int	$tmp952	%read{2239,2329} %write{2239,2329}
temp	int	$tmp953	%read{2239,2329} %write{2239,2329}
temp	int	$tmp954	%read{2239,2329} %write{2239,2329}
temp	int	$tmp955	%read{2239,2329} %write{2239,2329}
temp	int	$tmp956	%read{2239,2329} %write{2239,2329}
temp	float	$tmp957.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp957.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp957.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp957.w	%read{2239,2329} %write{2239,2329}
temp	float	$tmp958.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp958.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp958.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp958.w	%read{2239,2329} %write{2239,2329}
temp	float	$tmp959.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp959.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp959.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp959.w	%read{2239,2329} %write{2239,2329}
temp	float	$tmp960.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp960.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp960.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp960.w	%read{2239,2329} %write{2239,2329}
temp	point	$tmp961	%read{2239,2329} %write{2239,2329}
temp	float	$tmp962.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp962.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp962.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp962.w	%read{2239,2329} %write{2239,2329}
temp	point	$tmp963	%read{2239,2329} %write{2239,2329}
temp	float	$tmp964.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp964.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp964.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp964.w	%read{2239,2329} %write{2239,2329}
temp	point	$tmp965	%read{2239,2329} %write{2239,2329}
temp	float	$tmp966.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp966.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp966.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp966.w	%read{2239,2329} %write{2239,2329}
temp	point	$tmp967	%read{2239,2329} %write{2239,2329}
temp	float	$tmp968.x	%read{2239,2329} %write{2239,2329}
temp	float	$tmp968.y	%read{2239,2329} %write{2239,2329}
temp	float	$tmp968.z	%read{2239,2329} %write{2239,2329}
temp	float	$tmp968.w	%read{2239,2329} %write{2239,2329}
temp	float	$tmp969	%read{2239,2329} %write{2239,2329}
temp	float	$tmp970	%read{2239,2329} %write{2239,2329}
temp	float	$tmp971	%read{2239,2329} %write{2239,2329}
temp	float	$tmp972	%read{2239,2329} %write{2239,2329}
temp	float	$tmp973	%read{2239,2329} %write{2239,2329}
temp	float	$tmp974	%read{2239,2329} %write{2239,2329}
temp	int	$tmp975	%read{2239,2329} %write{2239,2329}
temp	int	$tmp976	%read{2147483647,-1} %write{2239,2329}
temp	int	$tmp977	%read{2147483647,-1} %write{2239,2329}
temp	int	$tmp978	%read{2147483647,-1} %write{2239,2329}
temp	int	$tmp979	%read{2147483647,-1} %write{2239,2329}
temp	int	$tmp980	%read{2333,2469} %write{2333,2469}
temp	int	$tmp981	%read{2331,2469} %write{2332,2469}
temp	int	$tmp982	%read{2333,2469} %write{2333,2469}
temp	int	$tmp983	%read{2333,2469} %write{2333,2469}
temp	int	$tmp984	%read{2333,2469} %write{2333,2469}
temp	int	$tmp985	%read{2333,2469} %write{2333,2469}
temp	int	$tmp986	%read{2333,2469} %write{2333,2469}
temp	int	$tmp987	%read{2333,2469} %write{2333,2469}
temp	float	$tmp988.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp988.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp988.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp988.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp989.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp989.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp989.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp989.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp990.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp990.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp990.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp990.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp991.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp991.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp991.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp991.w	%read{2333,2469} %write{2333,2469}
temp	point	$tmp992	%read{2333,2469} %write{2333,2469}
temp	float	$tmp993.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp993.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp993.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp993.w	%read{2333,2469} %write{2333,2469}
temp	point	$tmp994	%read{2333,2469} %write{2333,2469}
temp	float	$tmp995.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp995.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp995.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp995.w	%read{2333,2469} %write{2333,2469}
temp	point	$tmp996	%read{2333,2469} %write{2333,2469}
temp	float	$tmp997.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp997.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp997.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp997.w	%read{2333,2469} %write{2333,2469}
temp	point	$tmp998	%read{2333,2469} %write{2333,2469}
temp	float	$tmp999.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp999.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp999.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp999.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1000	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1001	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1002	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1003	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1004	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1005	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1006	%read{2333,2469} %write{2333,2469}
temp	int	$tmp1007	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1008.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1008.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1008.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1008.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1009.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1009.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1009.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1009.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1010.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1010.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1010.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1010.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1011.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1011.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1011.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1011.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1012	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1013	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1014	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1015	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1016	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1017	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1018	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1019	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1020.x	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1020.y	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1020.z	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1020.w	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1021	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1022	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1023	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1024	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1025	%read{2333,2469} %write{2333,2469}
temp	float	$tmp1026	%read{2333,2469} %write{2333,2469}
temp	int	$tmp1027	%read{2147483647,-1} %write{2333,2469}
temp	int	$tmp1028	%read{2147483647,-1} %write{2333,2469}
temp	int	$tmp1029	%read{2147483647,-1} %write{2333,2469}
temp	int	$tmp1030	%read{2147483647,-1} %write{2333,2469}
temp	int	$tmp1031	%read{2472,2472} %write{2471,2471}
const	string	$const73	"voronoi_n_sphere_radius_4d"		%read{2473,2473} %write{2147483647,-1}
temp	int	$tmp1032	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1033	%read{2485,2583} %write{2486,2583}
temp	int	$tmp1034	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1035	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1036	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1037	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1038	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1039	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1040.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1040.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1040.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1040.w	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1041.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1041.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1041.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1041.w	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1042.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1042.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1042.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1042.w	%read{2487,2583} %write{2487,2583}
temp	point	$tmp1043	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1044.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1044.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1044.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1044.w	%read{2487,2583} %write{2487,2583}
temp	point	$tmp1045	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1046.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1046.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1046.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1046.w	%read{2487,2583} %write{2487,2583}
temp	point	$tmp1047	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1048.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1048.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1048.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1048.w	%read{2487,2583} %write{2487,2583}
temp	point	$tmp1049	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1050.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1050.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1050.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1050.w	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1051.x	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1051.y	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1051.z	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1051.w	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1052	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1053	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1054	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1055	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1056	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1057	%read{2487,2583} %write{2487,2583}
temp	float	$tmp1058	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1059	%read{2487,2583} %write{2487,2583}
temp	int	$tmp1060	%read{2147483647,-1} %write{2487,2583}
temp	int	$tmp1061	%read{2147483647,-1} %write{2487,2583}
temp	int	$tmp1062	%read{2147483647,-1} %write{2487,2583}
temp	int	$tmp1063	%read{2147483647,-1} %write{2487,2583}
temp	int	$tmp1064	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1065	%read{2585,2702} %write{2586,2702}
temp	int	$tmp1066	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1067	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1068	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1069	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1070	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1071	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1072	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1073	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1074	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1075	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1076	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1077	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1078	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1079	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1080	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1081	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1082.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1082.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1082.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1082.w	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1083.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1083.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1083.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1083.w	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1084.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1084.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1084.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1084.w	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1085.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1085.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1085.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1085.w	%read{2587,2702} %write{2587,2702}
temp	point	$tmp1086	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1087.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1087.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1087.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1087.w	%read{2587,2702} %write{2587,2702}
temp	point	$tmp1088	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1089.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1089.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1089.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1089.w	%read{2587,2702} %write{2587,2702}
temp	point	$tmp1090	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1091.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1091.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1091.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1091.w	%read{2587,2702} %write{2587,2702}
temp	point	$tmp1092	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1093.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1093.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1093.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1093.w	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1094.x	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1094.y	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1094.z	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1094.w	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1095	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1096	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1097	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1098	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1099	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1100	%read{2587,2702} %write{2587,2702}
temp	float	$tmp1101	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1102	%read{2587,2702} %write{2587,2702}
temp	int	$tmp1103	%read{2147483647,-1} %write{2587,2702}
temp	int	$tmp1104	%read{2147483647,-1} %write{2587,2702}
temp	int	$tmp1105	%read{2147483647,-1} %write{2587,2702}
temp	int	$tmp1106	%read{2147483647,-1} %write{2587,2702}
temp	float	$tmp1107	%read{2718,2718} %write{2717,2717}
temp	float	$tmp1108.x	%read{2710,2710} %write{2705,2705}
temp	float	$tmp1108.y	%read{2711,2711} %write{2706,2706}
temp	float	$tmp1108.z	%read{2713,2713} %write{2707,2707}
temp	float	$tmp1108.w	%read{2715,2715} %write{2708,2708}
temp	float	$tmp1109	%read{2712,2712} %write{2710,2710}
temp	float	$tmp1110	%read{2712,2712} %write{2711,2711}
temp	float	$tmp1111	%read{2714,2714} %write{2712,2712}
temp	float	$tmp1112	%read{2714,2714} %write{2713,2713}
temp	float	$tmp1113	%read{2716,2716} %write{2714,2714}
temp	float	$tmp1114	%read{2716,2716} %write{2715,2715}
temp	float	$tmp1115	%read{2717,2717} %write{2716,2716}
temp	int	$tmp1116	%read{2722,2722} %write{2721,2721}
temp	int	$tmp1117	%read{2726,2726} %write{2725,2725}
temp	int	$tmp1118	%read{2730,2730} %write{2729,2729}
temp	int	$tmp1119	%read{2734,2734} %write{2733,2733}
const	string	$const74	"Unknown dimension!"		%read{2740,2740} %write{2147483647,-1}
code Vector
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:908
#     vector3 Vector = P,
	assign		Vector P 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{908} %argrw{"wr"}
code Position
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:916
#     output vector3 Position = P,
	assign		Position P 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{916} %argrw{"wr"}
code ___main___
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:920
#   float randomness = clamp(Randomness, 0.0, 1.0);
	functioncall	$const3 5 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{920} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 Randomness $const2 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{163} %argrw{"wrr"}
	max		randomness $tmp1 $const1 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:921
#   float smoothness = clamp(Smoothness / 2.0, 0.0, 0.5);
	div		$tmp2 Smoothness $const4 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{921} %argrw{"wrr"}
	functioncall	$const3 9 	%argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp3 $tmp2 $const5 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{163} %argrw{"wrr"}
	max		smoothness $tmp3 $const1 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:923
#   vector3 coord = Vector;
	assign		coord Vector 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{923} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:924
#   if (use_mapping)
	if		use_mapping 12 12 	%line{924} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:925
#     coord = transform(mapping, coord);
	transform	coord mapping coord 	%line{925} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:927
#   float w = WIn * Scale;
	mul		w WIn Scale 	%line{927} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:928
#   coord *= Scale;
	mul		coord coord Scale 	%line{928} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:930
#   if (dimensions == "1D") {
	eq		$tmp4 dimensions $const6 	%line{930} %argrw{"wrr"}
	if		$tmp4 253 2741 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:931
#     if (feature == "f1") {
	eq		$tmp5 feature $const7 	%line{931} %argrw{"wrr"}
	if		$tmp5 58 249 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:932
#       voronoi_f1_1d(w, Exponent, randomness, metric, Distance, Color, WOut);
	functioncall	$const8 58 	%line{932} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:82
#   float cellPosition = floor(w);
	floor		___491_cellPosition w 	%line{82} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:83
#   float localPosition = w - cellPosition;
	sub		___491_localPosition w ___491_cellPosition 	%line{83} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:85
#   float minDistance = 8.0;
	assign		___491_minDistance $const9 	%line{85} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:87
#   for (int i = -1; i <= 1; i++) {
	for		$tmp7 24 26 41 43 	%line{87} %argrw{"r"}
	assign		___492_i $const10 	%argrw{"wr"}
	le		$tmp6 ___492_i $const11 	%argrw{"wrr"}
	neq		$tmp7 $tmp6 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:88
#     float cellOffset = float(i);
	assign		$tmp8 ___492_i 	%line{88} %argrw{"wr"}
	assign		___493_cellOffset $tmp8 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:89
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	add		$tmp10 ___491_cellPosition ___493_cellOffset 	%line{89} %argrw{"wrr"}
	functioncall	$const13 31 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp9 $tmp10 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:89
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	mul		$tmp11 $tmp9 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{89} %argrw{"wrr"}
	add		___493_pointPosition ___493_cellOffset $tmp11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:90
#     float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 36 	%line{90} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:71
#   return abs(a - b);
	sub		$tmp12 ___493_pointPosition ___491_localPosition 	%line{71} %argrw{"wrr"}
	abs		___493_distanceToPoint $tmp12 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:91
#     if (distanceToPoint < minDistance) {
	lt		$tmp13 ___493_distanceToPoint ___491_minDistance 	%line{91} %argrw{"wrr"}
	if		$tmp13 41 41 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:92
#       targetOffset = cellOffset;
	assign		___491_targetOffset ___493_cellOffset 	%line{92} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:93
#       minDistance = distanceToPoint;
	assign		___491_minDistance ___493_distanceToPoint 	%line{93} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:94
#       targetPosition = pointPosition;
	assign		___491_targetPosition ___493_pointPosition 	%line{94} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:87
#   for (int i = -1; i <= 1; i++) {
	assign		$tmp14 ___492_i 	%line{87} %argrw{"wr"}
	add		___492_i ___492_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:97
#   outDistance = minDistance;
	assign		Distance ___491_minDistance 	%line{97} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:98
#   outColor = hash_float_to_color(cellPosition + targetOffset);
	add		$tmp15 ___491_cellPosition ___491_targetOffset 	%line{98} %argrw{"wrr"}
	functioncall	$const15 57 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:55
#   return color(hash_float_to_float(k),
	functioncall	$const13 48 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{55} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp16 $tmp15 	%line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:56
#                hash_vector2_to_float(vector2(k, 1.0)),
	assign		$tmp18.x $tmp15 	%line{56} %argrw{"wr"}
	assign		$tmp18.y $const2 	%argrw{"wr"}
	functioncall	$const16 52 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp17 $tmp18.x $tmp18.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:57
#                hash_vector2_to_float(vector2(k, 2.0)));
	assign		$tmp20.x $tmp15 	%line{57} %argrw{"wr"}
	assign		$tmp20.y $const4 	%argrw{"wr"}
	functioncall	$const16 56 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp19 $tmp20.x $tmp20.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:55
#   return color(hash_float_to_float(k),
	color		Color $tmp16 $tmp17 $tmp19 	%line{55} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:99
#   outW = targetPosition + cellPosition;
	add		WOut ___491_targetPosition ___491_cellPosition 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{99} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:934
#     else if (feature == "smooth_f1") {
	eq		$tmp21 feature $const17 	%line{934} %argrw{"wrr"}
	if		$tmp21 115 249 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:935
#       voronoi_smooth_f1_1d(w, smoothness, Exponent, randomness, metric, Distance, Color, WOut);
	functioncall	$const18 115 	%line{935} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:111
#   float cellPosition = floor(w);
	floor		___495_cellPosition w 	%line{111} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:112
#   float localPosition = w - cellPosition;
	sub		___495_localPosition w ___495_cellPosition 	%line{112} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:114
#   float smoothDistance = 8.0;
	assign		___495_smoothDistance $const9 	%line{114} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:115
#   float smoothPosition = 0.0;
	assign		___495_smoothPosition $const1 	%line{115} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:116
#   color smoothColor = color(0.0);
	assign		___495_smoothColor $const19 	%line{116} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:117
#   for (int i = -2; i <= 2; i++) {
	for		$tmp23 68 70 110 112 	%line{117} %argrw{"r"}
	assign		___496_i $const20 	%argrw{"wr"}
	le		$tmp22 ___496_i $const21 	%argrw{"wrr"}
	neq		$tmp23 $tmp22 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:118
#     float cellOffset = float(i);
	assign		$tmp24 ___496_i 	%line{118} %argrw{"wr"}
	assign		___497_cellOffset $tmp24 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:119
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	add		$tmp26 ___495_cellPosition ___497_cellOffset 	%line{119} %argrw{"wrr"}
	functioncall	$const13 75 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp25 $tmp26 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:119
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	mul		$tmp27 $tmp25 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{119} %argrw{"wrr"}
	add		___497_pointPosition ___497_cellOffset $tmp27 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:120
#     float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 80 	%line{120} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:71
#   return abs(a - b);
	sub		$tmp28 ___497_pointPosition ___495_localPosition 	%line{71} %argrw{"wrr"}
	abs		___497_distanceToPoint $tmp28 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:121
#     float h = smoothstep(0.0, 1.0, 0.5 + 0.5 * (smoothDistance - distanceToPoint) / smoothness);
	sub		$tmp29 ___495_smoothDistance ___497_distanceToPoint 	%line{121} %argrw{"wrr"}
	mul		$tmp30 $const5 $tmp29 	%argrw{"wrr"}
	div		$tmp31 $tmp30 smoothness 	%argrw{"wrr"}
	add		$tmp32 $const5 $tmp31 	%argrw{"wrr"}
	smoothstep	___497_h $const1 $const2 $tmp32 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:122
#     float correctionFactor = smoothness * h * (1.0 - h);
	mul		$tmp33 smoothness ___497_h 	%line{122} %argrw{"wrr"}
	sub		$tmp34 $const2 ___497_h 	%argrw{"wrr"}
	mul		___497_correctionFactor $tmp33 $tmp34 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:123
#     smoothDistance = mix(smoothDistance, distanceToPoint, h) - correctionFactor;
	mix		$tmp35 ___495_smoothDistance ___497_distanceToPoint ___497_h 	%line{123} %argrw{"wrrr"}
	sub		___495_smoothDistance $tmp35 ___497_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:124
#     correctionFactor /= 1.0 + 3.0 * smoothness;
	mul		$tmp36 $const22 smoothness 	%line{124} %argrw{"wrr"}
	add		$tmp37 $const2 $tmp36 	%argrw{"wrr"}
	div		___497_correctionFactor ___497_correctionFactor $tmp37 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:125
#     color cellColor = hash_float_to_color(cellPosition + cellOffset);
	add		$tmp38 ___495_cellPosition ___497_cellOffset 	%line{125} %argrw{"wrr"}
	functioncall	$const15 106 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:55
#   return color(hash_float_to_float(k),
	functioncall	$const13 97 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{55} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp39 $tmp38 	%line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:56
#                hash_vector2_to_float(vector2(k, 1.0)),
	assign		$tmp41.x $tmp38 	%line{56} %argrw{"wr"}
	assign		$tmp41.y $const2 	%argrw{"wr"}
	functioncall	$const16 101 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp40 $tmp41.x $tmp41.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:57
#                hash_vector2_to_float(vector2(k, 2.0)));
	assign		$tmp43.x $tmp38 	%line{57} %argrw{"wr"}
	assign		$tmp43.y $const4 	%argrw{"wr"}
	functioncall	$const16 105 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp42 $tmp43.x $tmp43.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:55
#   return color(hash_float_to_float(k),
	color		___497_cellColor $tmp39 $tmp40 $tmp42 	%line{55} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:126
#     smoothColor = mix(smoothColor, cellColor, h) - correctionFactor;
	mix		$tmp44 ___495_smoothColor ___497_cellColor ___497_h 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{126} %argrw{"wrrr"}
	sub		___495_smoothColor $tmp44 ___497_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:127
#     smoothPosition = mix(smoothPosition, pointPosition, h) - correctionFactor;
	mix		$tmp45 ___495_smoothPosition ___497_pointPosition ___497_h 	%line{127} %argrw{"wrrr"}
	sub		___495_smoothPosition $tmp45 ___497_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:117
#   for (int i = -2; i <= 2; i++) {
	assign		$tmp46 ___496_i 	%line{117} %argrw{"wr"}
	add		___496_i ___496_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:129
#   outDistance = smoothDistance;
	assign		Distance ___495_smoothDistance 	%line{129} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:130
#   outColor = smoothColor;
	assign		Color ___495_smoothColor 	%line{130} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:131
#   outW = cellPosition + smoothPosition;
	add		WOut ___495_cellPosition ___495_smoothPosition 	%line{131} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:937
#     else if (feature == "f2") {
	eq		$tmp47 feature $const23 	%line{937} %argrw{"wrr"}
	if		$tmp47 168 249 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:938
#       voronoi_f2_1d(w, Exponent, randomness, metric, Distance, Color, WOut);
	functioncall	$const24 168 	%line{938} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:142
#   float cellPosition = floor(w);
	floor		___498_cellPosition w 	%line{142} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:143
#   float localPosition = w - cellPosition;
	sub		___498_localPosition w ___498_cellPosition 	%line{143} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:145
#   float distanceF1 = 8.0;
	assign		___498_distanceF1 $const9 	%line{145} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:146
#   float distanceF2 = 8.0;
	assign		___498_distanceF2 $const9 	%line{146} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:147
#   float offsetF1 = 0.0;
	assign		___498_offsetF1 $const1 	%line{147} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:148
#   float positionF1 = 0.0;
	assign		___498_positionF1 $const1 	%line{148} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:150
#   for (int i = -1; i <= 1; i++) {
	for		$tmp49 126 128 151 153 	%line{150} %argrw{"r"}
	assign		___499_i $const10 	%argrw{"wr"}
	le		$tmp48 ___499_i $const11 	%argrw{"wrr"}
	neq		$tmp49 $tmp48 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:151
#     float cellOffset = float(i);
	assign		$tmp50 ___499_i 	%line{151} %argrw{"wr"}
	assign		___500_cellOffset $tmp50 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:152
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	add		$tmp52 ___498_cellPosition ___500_cellOffset 	%line{152} %argrw{"wrr"}
	functioncall	$const13 133 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp51 $tmp52 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:152
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	mul		$tmp53 $tmp51 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{152} %argrw{"wrr"}
	add		___500_pointPosition ___500_cellOffset $tmp53 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:153
#     float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 138 	%line{153} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:71
#   return abs(a - b);
	sub		$tmp54 ___500_pointPosition ___498_localPosition 	%line{71} %argrw{"wrr"}
	abs		___500_distanceToPoint $tmp54 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:154
#     if (distanceToPoint < distanceF1) {
	lt		$tmp55 ___500_distanceToPoint ___498_distanceF1 	%line{154} %argrw{"wrr"}
	if		$tmp55 146 151 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:155
#       distanceF2 = distanceF1;
	assign		___498_distanceF2 ___498_distanceF1 	%line{155} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:156
#       distanceF1 = distanceToPoint;
	assign		___498_distanceF1 ___500_distanceToPoint 	%line{156} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:157
#       offsetF2 = offsetF1;
	assign		___498_offsetF2 ___498_offsetF1 	%line{157} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:158
#       offsetF1 = cellOffset;
	assign		___498_offsetF1 ___500_cellOffset 	%line{158} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:159
#       positionF2 = positionF1;
	assign		___498_positionF2 ___498_positionF1 	%line{159} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:160
#       positionF1 = pointPosition;
	assign		___498_positionF1 ___500_pointPosition 	%line{160} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:162
#     else if (distanceToPoint < distanceF2) {
	lt		$tmp56 ___500_distanceToPoint ___498_distanceF2 	%line{162} %argrw{"wrr"}
	if		$tmp56 151 151 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:163
#       distanceF2 = distanceToPoint;
	assign		___498_distanceF2 ___500_distanceToPoint 	%line{163} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:164
#       offsetF2 = cellOffset;
	assign		___498_offsetF2 ___500_cellOffset 	%line{164} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:165
#       positionF2 = pointPosition;
	assign		___498_positionF2 ___500_pointPosition 	%line{165} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:150
#   for (int i = -1; i <= 1; i++) {
	assign		$tmp57 ___499_i 	%line{150} %argrw{"wr"}
	add		___499_i ___499_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:168
#   outDistance = distanceF2;
	assign		Distance ___498_distanceF2 	%line{168} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:169
#   outColor = hash_float_to_color(cellPosition + offsetF2);
	add		$tmp58 ___498_cellPosition ___498_offsetF2 	%line{169} %argrw{"wrr"}
	functioncall	$const15 167 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:55
#   return color(hash_float_to_float(k),
	functioncall	$const13 158 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{55} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp59 $tmp58 	%line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:56
#                hash_vector2_to_float(vector2(k, 1.0)),
	assign		$tmp61.x $tmp58 	%line{56} %argrw{"wr"}
	assign		$tmp61.y $const2 	%argrw{"wr"}
	functioncall	$const16 162 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp60 $tmp61.x $tmp61.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:57
#                hash_vector2_to_float(vector2(k, 2.0)));
	assign		$tmp63.x $tmp58 	%line{57} %argrw{"wr"}
	assign		$tmp63.y $const4 	%argrw{"wr"}
	functioncall	$const16 166 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp62 $tmp63.x $tmp63.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:55
#   return color(hash_float_to_float(k),
	color		Color $tmp59 $tmp60 $tmp62 	%line{55} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:170
#   outW = positionF2 + cellPosition;
	add		WOut ___498_positionF2 ___498_cellPosition 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{170} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:940
#     else if (feature == "distance_to_edge") {
	eq		$tmp64 feature $const25 	%line{940} %argrw{"wrr"}
	if		$tmp64 192 249 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:941
#       voronoi_distance_to_edge_1d(w, randomness, Distance);
	functioncall	$const26 192 	%line{941} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:175
#   float cellPosition = floor(w);
	floor		___503_cellPosition w 	%line{175} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:176
#   float localPosition = w - cellPosition;
	sub		___503_localPosition w ___503_cellPosition 	%line{176} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:178
#   float minDistance = 8.0;
	assign		___503_minDistance $const9 	%line{178} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:179
#   for (int i = -1; i <= 1; i++) {
	for		$tmp66 176 178 189 191 	%line{179} %argrw{"r"}
	assign		___504_i $const10 	%argrw{"wr"}
	le		$tmp65 ___504_i $const11 	%argrw{"wrr"}
	neq		$tmp66 $tmp65 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:180
#     float cellOffset = float(i);
	assign		$tmp67 ___504_i 	%line{180} %argrw{"wr"}
	assign		___505_cellOffset $tmp67 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:181
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	add		$tmp69 ___503_cellPosition ___505_cellOffset 	%line{181} %argrw{"wrr"}
	functioncall	$const13 183 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp68 $tmp69 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:181
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	mul		$tmp70 $tmp68 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{181} %argrw{"wrr"}
	add		___505_pointPosition ___505_cellOffset $tmp70 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:182
#     float distanceToPoint = distance(pointPosition, localPosition);
	functioncall	$const27 188 	%line{182} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:28
#   return abs(a - b);
	sub		$tmp71 ___505_pointPosition ___503_localPosition 	%line{28} %argrw{"wrr"}
	abs		___505_distanceToPoint $tmp71 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:183
#     minDistance = min(distanceToPoint, minDistance);
	min		___503_minDistance ___505_distanceToPoint ___503_minDistance 	%line{183} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:179
#   for (int i = -1; i <= 1; i++) {
	assign		$tmp72 ___504_i 	%line{179} %argrw{"wr"}
	add		___504_i ___504_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:185
#   outDistance = minDistance;
	assign		Distance ___503_minDistance 	%line{185} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:943
#     else if (feature == "n_sphere_radius") {
	eq		$tmp73 feature $const28 	%line{943} %argrw{"wrr"}
	if		$tmp73 248 249 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:944
#       voronoi_n_sphere_radius_1d(w, randomness, Radius);
	functioncall	$const29 248 	%line{944} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:190
#   float cellPosition = floor(w);
	floor		___506_cellPosition w 	%line{190} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:191
#   float localPosition = w - cellPosition;
	sub		___506_localPosition w ___506_cellPosition 	%line{191} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:195
#   float minDistance = 8.0;
	assign		___506_minDistance $const9 	%line{195} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:196
#   for (int i = -1; i <= 1; i++) {
	for		$tmp75 200 202 217 219 	%line{196} %argrw{"r"}
	assign		___507_i $const10 	%argrw{"wr"}
	le		$tmp74 ___507_i $const11 	%argrw{"wrr"}
	neq		$tmp75 $tmp74 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:197
#     float cellOffset = float(i);
	assign		$tmp76 ___507_i 	%line{197} %argrw{"wr"}
	assign		___508_cellOffset $tmp76 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:198
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	add		$tmp78 ___506_cellPosition ___508_cellOffset 	%line{198} %argrw{"wrr"}
	functioncall	$const13 207 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp77 $tmp78 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:198
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	mul		$tmp79 $tmp77 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{198} %argrw{"wrr"}
	add		___508_pointPosition ___508_cellOffset $tmp79 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:199
#     float distanceToPoint = distance(pointPosition, localPosition);
	functioncall	$const27 212 	%line{199} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:28
#   return abs(a - b);
	sub		$tmp80 ___508_pointPosition ___506_localPosition 	%line{28} %argrw{"wrr"}
	abs		___508_distanceToPoint $tmp80 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:200
#     if (distanceToPoint < minDistance) {
	lt		$tmp81 ___508_distanceToPoint ___506_minDistance 	%line{200} %argrw{"wrr"}
	if		$tmp81 217 217 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:201
#       minDistance = distanceToPoint;
	assign		___506_minDistance ___508_distanceToPoint 	%line{201} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:202
#       closestPoint = pointPosition;
	assign		___506_closestPoint ___508_pointPosition 	%line{202} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:203
#       closestPointOffset = cellOffset;
	assign		___506_closestPointOffset ___508_cellOffset 	%line{203} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:196
#   for (int i = -1; i <= 1; i++) {
	assign		$tmp82 ___507_i 	%line{196} %argrw{"wr"}
	add		___507_i ___507_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:207
#   minDistance = 8.0;
	assign		___506_minDistance $const9 	%line{207} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:209
#   for (int i = -1; i <= 1; i++) {
	for		$tmp84 222 224 242 244 	%line{209} %argrw{"r"}
	assign		___510_i $const10 	%argrw{"wr"}
	le		$tmp83 ___510_i $const11 	%argrw{"wrr"}
	neq		$tmp84 $tmp83 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:210
#     if (i == 0) {
	eq		$tmp85 ___510_i $const12 	%line{210} %argrw{"wrr"}
	if		$tmp85 227 227 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:211
#       continue;
	continue	%line{211}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:213
#     float cellOffset = float(i) + closestPointOffset;
	assign		$tmp87 ___510_i 	%line{213} %argrw{"wr"}
	assign		$tmp86 $tmp87 	%argrw{"wr"}
	add		___511_cellOffset $tmp86 ___506_closestPointOffset 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:214
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	add		$tmp89 ___506_cellPosition ___511_cellOffset 	%line{214} %argrw{"wrr"}
	functioncall	$const13 233 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:11
#   return hashnoise(k);
	hashnoise	$tmp88 $tmp89 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{11} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:214
#     float pointPosition = cellOffset + hash_float_to_float(cellPosition + cellOffset) * randomness;
	mul		$tmp90 $tmp88 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{214} %argrw{"wrr"}
	add		___511_pointPosition ___511_cellOffset $tmp90 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:215
#     float distanceToPoint = distance(closestPoint, pointPosition);
	functioncall	$const27 238 	%line{215} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:28
#   return abs(a - b);
	sub		$tmp91 ___506_closestPoint ___511_pointPosition 	%line{28} %argrw{"wrr"}
	abs		___511_distanceToPoint $tmp91 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:216
#     if (distanceToPoint < minDistance) {
	lt		$tmp92 ___511_distanceToPoint ___506_minDistance 	%line{216} %argrw{"wrr"}
	if		$tmp92 242 242 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:217
#       minDistance = distanceToPoint;
	assign		___506_minDistance ___511_distanceToPoint 	%line{217} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:218
#       closestPointToClosestPoint = pointPosition;
	assign		___506_closestPointToClosestPoint ___511_pointPosition 	%line{218} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:209
#   for (int i = -1; i <= 1; i++) {
	assign		$tmp93 ___510_i 	%line{209} %argrw{"wr"}
	add		___510_i ___510_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:221
#   outRadius = distance(closestPointToClosestPoint, closestPoint) / 2.0;
	functioncall	$const27 247 	%line{221} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:28
#   return abs(a - b);
	sub		$tmp95 ___506_closestPointToClosestPoint ___506_closestPoint 	%line{28} %argrw{"wrr"}
	abs		$tmp94 $tmp95 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:221
#   outRadius = distance(closestPointToClosestPoint, closestPoint) / 2.0;
	div		Radius $tmp94 $const4 	%line{221} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:947
#       error("Unknown feature!");
	error		$const30 	%line{947} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:949
#     WOut = (Scale != 0.0) ? WOut / Scale : 0.0;
	neq		$tmp96 Scale $const1 	%line{949} %argrw{"wrr"}
	if		$tmp96 252 253 	%argrw{"r"}
	div		WOut WOut Scale 	%argrw{"wrr"}
	assign		WOut $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:951
#   else if (dimensions == "2D") {
	eq		$tmp97 dimensions $const31 	%line{951} %argrw{"wrr"}
	if		$tmp97 895 2741 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:952
#     vector2 coord2D = vector2(coord[0], coord[1]);
	compref		___704_coord2D.x coord $const12 	%line{952} %argrw{"wrr"}
	compref		___704_coord2D.y coord $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:954
#     if (feature == "f1") {
	eq		$tmp98 feature $const7 	%line{954} %argrw{"wrr"}
	if		$tmp98 367 884 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:955
#       voronoi_f1_2d(coord2D, Exponent, randomness, metric, Distance, Color, outPosition2D);
	functioncall	$const32 367 	%line{955} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:253
#   vector2 cellPosition = floor(coord);
	functioncall	$const33 263 	%line{253} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:156
#     return vector2 (floor(a.x), floor(a.y));
	floor		___520_cellPosition.x ___704_coord2D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{156} %argrw{"wr"}
	floor		___520_cellPosition.y ___704_coord2D.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 266 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___520_localPosition.x ___704_coord2D.x ___520_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___520_localPosition.y ___704_coord2D.y ___520_cellPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:256
#   float minDistance = 8.0;
	assign		___520_minDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{256} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:258
#   for (int j = -1; j <= 1; j++) {
	for		$tmp100 269 271 348 350 	%line{258} %argrw{"r"}
	assign		___521_j $const10 	%argrw{"wr"}
	le		$tmp99 ___521_j $const11 	%argrw{"wrr"}
	neq		$tmp100 $tmp99 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:259
#     for (int i = -1; i <= 1; i++) {
	for		$tmp102 273 275 346 348 	%line{259} %argrw{"r"}
	assign		___523_i $const10 	%argrw{"wr"}
	le		$tmp101 ___523_i $const11 	%argrw{"wrr"}
	neq		$tmp102 $tmp101 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:260
#       vector2 cellOffset = vector2(i, j);
	assign		___524_cellOffset.x ___523_i 	%line{260} %argrw{"wr"}
	assign		___524_cellOffset.y ___521_j 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 280 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp105.x ___520_cellPosition.x ___524_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp105.y ___520_cellPosition.y ___524_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:262
#                               hash_vector2_to_vector2(cellPosition + cellOffset) * randomness;
	functioncall	$const36 286 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{262} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	functioncall	$const16 283 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{33} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp104.x $tmp105.x $tmp105.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	point		$tmp106 $tmp105.x $tmp105.y $const2 	%line{33} %argrw{"wrrr"}
	functioncall	$const37 286 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp104.y $tmp106 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 292 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp107.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp107.y randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 292 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp103.x $tmp104.x $tmp107.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp103.y $tmp104.y $tmp107.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 295 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___524_pointPosition.x ___524_cellOffset.x $tmp103.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___524_pointPosition.y ___524_cellOffset.y $tmp103.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:263
#       float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 339 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{263} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:228
#   if (metric == "euclidean") {
	eq		$tmp108 metric $const39 	%line{228} %argrw{"wrr"}
	if		$tmp108 309 339 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:229
#     return distance(a, b);
	functioncall	$const27 308 	%line{229} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 302 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		$tmp109.x ___524_pointPosition.x ___520_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		$tmp109.y ___524_pointPosition.y ___520_localPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:33
#   return length(a - b);
	functioncall	$const40 308 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{33} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:191
#     return hypot (a.x, a.y);
	functioncall	$const41 308 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{191} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:123
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp110 $tmp109.x $tmp109.x 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{123} %argrw{"wrr"}
	mul		$tmp111 $tmp109.y $tmp109.y 	%argrw{"wrr"}
	add		$tmp112 $tmp110 $tmp111 	%argrw{"wrr"}
	sqrt		___524_distanceToPoint $tmp112 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:229
#     return distance(a, b);
	return	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{229}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:231
#   else if (metric == "manhattan") {
	eq		$tmp113 metric $const42 	%line{231} %argrw{"wrr"}
	if		$tmp113 317 339 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:232
#     return abs(a.x - b.x) + abs(a.y - b.y);
	sub		$tmp115 ___524_pointPosition.x ___520_localPosition.x 	%line{232} %argrw{"wrr"}
	abs		$tmp114 $tmp115 	%argrw{"wr"}
	sub		$tmp117 ___524_pointPosition.y ___520_localPosition.y 	%argrw{"wrr"}
	abs		$tmp116 $tmp117 	%argrw{"wr"}
	add		___524_distanceToPoint $tmp114 $tmp116 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:234
#   else if (metric == "chebychev") {
	eq		$tmp118 metric $const43 	%line{234} %argrw{"wrr"}
	if		$tmp118 325 339 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:235
#     return max(abs(a.x - b.x), abs(a.y - b.y));
	sub		$tmp120 ___524_pointPosition.x ___520_localPosition.x 	%line{235} %argrw{"wrr"}
	abs		$tmp119 $tmp120 	%argrw{"wr"}
	sub		$tmp122 ___524_pointPosition.y ___520_localPosition.y 	%argrw{"wrr"}
	abs		$tmp121 $tmp122 	%argrw{"wr"}
	max		___524_distanceToPoint $tmp119 $tmp121 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:237
#   else if (metric == "minkowski") {
	eq		$tmp123 metric $const44 	%line{237} %argrw{"wrr"}
	if		$tmp123 337 339 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:238
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent), 1.0 / exponent);
	sub		$tmp126 ___524_pointPosition.x ___520_localPosition.x 	%line{238} %argrw{"wrr"}
	abs		$tmp125 $tmp126 	%argrw{"wr"}
	pow		$tmp124 $tmp125 Exponent 	%argrw{"wrr"}
	sub		$tmp129 ___524_pointPosition.y ___520_localPosition.y 	%argrw{"wrr"}
	abs		$tmp128 $tmp129 	%argrw{"wr"}
	pow		$tmp127 $tmp128 Exponent 	%argrw{"wrr"}
	add		$tmp130 $tmp124 $tmp127 	%argrw{"wrr"}
	div		$tmp131 $const2 Exponent 	%argrw{"wrr"}
	pow		___524_distanceToPoint $tmp130 $tmp131 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:241
#     return 0.0;
	assign		___524_distanceToPoint $const1 	%line{241} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:264
#       if (distanceToPoint < minDistance) {
	lt		$tmp132 ___524_distanceToPoint ___520_minDistance 	%line{264} %argrw{"wrr"}
	if		$tmp132 346 346 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:265
#         targetOffset = cellOffset;
	assign		___520_targetOffset.x ___524_cellOffset.x 	%line{265} %argrw{"wr"}
	assign		___520_targetOffset.y ___524_cellOffset.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:266
#         minDistance = distanceToPoint;
	assign		___520_minDistance ___524_distanceToPoint 	%line{266} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:267
#         targetPosition = pointPosition;
	assign		___520_targetPosition.x ___524_pointPosition.x 	%line{267} %argrw{"wr"}
	assign		___520_targetPosition.y ___524_pointPosition.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:259
#     for (int i = -1; i <= 1; i++) {
	assign		$tmp133 ___523_i 	%line{259} %argrw{"wr"}
	add		___523_i ___523_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:258
#   for (int j = -1; j <= 1; j++) {
	assign		$tmp134 ___521_j 	%line{258} %argrw{"wr"}
	add		___521_j ___521_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:271
#   outDistance = minDistance;
	assign		Distance ___520_minDistance 	%line{271} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 354 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp135.x ___520_cellPosition.x ___520_targetOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp135.y ___520_cellPosition.y ___520_targetOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:272
#   outColor = hash_vector2_to_color(cellPosition + targetOffset);
	functioncall	$const45 364 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{272} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:62
#   return color(hash_vector2_to_float(k),
	functioncall	$const16 357 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{62} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp136 $tmp135.x $tmp135.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:63
#                hash_vector3_to_float(vector3(k.x, k.y, 1.0)),
	point		$tmp138 $tmp135.x $tmp135.y $const2 	%line{63} %argrw{"wrrr"}
	functioncall	$const37 360 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp137 $tmp138 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:64
#                hash_vector3_to_float(vector3(k.x, k.y, 2.0)));
	point		$tmp140 $tmp135.x $tmp135.y $const4 	%line{64} %argrw{"wrrr"}
	functioncall	$const37 363 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp139 $tmp140 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:62
#   return color(hash_vector2_to_float(k),
	color		Color $tmp136 $tmp137 $tmp139 	%line{62} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 367 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___704_outPosition2D.x ___520_targetPosition.x ___520_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___704_outPosition2D.y ___520_targetPosition.y ___520_cellPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:957
#     else if (feature == "smooth_f1") {
	eq		$tmp141 feature $const17 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{957} %argrw{"wrr"}
	if		$tmp141 498 884 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:958
#       voronoi_smooth_f1_2d(
	functioncall	$const46 498 	%line{958} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:285
#   vector2 cellPosition = floor(coord);
	functioncall	$const33 373 	%line{285} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:156
#     return vector2 (floor(a.x), floor(a.y));
	floor		___526_cellPosition.x ___704_coord2D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{156} %argrw{"wr"}
	floor		___526_cellPosition.y ___704_coord2D.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 376 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___526_localPosition.x ___704_coord2D.x ___526_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___526_localPosition.y ___704_coord2D.y ___526_cellPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:288
#   float smoothDistance = 8.0;
	assign		___526_smoothDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{288} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:289
#   color smoothColor = color(0.0);
	assign		___526_smoothColor $const19 	%line{289} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:290
#   vector2 smoothPosition = vector2(0.0, 0.0);
	assign		___526_smoothPosition.x $const1 	%line{290} %argrw{"wr"}
	assign		___526_smoothPosition.y $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:291
#   for (int j = -2; j <= 2; j++) {
	for		$tmp143 382 384 491 493 	%line{291} %argrw{"r"}
	assign		___527_j $const20 	%argrw{"wr"}
	le		$tmp142 ___527_j $const21 	%argrw{"wrr"}
	neq		$tmp143 $tmp142 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:292
#     for (int i = -2; i <= 2; i++) {
	for		$tmp145 386 388 489 491 	%line{292} %argrw{"r"}
	assign		___529_i $const20 	%argrw{"wr"}
	le		$tmp144 ___529_i $const21 	%argrw{"wrr"}
	neq		$tmp145 $tmp144 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:293
#       vector2 cellOffset = vector2(i, j);
	assign		___530_cellOffset.x ___529_i 	%line{293} %argrw{"wr"}
	assign		___530_cellOffset.y ___527_j 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 393 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp148.x ___526_cellPosition.x ___530_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp148.y ___526_cellPosition.y ___530_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:295
#                               hash_vector2_to_vector2(cellPosition + cellOffset) * randomness;
	functioncall	$const36 399 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{295} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	functioncall	$const16 396 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{33} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp147.x $tmp148.x $tmp148.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	point		$tmp149 $tmp148.x $tmp148.y $const2 	%line{33} %argrw{"wrrr"}
	functioncall	$const37 399 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp147.y $tmp149 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 405 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp150.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp150.y randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 405 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp146.x $tmp147.x $tmp150.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp146.y $tmp147.y $tmp150.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 408 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___530_pointPosition.x ___530_cellOffset.x $tmp146.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___530_pointPosition.y ___530_cellOffset.y $tmp146.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:296
#       float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 452 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{296} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:228
#   if (metric == "euclidean") {
	eq		$tmp151 metric $const39 	%line{228} %argrw{"wrr"}
	if		$tmp151 422 452 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:229
#     return distance(a, b);
	functioncall	$const27 421 	%line{229} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 415 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		$tmp152.x ___530_pointPosition.x ___526_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		$tmp152.y ___530_pointPosition.y ___526_localPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:33
#   return length(a - b);
	functioncall	$const40 421 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{33} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:191
#     return hypot (a.x, a.y);
	functioncall	$const41 421 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{191} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:123
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp153 $tmp152.x $tmp152.x 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{123} %argrw{"wrr"}
	mul		$tmp154 $tmp152.y $tmp152.y 	%argrw{"wrr"}
	add		$tmp155 $tmp153 $tmp154 	%argrw{"wrr"}
	sqrt		___530_distanceToPoint $tmp155 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:229
#     return distance(a, b);
	return	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{229}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:231
#   else if (metric == "manhattan") {
	eq		$tmp156 metric $const42 	%line{231} %argrw{"wrr"}
	if		$tmp156 430 452 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:232
#     return abs(a.x - b.x) + abs(a.y - b.y);
	sub		$tmp158 ___530_pointPosition.x ___526_localPosition.x 	%line{232} %argrw{"wrr"}
	abs		$tmp157 $tmp158 	%argrw{"wr"}
	sub		$tmp160 ___530_pointPosition.y ___526_localPosition.y 	%argrw{"wrr"}
	abs		$tmp159 $tmp160 	%argrw{"wr"}
	add		___530_distanceToPoint $tmp157 $tmp159 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:234
#   else if (metric == "chebychev") {
	eq		$tmp161 metric $const43 	%line{234} %argrw{"wrr"}
	if		$tmp161 438 452 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:235
#     return max(abs(a.x - b.x), abs(a.y - b.y));
	sub		$tmp163 ___530_pointPosition.x ___526_localPosition.x 	%line{235} %argrw{"wrr"}
	abs		$tmp162 $tmp163 	%argrw{"wr"}
	sub		$tmp165 ___530_pointPosition.y ___526_localPosition.y 	%argrw{"wrr"}
	abs		$tmp164 $tmp165 	%argrw{"wr"}
	max		___530_distanceToPoint $tmp162 $tmp164 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:237
#   else if (metric == "minkowski") {
	eq		$tmp166 metric $const44 	%line{237} %argrw{"wrr"}
	if		$tmp166 450 452 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:238
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent), 1.0 / exponent);
	sub		$tmp169 ___530_pointPosition.x ___526_localPosition.x 	%line{238} %argrw{"wrr"}
	abs		$tmp168 $tmp169 	%argrw{"wr"}
	pow		$tmp167 $tmp168 Exponent 	%argrw{"wrr"}
	sub		$tmp172 ___530_pointPosition.y ___526_localPosition.y 	%argrw{"wrr"}
	abs		$tmp171 $tmp172 	%argrw{"wr"}
	pow		$tmp170 $tmp171 Exponent 	%argrw{"wrr"}
	add		$tmp173 $tmp167 $tmp170 	%argrw{"wrr"}
	div		$tmp174 $const2 Exponent 	%argrw{"wrr"}
	pow		___530_distanceToPoint $tmp173 $tmp174 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:241
#     return 0.0;
	assign		___530_distanceToPoint $const1 	%line{241} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:297
#       float h = smoothstep(0.0, 1.0, 0.5 + 0.5 * (smoothDistance - distanceToPoint) / smoothness);
	sub		$tmp175 ___526_smoothDistance ___530_distanceToPoint 	%line{297} %argrw{"wrr"}
	mul		$tmp176 $const5 $tmp175 	%argrw{"wrr"}
	div		$tmp177 $tmp176 smoothness 	%argrw{"wrr"}
	add		$tmp178 $const5 $tmp177 	%argrw{"wrr"}
	smoothstep	___530_h $const1 $const2 $tmp178 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:298
#       float correctionFactor = smoothness * h * (1.0 - h);
	mul		$tmp179 smoothness ___530_h 	%line{298} %argrw{"wrr"}
	sub		$tmp180 $const2 ___530_h 	%argrw{"wrr"}
	mul		___530_correctionFactor $tmp179 $tmp180 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:299
#       smoothDistance = mix(smoothDistance, distanceToPoint, h) - correctionFactor;
	mix		$tmp181 ___526_smoothDistance ___530_distanceToPoint ___530_h 	%line{299} %argrw{"wrrr"}
	sub		___526_smoothDistance $tmp181 ___530_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:300
#       correctionFactor /= 1.0 + 3.0 * smoothness;
	mul		$tmp182 $const22 smoothness 	%line{300} %argrw{"wrr"}
	add		$tmp183 $const2 $tmp182 	%argrw{"wrr"}
	div		___530_correctionFactor ___530_correctionFactor $tmp183 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 468 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp184.x ___526_cellPosition.x ___530_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp184.y ___526_cellPosition.y ___530_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:301
#       color cellColor = hash_vector2_to_color(cellPosition + cellOffset);
	functioncall	$const45 478 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{301} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:62
#   return color(hash_vector2_to_float(k),
	functioncall	$const16 471 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{62} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp185 $tmp184.x $tmp184.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:63
#                hash_vector3_to_float(vector3(k.x, k.y, 1.0)),
	point		$tmp187 $tmp184.x $tmp184.y $const2 	%line{63} %argrw{"wrrr"}
	functioncall	$const37 474 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp186 $tmp187 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:64
#                hash_vector3_to_float(vector3(k.x, k.y, 2.0)));
	point		$tmp189 $tmp184.x $tmp184.y $const4 	%line{64} %argrw{"wrrr"}
	functioncall	$const37 477 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp188 $tmp189 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:62
#   return color(hash_vector2_to_float(k),
	color		___530_cellColor $tmp185 $tmp186 $tmp188 	%line{62} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:302
#       smoothColor = mix(smoothColor, cellColor, h) - correctionFactor;
	mix		$tmp190 ___526_smoothColor ___530_cellColor ___530_h 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{302} %argrw{"wrrr"}
	sub		___526_smoothColor $tmp190 ___530_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:303
#       smoothPosition = mix(smoothPosition, pointPosition, h) - correctionFactor;
	functioncall	$const47 483 	%line{303} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:181
#     return vector2 (mix(a.x, b.x, x), mix(a.y, b.y, x));
	mix		$tmp191.x ___526_smoothPosition.x ___530_pointPosition.x ___530_h 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{181} %argrw{"wrrr"}
	mix		$tmp191.y ___526_smoothPosition.y ___530_pointPosition.y ___530_h 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 489 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:62
#     return a - vector2(b, b);
	assign		$tmp192.x ___530_correctionFactor 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{62} %argrw{"wr"}
	assign		$tmp192.y ___530_correctionFactor 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 489 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___526_smoothPosition.x $tmp191.x $tmp192.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___526_smoothPosition.y $tmp191.y $tmp192.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:292
#     for (int i = -2; i <= 2; i++) {
	assign		$tmp193 ___529_i 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{292} %argrw{"wr"}
	add		___529_i ___529_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:291
#   for (int j = -2; j <= 2; j++) {
	assign		$tmp194 ___527_j 	%line{291} %argrw{"wr"}
	add		___527_j ___527_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:306
#   outDistance = smoothDistance;
	assign		Distance ___526_smoothDistance 	%line{306} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:307
#   outColor = smoothColor;
	assign		Color ___526_smoothColor 	%line{307} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 498 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___704_outPosition2D.x ___526_cellPosition.x ___526_smoothPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___704_outPosition2D.y ___526_cellPosition.y ___526_smoothPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:961
#     else if (feature == "f2") {
	eq		$tmp195 feature $const23 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{961} %argrw{"wrr"}
	if		$tmp195 625 884 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:962
#       voronoi_f2_2d(coord2D, Exponent, randomness, metric, Distance, Color, outPosition2D);
	functioncall	$const48 625 	%line{962} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:319
#   vector2 cellPosition = floor(coord);
	functioncall	$const33 504 	%line{319} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:156
#     return vector2 (floor(a.x), floor(a.y));
	floor		___531_cellPosition.x ___704_coord2D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{156} %argrw{"wr"}
	floor		___531_cellPosition.y ___704_coord2D.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 507 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___531_localPosition.x ___704_coord2D.x ___531_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___531_localPosition.y ___704_coord2D.y ___531_cellPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:322
#   float distanceF1 = 8.0;
	assign		___531_distanceF1 $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{322} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:323
#   float distanceF2 = 8.0;
	assign		___531_distanceF2 $const9 	%line{323} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:324
#   vector2 offsetF1 = vector2(0.0, 0.0);
	assign		___531_offsetF1.x $const1 	%line{324} %argrw{"wr"}
	assign		___531_offsetF1.y $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:325
#   vector2 positionF1 = vector2(0.0, 0.0);
	assign		___531_positionF1.x $const1 	%line{325} %argrw{"wr"}
	assign		___531_positionF1.y $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:327
#   for (int j = -1; j <= 1; j++) {
	for		$tmp197 515 517 606 608 	%line{327} %argrw{"r"}
	assign		___532_j $const10 	%argrw{"wr"}
	le		$tmp196 ___532_j $const11 	%argrw{"wrr"}
	neq		$tmp197 $tmp196 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:328
#     for (int i = -1; i <= 1; i++) {
	for		$tmp199 519 521 604 606 	%line{328} %argrw{"r"}
	assign		___534_i $const10 	%argrw{"wr"}
	le		$tmp198 ___534_i $const11 	%argrw{"wrr"}
	neq		$tmp199 $tmp198 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:329
#       vector2 cellOffset = vector2(i, j);
	assign		___535_cellOffset.x ___534_i 	%line{329} %argrw{"wr"}
	assign		___535_cellOffset.y ___532_j 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 526 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp202.x ___531_cellPosition.x ___535_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp202.y ___531_cellPosition.y ___535_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:331
#                               hash_vector2_to_vector2(cellPosition + cellOffset) * randomness;
	functioncall	$const36 532 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{331} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	functioncall	$const16 529 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{33} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp201.x $tmp202.x $tmp202.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	point		$tmp203 $tmp202.x $tmp202.y $const2 	%line{33} %argrw{"wrrr"}
	functioncall	$const37 532 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp201.y $tmp203 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 538 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp204.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp204.y randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 538 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp200.x $tmp201.x $tmp204.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp200.y $tmp201.y $tmp204.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 541 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___535_pointPosition.x ___535_cellOffset.x $tmp200.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___535_pointPosition.y ___535_cellOffset.y $tmp200.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:332
#       float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 585 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{332} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:228
#   if (metric == "euclidean") {
	eq		$tmp205 metric $const39 	%line{228} %argrw{"wrr"}
	if		$tmp205 555 585 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:229
#     return distance(a, b);
	functioncall	$const27 554 	%line{229} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 548 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		$tmp206.x ___535_pointPosition.x ___531_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		$tmp206.y ___535_pointPosition.y ___531_localPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:33
#   return length(a - b);
	functioncall	$const40 554 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{33} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:191
#     return hypot (a.x, a.y);
	functioncall	$const41 554 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{191} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:123
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp207 $tmp206.x $tmp206.x 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{123} %argrw{"wrr"}
	mul		$tmp208 $tmp206.y $tmp206.y 	%argrw{"wrr"}
	add		$tmp209 $tmp207 $tmp208 	%argrw{"wrr"}
	sqrt		___535_distanceToPoint $tmp209 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:229
#     return distance(a, b);
	return	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{229}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:231
#   else if (metric == "manhattan") {
	eq		$tmp210 metric $const42 	%line{231} %argrw{"wrr"}
	if		$tmp210 563 585 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:232
#     return abs(a.x - b.x) + abs(a.y - b.y);
	sub		$tmp212 ___535_pointPosition.x ___531_localPosition.x 	%line{232} %argrw{"wrr"}
	abs		$tmp211 $tmp212 	%argrw{"wr"}
	sub		$tmp214 ___535_pointPosition.y ___531_localPosition.y 	%argrw{"wrr"}
	abs		$tmp213 $tmp214 	%argrw{"wr"}
	add		___535_distanceToPoint $tmp211 $tmp213 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:234
#   else if (metric == "chebychev") {
	eq		$tmp215 metric $const43 	%line{234} %argrw{"wrr"}
	if		$tmp215 571 585 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:235
#     return max(abs(a.x - b.x), abs(a.y - b.y));
	sub		$tmp217 ___535_pointPosition.x ___531_localPosition.x 	%line{235} %argrw{"wrr"}
	abs		$tmp216 $tmp217 	%argrw{"wr"}
	sub		$tmp219 ___535_pointPosition.y ___531_localPosition.y 	%argrw{"wrr"}
	abs		$tmp218 $tmp219 	%argrw{"wr"}
	max		___535_distanceToPoint $tmp216 $tmp218 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:237
#   else if (metric == "minkowski") {
	eq		$tmp220 metric $const44 	%line{237} %argrw{"wrr"}
	if		$tmp220 583 585 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:238
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent), 1.0 / exponent);
	sub		$tmp223 ___535_pointPosition.x ___531_localPosition.x 	%line{238} %argrw{"wrr"}
	abs		$tmp222 $tmp223 	%argrw{"wr"}
	pow		$tmp221 $tmp222 Exponent 	%argrw{"wrr"}
	sub		$tmp226 ___535_pointPosition.y ___531_localPosition.y 	%argrw{"wrr"}
	abs		$tmp225 $tmp226 	%argrw{"wr"}
	pow		$tmp224 $tmp225 Exponent 	%argrw{"wrr"}
	add		$tmp227 $tmp221 $tmp224 	%argrw{"wrr"}
	div		$tmp228 $const2 Exponent 	%argrw{"wrr"}
	pow		___535_distanceToPoint $tmp227 $tmp228 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:241
#     return 0.0;
	assign		___535_distanceToPoint $const1 	%line{241} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:333
#       if (distanceToPoint < distanceF1) {
	lt		$tmp229 ___535_distanceToPoint ___531_distanceF1 	%line{333} %argrw{"wrr"}
	if		$tmp229 597 604 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:334
#         distanceF2 = distanceF1;
	assign		___531_distanceF2 ___531_distanceF1 	%line{334} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:335
#         distanceF1 = distanceToPoint;
	assign		___531_distanceF1 ___535_distanceToPoint 	%line{335} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:336
#         offsetF2 = offsetF1;
	assign		___531_offsetF2.x ___531_offsetF1.x 	%line{336} %argrw{"wr"}
	assign		___531_offsetF2.y ___531_offsetF1.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:337
#         offsetF1 = cellOffset;
	assign		___531_offsetF1.x ___535_cellOffset.x 	%line{337} %argrw{"wr"}
	assign		___531_offsetF1.y ___535_cellOffset.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:338
#         positionF2 = positionF1;
	assign		___531_positionF2.x ___531_positionF1.x 	%line{338} %argrw{"wr"}
	assign		___531_positionF2.y ___531_positionF1.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:339
#         positionF1 = pointPosition;
	assign		___531_positionF1.x ___535_pointPosition.x 	%line{339} %argrw{"wr"}
	assign		___531_positionF1.y ___535_pointPosition.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:341
#       else if (distanceToPoint < distanceF2) {
	lt		$tmp230 ___535_distanceToPoint ___531_distanceF2 	%line{341} %argrw{"wrr"}
	if		$tmp230 604 604 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:342
#         distanceF2 = distanceToPoint;
	assign		___531_distanceF2 ___535_distanceToPoint 	%line{342} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:343
#         offsetF2 = cellOffset;
	assign		___531_offsetF2.x ___535_cellOffset.x 	%line{343} %argrw{"wr"}
	assign		___531_offsetF2.y ___535_cellOffset.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:344
#         positionF2 = pointPosition;
	assign		___531_positionF2.x ___535_pointPosition.x 	%line{344} %argrw{"wr"}
	assign		___531_positionF2.y ___535_pointPosition.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:328
#     for (int i = -1; i <= 1; i++) {
	assign		$tmp231 ___534_i 	%line{328} %argrw{"wr"}
	add		___534_i ___534_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:327
#   for (int j = -1; j <= 1; j++) {
	assign		$tmp232 ___532_j 	%line{327} %argrw{"wr"}
	add		___532_j ___532_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:348
#   outDistance = distanceF2;
	assign		Distance ___531_distanceF2 	%line{348} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 612 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp233.x ___531_cellPosition.x ___531_offsetF2.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp233.y ___531_cellPosition.y ___531_offsetF2.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:349
#   outColor = hash_vector2_to_color(cellPosition + offsetF2);
	functioncall	$const45 622 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{349} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:62
#   return color(hash_vector2_to_float(k),
	functioncall	$const16 615 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{62} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp234 $tmp233.x $tmp233.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:63
#                hash_vector3_to_float(vector3(k.x, k.y, 1.0)),
	point		$tmp236 $tmp233.x $tmp233.y $const2 	%line{63} %argrw{"wrrr"}
	functioncall	$const37 618 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp235 $tmp236 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:64
#                hash_vector3_to_float(vector3(k.x, k.y, 2.0)));
	point		$tmp238 $tmp233.x $tmp233.y $const4 	%line{64} %argrw{"wrrr"}
	functioncall	$const37 621 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp237 $tmp238 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:62
#   return color(hash_vector2_to_float(k),
	color		Color $tmp234 $tmp235 $tmp237 	%line{62} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 625 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___704_outPosition2D.x ___531_positionF2.x ___531_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___704_outPosition2D.y ___531_positionF2.y ___531_cellPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:964
#     else if (feature == "distance_to_edge") {
	eq		$tmp239 feature $const25 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{964} %argrw{"wrr"}
	if		$tmp239 754 884 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:965
#       voronoi_distance_to_edge_2d(coord2D, randomness, Distance);
	functioncall	$const49 754 	%line{965} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:355
#   vector2 cellPosition = floor(coord);
	functioncall	$const33 631 	%line{355} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:156
#     return vector2 (floor(a.x), floor(a.y));
	floor		___538_cellPosition.x ___704_coord2D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{156} %argrw{"wr"}
	floor		___538_cellPosition.y ___704_coord2D.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 634 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___538_localPosition.x ___704_coord2D.x ___538_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___538_localPosition.y ___704_coord2D.y ___538_cellPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:359
#   float minDistance = 8.0;
	assign		___538_minDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{359} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:360
#   for (int j = -1; j <= 1; j++) {
	for		$tmp241 637 639 677 679 	%line{360} %argrw{"r"}
	assign		___539_j $const10 	%argrw{"wr"}
	le		$tmp240 ___539_j $const11 	%argrw{"wrr"}
	neq		$tmp241 $tmp240 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:361
#     for (int i = -1; i <= 1; i++) {
	for		$tmp243 641 643 675 677 	%line{361} %argrw{"r"}
	assign		___541_i $const10 	%argrw{"wr"}
	le		$tmp242 ___541_i $const11 	%argrw{"wrr"}
	neq		$tmp243 $tmp242 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:362
#       vector2 cellOffset = vector2(i, j);
	assign		___542_cellOffset.x ___541_i 	%line{362} %argrw{"wr"}
	assign		___542_cellOffset.y ___539_j 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 648 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp247.x ___538_cellPosition.x ___542_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp247.y ___538_cellPosition.y ___542_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:364
#                               hash_vector2_to_vector2(cellPosition + cellOffset) * randomness -
	functioncall	$const36 654 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{364} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	functioncall	$const16 651 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{33} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp246.x $tmp247.x $tmp247.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	point		$tmp248 $tmp247.x $tmp247.y $const2 	%line{33} %argrw{"wrrr"}
	functioncall	$const37 654 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp246.y $tmp248 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 660 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp249.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp249.y randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 660 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp245.x $tmp246.x $tmp249.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp245.y $tmp246.y $tmp249.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 663 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp244.x ___542_cellOffset.x $tmp245.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp244.y ___542_cellOffset.y $tmp245.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 666 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___542_vectorToPoint.x $tmp244.x ___538_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___542_vectorToPoint.y $tmp244.y ___538_localPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:366
#       float distanceToPoint = dot(vectorToPoint, vectorToPoint);
	functioncall	$const50 670 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{366} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:186
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp250 ___542_vectorToPoint.x ___542_vectorToPoint.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{186} %argrw{"wrr"}
	mul		$tmp251 ___542_vectorToPoint.y ___542_vectorToPoint.y 	%argrw{"wrr"}
	add		___542_distanceToPoint $tmp250 $tmp251 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:367
#       if (distanceToPoint < minDistance) {
	lt		$tmp252 ___542_distanceToPoint ___538_minDistance 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{367} %argrw{"wrr"}
	if		$tmp252 675 675 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:368
#         minDistance = distanceToPoint;
	assign		___538_minDistance ___542_distanceToPoint 	%line{368} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:369
#         vectorToClosest = vectorToPoint;
	assign		___538_vectorToClosest.x ___542_vectorToPoint.x 	%line{369} %argrw{"wr"}
	assign		___538_vectorToClosest.y ___542_vectorToPoint.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:361
#     for (int i = -1; i <= 1; i++) {
	assign		$tmp253 ___541_i 	%line{361} %argrw{"wr"}
	add		___541_i ___541_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:360
#   for (int j = -1; j <= 1; j++) {
	assign		$tmp254 ___539_j 	%line{360} %argrw{"wr"}
	add		___539_j ___539_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:374
#   minDistance = 8.0;
	assign		___538_minDistance $const9 	%line{374} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:375
#   for (int j = -1; j <= 1; j++) {
	for		$tmp256 682 684 751 753 	%line{375} %argrw{"r"}
	assign		___544_j $const10 	%argrw{"wr"}
	le		$tmp255 ___544_j $const11 	%argrw{"wrr"}
	neq		$tmp256 $tmp255 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:376
#     for (int i = -1; i <= 1; i++) {
	for		$tmp258 686 688 749 751 	%line{376} %argrw{"r"}
	assign		___546_i $const10 	%argrw{"wr"}
	le		$tmp257 ___546_i $const11 	%argrw{"wrr"}
	neq		$tmp258 $tmp257 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:377
#       vector2 cellOffset = vector2(i, j);
	assign		___547_cellOffset.x ___546_i 	%line{377} %argrw{"wr"}
	assign		___547_cellOffset.y ___544_j 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 693 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp262.x ___538_cellPosition.x ___547_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp262.y ___538_cellPosition.y ___547_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:379
#                               hash_vector2_to_vector2(cellPosition + cellOffset) * randomness -
	functioncall	$const36 699 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{379} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	functioncall	$const16 696 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{33} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp261.x $tmp262.x $tmp262.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	point		$tmp263 $tmp262.x $tmp262.y $const2 	%line{33} %argrw{"wrrr"}
	functioncall	$const37 699 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp261.y $tmp263 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 705 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp264.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp264.y randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 705 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp260.x $tmp261.x $tmp264.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp260.y $tmp261.y $tmp264.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 708 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp259.x ___547_cellOffset.x $tmp260.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp259.y ___547_cellOffset.y $tmp260.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 711 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___547_vectorToPoint.x $tmp259.x ___538_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___547_vectorToPoint.y $tmp259.y ___538_localPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 714 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___547_perpendicularToEdge.x ___547_vectorToPoint.x ___538_vectorToClosest.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___547_perpendicularToEdge.y ___547_vectorToPoint.y ___538_vectorToClosest.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:382
#       if (dot(perpendicularToEdge, perpendicularToEdge) > 0.0001) {
	functioncall	$const50 718 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{382} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:186
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp266 ___547_perpendicularToEdge.x ___547_perpendicularToEdge.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{186} %argrw{"wrr"}
	mul		$tmp267 ___547_perpendicularToEdge.y ___547_perpendicularToEdge.y 	%argrw{"wrr"}
	add		$tmp265 $tmp266 $tmp267 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:382
#       if (dot(perpendicularToEdge, perpendicularToEdge) > 0.0001) {
	gt		$tmp268 $tmp265 $const51 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{382} %argrw{"wrr"}
	if		$tmp268 749 749 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 723 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp270.x ___538_vectorToClosest.x ___547_vectorToPoint.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp270.y ___538_vectorToClosest.y ___547_vectorToPoint.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const52 730 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:113
#     float b_inv = 1/b;
	div		___381_b_inv $const2 $const4 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{113} %argrw{"wrr"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:114
#     return a * vector2(b_inv, b_inv);
	assign		$tmp271.x ___381_b_inv 	%line{114} %argrw{"wr"}
	assign		$tmp271.y ___381_b_inv 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 730 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp269.x $tmp270.x $tmp271.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp269.y $tmp270.y $tmp271.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:384
#                                    normalize(perpendicularToEdge));
	functioncall	$const53 744 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{384} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:230
#     return a / length(a);
	functioncall	$const40 737 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{230} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:191
#     return hypot (a.x, a.y);
	functioncall	$const41 737 	%line{191} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:123
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp274 ___547_perpendicularToEdge.x ___547_perpendicularToEdge.x 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{123} %argrw{"wrr"}
	mul		$tmp275 ___547_perpendicularToEdge.y ___547_perpendicularToEdge.y 	%argrw{"wrr"}
	add		$tmp276 $tmp274 $tmp275 	%argrw{"wrr"}
	sqrt		$tmp273 $tmp276 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const52 744 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:113
#     float b_inv = 1/b;
	div		___381_b_inv $const2 $tmp273 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{113} %argrw{"wrr"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:114
#     return a * vector2(b_inv, b_inv);
	assign		$tmp277.x ___381_b_inv 	%line{114} %argrw{"wr"}
	assign		$tmp277.y ___381_b_inv 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 744 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp272.x ___547_perpendicularToEdge.x $tmp277.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp272.y ___547_perpendicularToEdge.y $tmp277.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:383
#         float distanceToEdge = dot((vectorToClosest + vectorToPoint) / 2.0,
	functioncall	$const50 748 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{383} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:186
#     return (a.x * b.x + a.y * b.y);
	mul		$tmp278 $tmp269.x $tmp272.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{186} %argrw{"wrr"}
	mul		$tmp279 $tmp269.y $tmp272.y 	%argrw{"wrr"}
	add		___548_distanceToEdge $tmp278 $tmp279 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:385
#         minDistance = min(minDistance, distanceToEdge);
	min		___538_minDistance ___538_minDistance ___548_distanceToEdge 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{385} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:376
#     for (int i = -1; i <= 1; i++) {
	assign		$tmp280 ___546_i 	%line{376} %argrw{"wr"}
	add		___546_i ___546_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:375
#   for (int j = -1; j <= 1; j++) {
	assign		$tmp281 ___544_j 	%line{375} %argrw{"wr"}
	add		___544_j ___544_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:389
#   outDistance = minDistance;
	assign		Distance ___538_minDistance 	%line{389} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:967
#     else if (feature == "n_sphere_radius") {
	eq		$tmp282 feature $const28 	%line{967} %argrw{"wrr"}
	if		$tmp282 883 884 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:968
#       voronoi_n_sphere_radius_2d(coord2D, randomness, Radius);
	functioncall	$const54 883 	%line{968} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:394
#   vector2 cellPosition = floor(coord);
	functioncall	$const33 760 	%line{394} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:156
#     return vector2 (floor(a.x), floor(a.y));
	floor		___549_cellPosition.x ___704_coord2D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{156} %argrw{"wr"}
	floor		___549_cellPosition.y ___704_coord2D.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 763 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		___549_localPosition.x ___704_coord2D.x ___549_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		___549_localPosition.y ___704_coord2D.y ___549_cellPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:399
#   float minDistance = 8.0;
	assign		___549_minDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{399} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:400
#   for (int j = -1; j <= 1; j++) {
	for		$tmp284 766 768 811 813 	%line{400} %argrw{"r"}
	assign		___550_j $const10 	%argrw{"wr"}
	le		$tmp283 ___550_j $const11 	%argrw{"wrr"}
	neq		$tmp284 $tmp283 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:401
#     for (int i = -1; i <= 1; i++) {
	for		$tmp286 770 772 809 811 	%line{401} %argrw{"r"}
	assign		___552_i $const10 	%argrw{"wr"}
	le		$tmp285 ___552_i $const11 	%argrw{"wrr"}
	neq		$tmp286 $tmp285 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:402
#       vector2 cellOffset = vector2(i, j);
	assign		___553_cellOffset.x ___552_i 	%line{402} %argrw{"wr"}
	assign		___553_cellOffset.y ___550_j 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 777 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp289.x ___549_cellPosition.x ___553_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp289.y ___549_cellPosition.y ___553_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:404
#                               hash_vector2_to_vector2(cellPosition + cellOffset) * randomness;
	functioncall	$const36 783 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{404} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	functioncall	$const16 780 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{33} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp288.x $tmp289.x $tmp289.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	point		$tmp290 $tmp289.x $tmp289.y $const2 	%line{33} %argrw{"wrrr"}
	functioncall	$const37 783 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp288.y $tmp290 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 789 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp291.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp291.y randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 789 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp287.x $tmp288.x $tmp291.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp287.y $tmp288.y $tmp291.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 792 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___553_pointPosition.x ___553_cellOffset.x $tmp287.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___553_pointPosition.y ___553_cellOffset.y $tmp287.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:405
#       float distanceToPoint = distance(pointPosition, localPosition);
	functioncall	$const27 802 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{405} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 796 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		$tmp292.x ___553_pointPosition.x ___549_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		$tmp292.y ___553_pointPosition.y ___549_localPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:33
#   return length(a - b);
	functioncall	$const40 802 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{33} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:191
#     return hypot (a.x, a.y);
	functioncall	$const41 802 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{191} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:123
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp293 $tmp292.x $tmp292.x 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{123} %argrw{"wrr"}
	mul		$tmp294 $tmp292.y $tmp292.y 	%argrw{"wrr"}
	add		$tmp295 $tmp293 $tmp294 	%argrw{"wrr"}
	sqrt		___553_distanceToPoint $tmp295 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:406
#       if (distanceToPoint < minDistance) {
	lt		$tmp296 ___553_distanceToPoint ___549_minDistance 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{406} %argrw{"wrr"}
	if		$tmp296 809 809 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:407
#         minDistance = distanceToPoint;
	assign		___549_minDistance ___553_distanceToPoint 	%line{407} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:408
#         closestPoint = pointPosition;
	assign		___549_closestPoint.x ___553_pointPosition.x 	%line{408} %argrw{"wr"}
	assign		___549_closestPoint.y ___553_pointPosition.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:409
#         closestPointOffset = cellOffset;
	assign		___549_closestPointOffset.x ___553_cellOffset.x 	%line{409} %argrw{"wr"}
	assign		___549_closestPointOffset.y ___553_cellOffset.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:401
#     for (int i = -1; i <= 1; i++) {
	assign		$tmp297 ___552_i 	%line{401} %argrw{"wr"}
	add		___552_i ___552_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:400
#   for (int j = -1; j <= 1; j++) {
	assign		$tmp298 ___550_j 	%line{400} %argrw{"wr"}
	add		___550_j ___550_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:414
#   minDistance = 8.0;
	assign		___549_minDistance $const9 	%line{414} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:416
#   for (int j = -1; j <= 1; j++) {
	for		$tmp300 816 818 870 872 	%line{416} %argrw{"r"}
	assign		___555_j $const10 	%argrw{"wr"}
	le		$tmp299 ___555_j $const11 	%argrw{"wrr"}
	neq		$tmp300 $tmp299 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:417
#     for (int i = -1; i <= 1; i++) {
	for		$tmp302 820 822 868 870 	%line{417} %argrw{"r"}
	assign		___557_i $const10 	%argrw{"wr"}
	le		$tmp301 ___557_i $const11 	%argrw{"wrr"}
	neq		$tmp302 $tmp301 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:418
#       if (i == 0 && j == 0) {
	eq		$tmp303 ___557_i $const12 	%line{418} %argrw{"wrr"}
	neq		$tmp304 $tmp303 $const12 	%argrw{"wrr"}
	if		$tmp304 828 828 	%argrw{"r"}
	eq		$tmp305 ___555_j $const12 	%argrw{"wrr"}
	neq		$tmp306 $tmp305 $const12 	%argrw{"wrr"}
	assign		$tmp304 $tmp306 	%argrw{"wr"}
	if		$tmp304 830 830 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:419
#         continue;
	continue	%line{419}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:421
#       vector2 cellOffset = vector2(i, j) + closestPointOffset;
	assign		$tmp307.x ___557_i 	%line{421} %argrw{"wr"}
	assign		$tmp307.y ___555_j 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 835 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___558_cellOffset.x $tmp307.x ___549_closestPointOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___558_cellOffset.y $tmp307.y ___549_closestPointOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 838 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		$tmp310.x ___549_cellPosition.x ___558_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		$tmp310.y ___549_cellPosition.y ___558_cellOffset.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:423
#                               hash_vector2_to_vector2(cellPosition + cellOffset) * randomness;
	functioncall	$const36 844 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{423} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	functioncall	$const16 841 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{33} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:16
#   return hashnoise(k.x, k.y);
	hashnoise	$tmp309.x $tmp310.x $tmp310.y 	%line{16} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:33
#   return vector2(hash_vector2_to_float(k), hash_vector3_to_float(vector3(k.x, k.y, 1.0)));
	point		$tmp311 $tmp310.x $tmp310.y $const2 	%line{33} %argrw{"wrrr"}
	functioncall	$const37 844 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp309.y $tmp311 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 850 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp312.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp312.y randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 850 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		$tmp308.x $tmp309.x $tmp312.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{77} %argrw{"wrr"}
	mul		$tmp308.y $tmp309.y $tmp312.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 853 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:27
#     return vector2(a.x + b.x, a.y + b.y);
	add		___558_pointPosition.x ___558_cellOffset.x $tmp308.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{27} %argrw{"wrr"}
	add		___558_pointPosition.y ___558_cellOffset.y $tmp308.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:424
#       float distanceToPoint = distance(closestPoint, pointPosition);
	functioncall	$const27 863 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{424} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 857 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		$tmp313.x ___549_closestPoint.x ___558_pointPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		$tmp313.y ___549_closestPoint.y ___558_pointPosition.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:33
#   return length(a - b);
	functioncall	$const40 863 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{33} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:191
#     return hypot (a.x, a.y);
	functioncall	$const41 863 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{191} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:123
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp314 $tmp313.x $tmp313.x 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{123} %argrw{"wrr"}
	mul		$tmp315 $tmp313.y $tmp313.y 	%argrw{"wrr"}
	add		$tmp316 $tmp314 $tmp315 	%argrw{"wrr"}
	sqrt		___558_distanceToPoint $tmp316 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:425
#       if (distanceToPoint < minDistance) {
	lt		$tmp317 ___558_distanceToPoint ___549_minDistance 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{425} %argrw{"wrr"}
	if		$tmp317 868 868 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:426
#         minDistance = distanceToPoint;
	assign		___549_minDistance ___558_distanceToPoint 	%line{426} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:427
#         closestPointToClosestPoint = pointPosition;
	assign		___549_closestPointToClosestPoint.x ___558_pointPosition.x 	%line{427} %argrw{"wr"}
	assign		___549_closestPointToClosestPoint.y ___558_pointPosition.y 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:417
#     for (int i = -1; i <= 1; i++) {
	assign		$tmp318 ___557_i 	%line{417} %argrw{"wr"}
	add		___557_i ___557_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:416
#   for (int j = -1; j <= 1; j++) {
	assign		$tmp319 ___555_j 	%line{416} %argrw{"wr"}
	add		___555_j ___555_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:431
#   outRadius = distance(closestPointToClosestPoint, closestPoint) / 2.0;
	functioncall	$const27 882 	%line{431} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 876 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:52
#     return vector2(a.x - b.x, a.y - b.y);
	sub		$tmp321.x ___549_closestPointToClosestPoint.x ___549_closestPoint.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{52} %argrw{"wrr"}
	sub		$tmp321.y ___549_closestPointToClosestPoint.y ___549_closestPoint.y 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:33
#   return length(a - b);
	functioncall	$const40 882 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{33} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector2.h:191
#     return hypot (a.x, a.y);
	functioncall	$const41 882 	%filename{"/opt/lib/osl-1.10.9/shaders/vector2.h"} %line{191} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/stdosl.h:123
# float hypot (float a, float b) { return sqrt (a*a + b*b); }
	mul		$tmp322 $tmp321.x $tmp321.x 	%filename{"/opt/lib/osl-1.10.9/shaders/stdosl.h"} %line{123} %argrw{"wrr"}
	mul		$tmp323 $tmp321.y $tmp321.y 	%argrw{"wrr"}
	add		$tmp324 $tmp322 $tmp323 	%argrw{"wrr"}
	sqrt		$tmp320 $tmp324 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:431
#   outRadius = distance(closestPointToClosestPoint, closestPoint) / 2.0;
	div		Radius $tmp320 $const4 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{431} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:971
#       error("Unknown feature!");
	error		$const30 	%line{971} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:973
#     outPosition2D = safe_divide(outPosition2D, Scale);
	functioncall	$const55 894 	%line{973} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:45
#   return vector2((b != 0.0) ? a.x / b : 0.0, (b != 0.0) ? a.y / b : 0.0);
	neq		$tmp325 Scale $const1 	%line{45} %argrw{"wrr"}
	if		$tmp325 888 889 	%argrw{"r"}
	div		___704_outPosition2D.x ___704_outPosition2D.x Scale 	%argrw{"wrr"}
	assign		___704_outPosition2D.x $const1 	%argrw{"wr"}
	neq		$tmp326 Scale $const1 	%argrw{"wrr"}
	if		$tmp326 892 893 	%argrw{"r"}
	div		___704_outPosition2D.y ___704_outPosition2D.y Scale 	%argrw{"wrr"}
	assign		___704_outPosition2D.y $const1 	%argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:974
#     Position = vector3(outPosition2D.x, outPosition2D.y, 0.0);
	point		Position ___704_outPosition2D.x ___704_outPosition2D.y $const1 	%line{974} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:976
#   else if (dimensions == "3D") {
	eq		$tmp327 dimensions $const56 	%line{976} %argrw{"wrr"}
	if		$tmp327 1572 2741 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:977
#     if (feature == "f1") {
	eq		$tmp328 feature $const7 	%line{977} %argrw{"wrr"}
	if		$tmp328 1035 1568 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:978
#       voronoi_f1_3d(coord, Exponent, randomness, metric, Distance, Color, Position);
	functioncall	$const57 1035 	%line{978} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:465
#   vector3 cellPosition = floor(coord);
	floor		___567_cellPosition coord 	%line{465} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:466
#   vector3 localPosition = coord - cellPosition;
	sub		___567_localPosition coord ___567_cellPosition 	%line{466} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:468
#   float minDistance = 8.0;
	assign		___567_minDistance $const9 	%line{468} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:470
#   for (int k = -1; k <= 1; k++) {
	for		$tmp330 905 907 1012 1014 	%line{470} %argrw{"r"}
	assign		___568_k $const10 	%argrw{"wr"}
	le		$tmp329 ___568_k $const11 	%argrw{"wrr"}
	neq		$tmp330 $tmp329 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:471
#     for (int j = -1; j <= 1; j++) {
	for		$tmp332 909 911 1010 1012 	%line{471} %argrw{"r"}
	assign		___570_j $const10 	%argrw{"wr"}
	le		$tmp331 ___570_j $const11 	%argrw{"wrr"}
	neq		$tmp332 $tmp331 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:472
#       for (int i = -1; i <= 1; i++) {
	for		$tmp334 913 915 1008 1010 	%line{472} %argrw{"r"}
	assign		___572_i $const10 	%argrw{"wr"}
	le		$tmp333 ___572_i $const11 	%argrw{"wrr"}
	neq		$tmp334 $tmp333 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:473
#         vector3 cellOffset = vector3(i, j, k);
	assign		$tmp335 ___572_i 	%line{473} %argrw{"wr"}
	assign		$tmp336 ___570_j 	%argrw{"wr"}
	assign		$tmp337 ___568_k 	%argrw{"wr"}
	point		___573_cellOffset $tmp335 $tmp336 $tmp337 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:475
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	add		$tmp339 ___567_cellPosition ___573_cellOffset 	%line{475} %argrw{"wrr"}
	functioncall	$const58 938 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	functioncall	$const37 923 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{38} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp340 $tmp339 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:39
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp342.x $tmp339 $const12 	%line{39} %argrw{"wrr"}
	compref		$tmp342.y $tmp339 $const11 	%argrw{"wrr"}
	compref		$tmp342.z $tmp339 $const21 	%argrw{"wrr"}
	assign		$tmp342.w $const2 	%argrw{"wr"}
	functioncall	$const59 930 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp343 $tmp342.x $tmp342.y $tmp342.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp341 $tmp343 $tmp342.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:40
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp345.x $tmp339 $const12 	%line{40} %argrw{"wrr"}
	compref		$tmp345.y $tmp339 $const11 	%argrw{"wrr"}
	compref		$tmp345.z $tmp339 $const21 	%argrw{"wrr"}
	assign		$tmp345.w $const4 	%argrw{"wr"}
	functioncall	$const59 937 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp346 $tmp345.x $tmp345.y $tmp345.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp344 $tmp346 $tmp345.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	point		$tmp338 $tmp340 $tmp341 $tmp344 	%line{38} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:475
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	mul		$tmp347 $tmp338 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{475} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:474
#         vector3 pointPosition = cellOffset +
	add		___573_pointPosition ___573_cellOffset $tmp347 	%line{474} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:476
#         float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 1003 	%line{476} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:438
#   if (metric == "euclidean") {
	eq		$tmp348 metric $const39 	%line{438} %argrw{"wrr"}
	if		$tmp348 945 1003 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:439
#     return distance(a, b);
	distance	___573_distanceToPoint ___573_pointPosition ___567_localPosition 	%line{439} %argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:441
#   else if (metric == "manhattan") {
	eq		$tmp349 metric $const42 	%line{441} %argrw{"wrr"}
	if		$tmp349 962 1003 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:442
#     return abs(a[0] - b[0]) + abs(a[1] - b[1]) + abs(a[2] - b[2]);
	compref		$tmp351 ___573_pointPosition $const12 	%line{442} %argrw{"wrr"}
	compref		$tmp352 ___567_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp353 $tmp351 $tmp352 	%argrw{"wrr"}
	abs		$tmp350 $tmp353 	%argrw{"wr"}
	compref		$tmp355 ___573_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp356 ___567_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp357 $tmp355 $tmp356 	%argrw{"wrr"}
	abs		$tmp354 $tmp357 	%argrw{"wr"}
	add		$tmp358 $tmp350 $tmp354 	%argrw{"wrr"}
	compref		$tmp360 ___573_pointPosition $const21 	%argrw{"wrr"}
	compref		$tmp361 ___567_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp362 $tmp360 $tmp361 	%argrw{"wrr"}
	abs		$tmp359 $tmp362 	%argrw{"wr"}
	add		___573_distanceToPoint $tmp358 $tmp359 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:444
#   else if (metric == "chebychev") {
	eq		$tmp363 metric $const43 	%line{444} %argrw{"wrr"}
	if		$tmp363 979 1003 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:445
#     return max(abs(a[0] - b[0]), max(abs(a[1] - b[1]), abs(a[2] - b[2])));
	compref		$tmp365 ___573_pointPosition $const12 	%line{445} %argrw{"wrr"}
	compref		$tmp366 ___567_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp367 $tmp365 $tmp366 	%argrw{"wrr"}
	abs		$tmp364 $tmp367 	%argrw{"wr"}
	compref		$tmp370 ___573_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp371 ___567_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp372 $tmp370 $tmp371 	%argrw{"wrr"}
	abs		$tmp369 $tmp372 	%argrw{"wr"}
	compref		$tmp374 ___573_pointPosition $const21 	%argrw{"wrr"}
	compref		$tmp375 ___567_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp376 $tmp374 $tmp375 	%argrw{"wrr"}
	abs		$tmp373 $tmp376 	%argrw{"wr"}
	max		$tmp368 $tmp369 $tmp373 	%argrw{"wrr"}
	max		___573_distanceToPoint $tmp364 $tmp368 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:447
#   else if (metric == "minkowski") {
	eq		$tmp377 metric $const44 	%line{447} %argrw{"wrr"}
	if		$tmp377 1001 1003 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	compref		$tmp380 ___573_pointPosition $const12 	%line{448} %argrw{"wrr"}
	compref		$tmp381 ___567_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp382 $tmp380 $tmp381 	%argrw{"wrr"}
	abs		$tmp379 $tmp382 	%argrw{"wr"}
	pow		$tmp378 $tmp379 Exponent 	%argrw{"wrr"}
	compref		$tmp385 ___573_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp386 ___567_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp387 $tmp385 $tmp386 	%argrw{"wrr"}
	abs		$tmp384 $tmp387 	%argrw{"wr"}
	pow		$tmp383 $tmp384 Exponent 	%argrw{"wrr"}
	add		$tmp388 $tmp378 $tmp383 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:449
#                    pow(abs(a[2] - b[2]), exponent),
	compref		$tmp391 ___573_pointPosition $const21 	%line{449} %argrw{"wrr"}
	compref		$tmp392 ___567_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp393 $tmp391 $tmp392 	%argrw{"wrr"}
	abs		$tmp390 $tmp393 	%argrw{"wr"}
	pow		$tmp389 $tmp390 Exponent 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	add		$tmp394 $tmp388 $tmp389 	%line{448} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:450
#                1.0 / exponent);
	div		$tmp395 $const2 Exponent 	%line{450} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	pow		___573_distanceToPoint $tmp394 $tmp395 	%line{448} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:450
#                1.0 / exponent);
	return	%line{450}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:453
#     return 0.0;
	assign		___573_distanceToPoint $const1 	%line{453} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:477
#         if (distanceToPoint < minDistance) {
	lt		$tmp396 ___573_distanceToPoint ___567_minDistance 	%line{477} %argrw{"wrr"}
	if		$tmp396 1008 1008 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:478
#           targetOffset = cellOffset;
	assign		___567_targetOffset ___573_cellOffset 	%line{478} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:479
#           minDistance = distanceToPoint;
	assign		___567_minDistance ___573_distanceToPoint 	%line{479} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:480
#           targetPosition = pointPosition;
	assign		___567_targetPosition ___573_pointPosition 	%line{480} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:472
#       for (int i = -1; i <= 1; i++) {
	assign		$tmp397 ___572_i 	%line{472} %argrw{"wr"}
	add		___572_i ___572_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:471
#     for (int j = -1; j <= 1; j++) {
	assign		$tmp398 ___570_j 	%line{471} %argrw{"wr"}
	add		___570_j ___570_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:470
#   for (int k = -1; k <= 1; k++) {
	assign		$tmp399 ___568_k 	%line{470} %argrw{"wr"}
	add		___568_k ___568_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:485
#   outDistance = minDistance;
	assign		Distance ___567_minDistance 	%line{485} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:486
#   outColor = hash_vector3_to_color(cellPosition + targetOffset);
	add		$tmp400 ___567_cellPosition ___567_targetOffset 	%line{486} %argrw{"wrr"}
	functioncall	$const60 1034 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:69
#   return color(hash_vector3_to_float(k),
	functioncall	$const37 1019 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{69} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp401 $tmp400 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:70
#                hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp403.x $tmp400 $const12 	%line{70} %argrw{"wrr"}
	compref		$tmp403.y $tmp400 $const11 	%argrw{"wrr"}
	compref		$tmp403.z $tmp400 $const21 	%argrw{"wrr"}
	assign		$tmp403.w $const2 	%argrw{"wr"}
	functioncall	$const59 1026 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp404 $tmp403.x $tmp403.y $tmp403.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp402 $tmp404 $tmp403.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:71
#                hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp406.x $tmp400 $const12 	%line{71} %argrw{"wrr"}
	compref		$tmp406.y $tmp400 $const11 	%argrw{"wrr"}
	compref		$tmp406.z $tmp400 $const21 	%argrw{"wrr"}
	assign		$tmp406.w $const4 	%argrw{"wr"}
	functioncall	$const59 1033 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp407 $tmp406.x $tmp406.y $tmp406.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp405 $tmp407 $tmp406.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:69
#   return color(hash_vector3_to_float(k),
	color		Color $tmp401 $tmp402 $tmp405 	%line{69} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:487
#   outPosition = targetPosition + cellPosition;
	add		Position ___567_targetPosition ___567_cellPosition 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{487} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:980
#     else if (feature == "smooth_f1") {
	eq		$tmp408 feature $const17 	%line{980} %argrw{"wrr"}
	if		$tmp408 1188 1568 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:981
#       voronoi_smooth_f1_3d(
	functioncall	$const61 1188 	%line{981} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:499
#   vector3 cellPosition = floor(coord);
	floor		___575_cellPosition coord 	%line{499} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:500
#   vector3 localPosition = coord - cellPosition;
	sub		___575_localPosition coord ___575_cellPosition 	%line{500} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:502
#   float smoothDistance = 8.0;
	assign		___575_smoothDistance $const9 	%line{502} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:503
#   color smoothColor = color(0.0);
	assign		___575_smoothColor $const19 	%line{503} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:504
#   vector3 smoothPosition = vector3(0.0);
	assign		___575_smoothPosition $const62 	%line{504} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:505
#   for (int k = -2; k <= 2; k++) {
	for		$tmp410 1045 1047 1183 1185 	%line{505} %argrw{"r"}
	assign		___576_k $const20 	%argrw{"wr"}
	le		$tmp409 ___576_k $const21 	%argrw{"wrr"}
	neq		$tmp410 $tmp409 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:506
#     for (int j = -2; j <= 2; j++) {
	for		$tmp412 1049 1051 1181 1183 	%line{506} %argrw{"r"}
	assign		___578_j $const20 	%argrw{"wr"}
	le		$tmp411 ___578_j $const21 	%argrw{"wrr"}
	neq		$tmp412 $tmp411 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:507
#       for (int i = -2; i <= 2; i++) {
	for		$tmp414 1053 1055 1179 1181 	%line{507} %argrw{"r"}
	assign		___580_i $const20 	%argrw{"wr"}
	le		$tmp413 ___580_i $const21 	%argrw{"wrr"}
	neq		$tmp414 $tmp413 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:508
#         vector3 cellOffset = vector3(i, j, k);
	assign		$tmp415 ___580_i 	%line{508} %argrw{"wr"}
	assign		$tmp416 ___578_j 	%argrw{"wr"}
	assign		$tmp417 ___576_k 	%argrw{"wr"}
	point		___581_cellOffset $tmp415 $tmp416 $tmp417 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:510
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	add		$tmp419 ___575_cellPosition ___581_cellOffset 	%line{510} %argrw{"wrr"}
	functioncall	$const58 1078 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	functioncall	$const37 1063 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{38} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp420 $tmp419 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:39
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp422.x $tmp419 $const12 	%line{39} %argrw{"wrr"}
	compref		$tmp422.y $tmp419 $const11 	%argrw{"wrr"}
	compref		$tmp422.z $tmp419 $const21 	%argrw{"wrr"}
	assign		$tmp422.w $const2 	%argrw{"wr"}
	functioncall	$const59 1070 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp423 $tmp422.x $tmp422.y $tmp422.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp421 $tmp423 $tmp422.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:40
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp425.x $tmp419 $const12 	%line{40} %argrw{"wrr"}
	compref		$tmp425.y $tmp419 $const11 	%argrw{"wrr"}
	compref		$tmp425.z $tmp419 $const21 	%argrw{"wrr"}
	assign		$tmp425.w $const4 	%argrw{"wr"}
	functioncall	$const59 1077 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp426 $tmp425.x $tmp425.y $tmp425.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp424 $tmp426 $tmp425.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	point		$tmp418 $tmp420 $tmp421 $tmp424 	%line{38} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:510
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	mul		$tmp427 $tmp418 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{510} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:509
#         vector3 pointPosition = cellOffset +
	add		___581_pointPosition ___581_cellOffset $tmp427 	%line{509} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:511
#         float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 1143 	%line{511} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:438
#   if (metric == "euclidean") {
	eq		$tmp428 metric $const39 	%line{438} %argrw{"wrr"}
	if		$tmp428 1085 1143 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:439
#     return distance(a, b);
	distance	___581_distanceToPoint ___581_pointPosition ___575_localPosition 	%line{439} %argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:441
#   else if (metric == "manhattan") {
	eq		$tmp429 metric $const42 	%line{441} %argrw{"wrr"}
	if		$tmp429 1102 1143 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:442
#     return abs(a[0] - b[0]) + abs(a[1] - b[1]) + abs(a[2] - b[2]);
	compref		$tmp431 ___581_pointPosition $const12 	%line{442} %argrw{"wrr"}
	compref		$tmp432 ___575_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp433 $tmp431 $tmp432 	%argrw{"wrr"}
	abs		$tmp430 $tmp433 	%argrw{"wr"}
	compref		$tmp435 ___581_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp436 ___575_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp437 $tmp435 $tmp436 	%argrw{"wrr"}
	abs		$tmp434 $tmp437 	%argrw{"wr"}
	add		$tmp438 $tmp430 $tmp434 	%argrw{"wrr"}
	compref		$tmp440 ___581_pointPosition $const21 	%argrw{"wrr"}
	compref		$tmp441 ___575_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp442 $tmp440 $tmp441 	%argrw{"wrr"}
	abs		$tmp439 $tmp442 	%argrw{"wr"}
	add		___581_distanceToPoint $tmp438 $tmp439 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:444
#   else if (metric == "chebychev") {
	eq		$tmp443 metric $const43 	%line{444} %argrw{"wrr"}
	if		$tmp443 1119 1143 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:445
#     return max(abs(a[0] - b[0]), max(abs(a[1] - b[1]), abs(a[2] - b[2])));
	compref		$tmp445 ___581_pointPosition $const12 	%line{445} %argrw{"wrr"}
	compref		$tmp446 ___575_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp447 $tmp445 $tmp446 	%argrw{"wrr"}
	abs		$tmp444 $tmp447 	%argrw{"wr"}
	compref		$tmp450 ___581_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp451 ___575_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp452 $tmp450 $tmp451 	%argrw{"wrr"}
	abs		$tmp449 $tmp452 	%argrw{"wr"}
	compref		$tmp454 ___581_pointPosition $const21 	%argrw{"wrr"}
	compref		$tmp455 ___575_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp456 $tmp454 $tmp455 	%argrw{"wrr"}
	abs		$tmp453 $tmp456 	%argrw{"wr"}
	max		$tmp448 $tmp449 $tmp453 	%argrw{"wrr"}
	max		___581_distanceToPoint $tmp444 $tmp448 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:447
#   else if (metric == "minkowski") {
	eq		$tmp457 metric $const44 	%line{447} %argrw{"wrr"}
	if		$tmp457 1141 1143 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	compref		$tmp460 ___581_pointPosition $const12 	%line{448} %argrw{"wrr"}
	compref		$tmp461 ___575_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp462 $tmp460 $tmp461 	%argrw{"wrr"}
	abs		$tmp459 $tmp462 	%argrw{"wr"}
	pow		$tmp458 $tmp459 Exponent 	%argrw{"wrr"}
	compref		$tmp465 ___581_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp466 ___575_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp467 $tmp465 $tmp466 	%argrw{"wrr"}
	abs		$tmp464 $tmp467 	%argrw{"wr"}
	pow		$tmp463 $tmp464 Exponent 	%argrw{"wrr"}
	add		$tmp468 $tmp458 $tmp463 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:449
#                    pow(abs(a[2] - b[2]), exponent),
	compref		$tmp471 ___581_pointPosition $const21 	%line{449} %argrw{"wrr"}
	compref		$tmp472 ___575_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp473 $tmp471 $tmp472 	%argrw{"wrr"}
	abs		$tmp470 $tmp473 	%argrw{"wr"}
	pow		$tmp469 $tmp470 Exponent 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	add		$tmp474 $tmp468 $tmp469 	%line{448} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:450
#                1.0 / exponent);
	div		$tmp475 $const2 Exponent 	%line{450} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	pow		___581_distanceToPoint $tmp474 $tmp475 	%line{448} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:450
#                1.0 / exponent);
	return	%line{450}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:453
#     return 0.0;
	assign		___581_distanceToPoint $const1 	%line{453} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:513
#             0.0, 1.0, 0.5 + 0.5 * (smoothDistance - distanceToPoint) / smoothness);
	sub		$tmp476 ___575_smoothDistance ___581_distanceToPoint 	%line{513} %argrw{"wrr"}
	mul		$tmp477 $const5 $tmp476 	%argrw{"wrr"}
	div		$tmp478 $tmp477 smoothness 	%argrw{"wrr"}
	add		$tmp479 $const5 $tmp478 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:512
#         float h = smoothstep(
	smoothstep	___581_h $const1 $const2 $tmp479 	%line{512} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:514
#         float correctionFactor = smoothness * h * (1.0 - h);
	mul		$tmp480 smoothness ___581_h 	%line{514} %argrw{"wrr"}
	sub		$tmp481 $const2 ___581_h 	%argrw{"wrr"}
	mul		___581_correctionFactor $tmp480 $tmp481 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:515
#         smoothDistance = mix(smoothDistance, distanceToPoint, h) - correctionFactor;
	mix		$tmp482 ___575_smoothDistance ___581_distanceToPoint ___581_h 	%line{515} %argrw{"wrrr"}
	sub		___575_smoothDistance $tmp482 ___581_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:516
#         correctionFactor /= 1.0 + 3.0 * smoothness;
	mul		$tmp483 $const22 smoothness 	%line{516} %argrw{"wrr"}
	add		$tmp484 $const2 $tmp483 	%argrw{"wrr"}
	div		___581_correctionFactor ___581_correctionFactor $tmp484 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:517
#         color cellColor = hash_vector3_to_color(cellPosition + cellOffset);
	add		$tmp485 ___575_cellPosition ___581_cellOffset 	%line{517} %argrw{"wrr"}
	functioncall	$const60 1175 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:69
#   return color(hash_vector3_to_float(k),
	functioncall	$const37 1160 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{69} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp486 $tmp485 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:70
#                hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp488.x $tmp485 $const12 	%line{70} %argrw{"wrr"}
	compref		$tmp488.y $tmp485 $const11 	%argrw{"wrr"}
	compref		$tmp488.z $tmp485 $const21 	%argrw{"wrr"}
	assign		$tmp488.w $const2 	%argrw{"wr"}
	functioncall	$const59 1167 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp489 $tmp488.x $tmp488.y $tmp488.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp487 $tmp489 $tmp488.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:71
#                hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp491.x $tmp485 $const12 	%line{71} %argrw{"wrr"}
	compref		$tmp491.y $tmp485 $const11 	%argrw{"wrr"}
	compref		$tmp491.z $tmp485 $const21 	%argrw{"wrr"}
	assign		$tmp491.w $const4 	%argrw{"wr"}
	functioncall	$const59 1174 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp492 $tmp491.x $tmp491.y $tmp491.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp490 $tmp492 $tmp491.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:69
#   return color(hash_vector3_to_float(k),
	color		___581_cellColor $tmp486 $tmp487 $tmp490 	%line{69} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:518
#         smoothColor = mix(smoothColor, cellColor, h) - correctionFactor;
	mix		$tmp493 ___575_smoothColor ___581_cellColor ___581_h 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{518} %argrw{"wrrr"}
	sub		___575_smoothColor $tmp493 ___581_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:519
#         smoothPosition = mix(smoothPosition, pointPosition, h) - correctionFactor;
	mix		$tmp494 ___575_smoothPosition ___581_pointPosition ___581_h 	%line{519} %argrw{"wrrr"}
	sub		___575_smoothPosition $tmp494 ___581_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:507
#       for (int i = -2; i <= 2; i++) {
	assign		$tmp495 ___580_i 	%line{507} %argrw{"wr"}
	add		___580_i ___580_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:506
#     for (int j = -2; j <= 2; j++) {
	assign		$tmp496 ___578_j 	%line{506} %argrw{"wr"}
	add		___578_j ___578_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:505
#   for (int k = -2; k <= 2; k++) {
	assign		$tmp497 ___576_k 	%line{505} %argrw{"wr"}
	add		___576_k ___576_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:523
#   outDistance = smoothDistance;
	assign		Distance ___575_smoothDistance 	%line{523} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:524
#   outColor = smoothColor;
	assign		Color ___575_smoothColor 	%line{524} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:525
#   outPosition = cellPosition + smoothPosition;
	add		Position ___575_cellPosition ___575_smoothPosition 	%line{525} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:984
#     else if (feature == "f2") {
	eq		$tmp498 feature $const23 	%line{984} %argrw{"wrr"}
	if		$tmp498 1337 1568 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:985
#       voronoi_f2_3d(coord, Exponent, randomness, metric, Distance, Color, Position);
	functioncall	$const63 1337 	%line{985} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:536
#   vector3 cellPosition = floor(coord);
	floor		___582_cellPosition coord 	%line{536} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:537
#   vector3 localPosition = coord - cellPosition;
	sub		___582_localPosition coord ___582_cellPosition 	%line{537} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:539
#   float distanceF1 = 8.0;
	assign		___582_distanceF1 $const9 	%line{539} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:540
#   float distanceF2 = 8.0;
	assign		___582_distanceF2 $const9 	%line{540} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:541
#   vector3 offsetF1 = vector3(0.0);
	assign		___582_offsetF1 $const62 	%line{541} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:542
#   vector3 positionF1 = vector3(0.0);
	assign		___582_positionF1 $const62 	%line{542} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:544
#   for (int k = -1; k <= 1; k++) {
	for		$tmp500 1199 1201 1314 1316 	%line{544} %argrw{"r"}
	assign		___583_k $const10 	%argrw{"wr"}
	le		$tmp499 ___583_k $const11 	%argrw{"wrr"}
	neq		$tmp500 $tmp499 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:545
#     for (int j = -1; j <= 1; j++) {
	for		$tmp502 1203 1205 1312 1314 	%line{545} %argrw{"r"}
	assign		___585_j $const10 	%argrw{"wr"}
	le		$tmp501 ___585_j $const11 	%argrw{"wrr"}
	neq		$tmp502 $tmp501 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:546
#       for (int i = -1; i <= 1; i++) {
	for		$tmp504 1207 1209 1310 1312 	%line{546} %argrw{"r"}
	assign		___587_i $const10 	%argrw{"wr"}
	le		$tmp503 ___587_i $const11 	%argrw{"wrr"}
	neq		$tmp504 $tmp503 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:547
#         vector3 cellOffset = vector3(i, j, k);
	assign		$tmp505 ___587_i 	%line{547} %argrw{"wr"}
	assign		$tmp506 ___585_j 	%argrw{"wr"}
	assign		$tmp507 ___583_k 	%argrw{"wr"}
	point		___588_cellOffset $tmp505 $tmp506 $tmp507 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:549
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	add		$tmp509 ___582_cellPosition ___588_cellOffset 	%line{549} %argrw{"wrr"}
	functioncall	$const58 1232 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	functioncall	$const37 1217 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{38} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp510 $tmp509 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:39
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp512.x $tmp509 $const12 	%line{39} %argrw{"wrr"}
	compref		$tmp512.y $tmp509 $const11 	%argrw{"wrr"}
	compref		$tmp512.z $tmp509 $const21 	%argrw{"wrr"}
	assign		$tmp512.w $const2 	%argrw{"wr"}
	functioncall	$const59 1224 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp513 $tmp512.x $tmp512.y $tmp512.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp511 $tmp513 $tmp512.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:40
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp515.x $tmp509 $const12 	%line{40} %argrw{"wrr"}
	compref		$tmp515.y $tmp509 $const11 	%argrw{"wrr"}
	compref		$tmp515.z $tmp509 $const21 	%argrw{"wrr"}
	assign		$tmp515.w $const4 	%argrw{"wr"}
	functioncall	$const59 1231 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp516 $tmp515.x $tmp515.y $tmp515.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp514 $tmp516 $tmp515.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	point		$tmp508 $tmp510 $tmp511 $tmp514 	%line{38} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:549
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	mul		$tmp517 $tmp508 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{549} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:548
#         vector3 pointPosition = cellOffset +
	add		___588_pointPosition ___588_cellOffset $tmp517 	%line{548} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:550
#         float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 1297 	%line{550} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:438
#   if (metric == "euclidean") {
	eq		$tmp518 metric $const39 	%line{438} %argrw{"wrr"}
	if		$tmp518 1239 1297 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:439
#     return distance(a, b);
	distance	___588_distanceToPoint ___588_pointPosition ___582_localPosition 	%line{439} %argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:441
#   else if (metric == "manhattan") {
	eq		$tmp519 metric $const42 	%line{441} %argrw{"wrr"}
	if		$tmp519 1256 1297 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:442
#     return abs(a[0] - b[0]) + abs(a[1] - b[1]) + abs(a[2] - b[2]);
	compref		$tmp521 ___588_pointPosition $const12 	%line{442} %argrw{"wrr"}
	compref		$tmp522 ___582_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp523 $tmp521 $tmp522 	%argrw{"wrr"}
	abs		$tmp520 $tmp523 	%argrw{"wr"}
	compref		$tmp525 ___588_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp526 ___582_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp527 $tmp525 $tmp526 	%argrw{"wrr"}
	abs		$tmp524 $tmp527 	%argrw{"wr"}
	add		$tmp528 $tmp520 $tmp524 	%argrw{"wrr"}
	compref		$tmp530 ___588_pointPosition $const21 	%argrw{"wrr"}
	compref		$tmp531 ___582_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp532 $tmp530 $tmp531 	%argrw{"wrr"}
	abs		$tmp529 $tmp532 	%argrw{"wr"}
	add		___588_distanceToPoint $tmp528 $tmp529 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:444
#   else if (metric == "chebychev") {
	eq		$tmp533 metric $const43 	%line{444} %argrw{"wrr"}
	if		$tmp533 1273 1297 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:445
#     return max(abs(a[0] - b[0]), max(abs(a[1] - b[1]), abs(a[2] - b[2])));
	compref		$tmp535 ___588_pointPosition $const12 	%line{445} %argrw{"wrr"}
	compref		$tmp536 ___582_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp537 $tmp535 $tmp536 	%argrw{"wrr"}
	abs		$tmp534 $tmp537 	%argrw{"wr"}
	compref		$tmp540 ___588_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp541 ___582_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp542 $tmp540 $tmp541 	%argrw{"wrr"}
	abs		$tmp539 $tmp542 	%argrw{"wr"}
	compref		$tmp544 ___588_pointPosition $const21 	%argrw{"wrr"}
	compref		$tmp545 ___582_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp546 $tmp544 $tmp545 	%argrw{"wrr"}
	abs		$tmp543 $tmp546 	%argrw{"wr"}
	max		$tmp538 $tmp539 $tmp543 	%argrw{"wrr"}
	max		___588_distanceToPoint $tmp534 $tmp538 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:447
#   else if (metric == "minkowski") {
	eq		$tmp547 metric $const44 	%line{447} %argrw{"wrr"}
	if		$tmp547 1295 1297 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	compref		$tmp550 ___588_pointPosition $const12 	%line{448} %argrw{"wrr"}
	compref		$tmp551 ___582_localPosition $const12 	%argrw{"wrr"}
	sub		$tmp552 $tmp550 $tmp551 	%argrw{"wrr"}
	abs		$tmp549 $tmp552 	%argrw{"wr"}
	pow		$tmp548 $tmp549 Exponent 	%argrw{"wrr"}
	compref		$tmp555 ___588_pointPosition $const11 	%argrw{"wrr"}
	compref		$tmp556 ___582_localPosition $const11 	%argrw{"wrr"}
	sub		$tmp557 $tmp555 $tmp556 	%argrw{"wrr"}
	abs		$tmp554 $tmp557 	%argrw{"wr"}
	pow		$tmp553 $tmp554 Exponent 	%argrw{"wrr"}
	add		$tmp558 $tmp548 $tmp553 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:449
#                    pow(abs(a[2] - b[2]), exponent),
	compref		$tmp561 ___588_pointPosition $const21 	%line{449} %argrw{"wrr"}
	compref		$tmp562 ___582_localPosition $const21 	%argrw{"wrr"}
	sub		$tmp563 $tmp561 $tmp562 	%argrw{"wrr"}
	abs		$tmp560 $tmp563 	%argrw{"wr"}
	pow		$tmp559 $tmp560 Exponent 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	add		$tmp564 $tmp558 $tmp559 	%line{448} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:450
#                1.0 / exponent);
	div		$tmp565 $const2 Exponent 	%line{450} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:448
#     return pow(pow(abs(a[0] - b[0]), exponent) + pow(abs(a[1] - b[1]), exponent) +
	pow		___588_distanceToPoint $tmp564 $tmp565 	%line{448} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:450
#                1.0 / exponent);
	return	%line{450}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:453
#     return 0.0;
	assign		___588_distanceToPoint $const1 	%line{453} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:551
#         if (distanceToPoint < distanceF1) {
	lt		$tmp566 ___588_distanceToPoint ___582_distanceF1 	%line{551} %argrw{"wrr"}
	if		$tmp566 1305 1310 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:552
#           distanceF2 = distanceF1;
	assign		___582_distanceF2 ___582_distanceF1 	%line{552} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:553
#           distanceF1 = distanceToPoint;
	assign		___582_distanceF1 ___588_distanceToPoint 	%line{553} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:554
#           offsetF2 = offsetF1;
	assign		___582_offsetF2 ___582_offsetF1 	%line{554} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:555
#           offsetF1 = cellOffset;
	assign		___582_offsetF1 ___588_cellOffset 	%line{555} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:556
#           positionF2 = positionF1;
	assign		___582_positionF2 ___582_positionF1 	%line{556} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:557
#           positionF1 = pointPosition;
	assign		___582_positionF1 ___588_pointPosition 	%line{557} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:559
#         else if (distanceToPoint < distanceF2) {
	lt		$tmp567 ___588_distanceToPoint ___582_distanceF2 	%line{559} %argrw{"wrr"}
	if		$tmp567 1310 1310 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:560
#           distanceF2 = distanceToPoint;
	assign		___582_distanceF2 ___588_distanceToPoint 	%line{560} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:561
#           offsetF2 = cellOffset;
	assign		___582_offsetF2 ___588_cellOffset 	%line{561} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:562
#           positionF2 = pointPosition;
	assign		___582_positionF2 ___588_pointPosition 	%line{562} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:546
#       for (int i = -1; i <= 1; i++) {
	assign		$tmp568 ___587_i 	%line{546} %argrw{"wr"}
	add		___587_i ___587_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:545
#     for (int j = -1; j <= 1; j++) {
	assign		$tmp569 ___585_j 	%line{545} %argrw{"wr"}
	add		___585_j ___585_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:544
#   for (int k = -1; k <= 1; k++) {
	assign		$tmp570 ___583_k 	%line{544} %argrw{"wr"}
	add		___583_k ___583_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:567
#   outDistance = distanceF2;
	assign		Distance ___582_distanceF2 	%line{567} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:568
#   outColor = hash_vector3_to_color(cellPosition + offsetF2);
	add		$tmp571 ___582_cellPosition ___582_offsetF2 	%line{568} %argrw{"wrr"}
	functioncall	$const60 1336 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:69
#   return color(hash_vector3_to_float(k),
	functioncall	$const37 1321 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{69} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp572 $tmp571 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:70
#                hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp574.x $tmp571 $const12 	%line{70} %argrw{"wrr"}
	compref		$tmp574.y $tmp571 $const11 	%argrw{"wrr"}
	compref		$tmp574.z $tmp571 $const21 	%argrw{"wrr"}
	assign		$tmp574.w $const2 	%argrw{"wr"}
	functioncall	$const59 1328 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp575 $tmp574.x $tmp574.y $tmp574.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp573 $tmp575 $tmp574.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:71
#                hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp577.x $tmp571 $const12 	%line{71} %argrw{"wrr"}
	compref		$tmp577.y $tmp571 $const11 	%argrw{"wrr"}
	compref		$tmp577.z $tmp571 $const21 	%argrw{"wrr"}
	assign		$tmp577.w $const4 	%argrw{"wr"}
	functioncall	$const59 1335 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp578 $tmp577.x $tmp577.y $tmp577.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp576 $tmp578 $tmp577.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:69
#   return color(hash_vector3_to_float(k),
	color		Color $tmp572 $tmp573 $tmp576 	%line{69} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:569
#   outPosition = positionF2 + cellPosition;
	add		Position ___582_positionF2 ___582_cellPosition 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{569} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:987
#     else if (feature == "distance_to_edge") {
	eq		$tmp579 feature $const25 	%line{987} %argrw{"wrr"}
	if		$tmp579 1447 1568 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:988
#       voronoi_distance_to_edge_3d(coord, randomness, Distance);
	functioncall	$const64 1447 	%line{988} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:574
#   vector3 cellPosition = floor(coord);
	floor		___591_cellPosition coord 	%line{574} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:575
#   vector3 localPosition = coord - cellPosition;
	sub		___591_localPosition coord ___591_cellPosition 	%line{575} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:578
#   float minDistance = 8.0;
	assign		___591_minDistance $const9 	%line{578} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:579
#   for (int k = -1; k <= 1; k++) {
	for		$tmp581 1345 1347 1390 1392 	%line{579} %argrw{"r"}
	assign		___592_k $const10 	%argrw{"wr"}
	le		$tmp580 ___592_k $const11 	%argrw{"wrr"}
	neq		$tmp581 $tmp580 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:580
#     for (int j = -1; j <= 1; j++) {
	for		$tmp583 1349 1351 1388 1390 	%line{580} %argrw{"r"}
	assign		___594_j $const10 	%argrw{"wr"}
	le		$tmp582 ___594_j $const11 	%argrw{"wrr"}
	neq		$tmp583 $tmp582 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:581
#       for (int i = -1; i <= 1; i++) {
	for		$tmp585 1353 1355 1386 1388 	%line{581} %argrw{"r"}
	assign		___596_i $const10 	%argrw{"wr"}
	le		$tmp584 ___596_i $const11 	%argrw{"wrr"}
	neq		$tmp585 $tmp584 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:582
#         vector3 cellOffset = vector3(i, j, k);
	assign		$tmp586 ___596_i 	%line{582} %argrw{"wr"}
	assign		$tmp587 ___594_j 	%argrw{"wr"}
	assign		$tmp588 ___592_k 	%argrw{"wr"}
	point		___597_cellOffset $tmp586 $tmp587 $tmp588 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:584
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness -
	add		$tmp590 ___591_cellPosition ___597_cellOffset 	%line{584} %argrw{"wrr"}
	functioncall	$const58 1378 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	functioncall	$const37 1363 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{38} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp591 $tmp590 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:39
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp593.x $tmp590 $const12 	%line{39} %argrw{"wrr"}
	compref		$tmp593.y $tmp590 $const11 	%argrw{"wrr"}
	compref		$tmp593.z $tmp590 $const21 	%argrw{"wrr"}
	assign		$tmp593.w $const2 	%argrw{"wr"}
	functioncall	$const59 1370 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp594 $tmp593.x $tmp593.y $tmp593.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp592 $tmp594 $tmp593.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:40
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp596.x $tmp590 $const12 	%line{40} %argrw{"wrr"}
	compref		$tmp596.y $tmp590 $const11 	%argrw{"wrr"}
	compref		$tmp596.z $tmp590 $const21 	%argrw{"wrr"}
	assign		$tmp596.w $const4 	%argrw{"wr"}
	functioncall	$const59 1377 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp597 $tmp596.x $tmp596.y $tmp596.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp595 $tmp597 $tmp596.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	point		$tmp589 $tmp591 $tmp592 $tmp595 	%line{38} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:584
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness -
	mul		$tmp598 $tmp589 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{584} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:583
#         vector3 vectorToPoint = cellOffset +
	add		$tmp599 ___597_cellOffset $tmp598 	%line{583} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:584
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness -
	sub		___597_vectorToPoint $tmp599 ___591_localPosition 	%line{584} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:586
#         float distanceToPoint = dot(vectorToPoint, vectorToPoint);
	dot		___597_distanceToPoint ___597_vectorToPoint ___597_vectorToPoint 	%line{586} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:587
#         if (distanceToPoint < minDistance) {
	lt		$tmp600 ___597_distanceToPoint ___591_minDistance 	%line{587} %argrw{"wrr"}
	if		$tmp600 1386 1386 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:588
#           minDistance = distanceToPoint;
	assign		___591_minDistance ___597_distanceToPoint 	%line{588} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:589
#           vectorToClosest = vectorToPoint;
	assign		___591_vectorToClosest ___597_vectorToPoint 	%line{589} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:581
#       for (int i = -1; i <= 1; i++) {
	assign		$tmp601 ___596_i 	%line{581} %argrw{"wr"}
	add		___596_i ___596_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:580
#     for (int j = -1; j <= 1; j++) {
	assign		$tmp602 ___594_j 	%line{580} %argrw{"wr"}
	add		___594_j ___594_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:579
#   for (int k = -1; k <= 1; k++) {
	assign		$tmp603 ___592_k 	%line{579} %argrw{"wr"}
	add		___592_k ___592_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:595
#   minDistance = 8.0;
	assign		___591_minDistance $const9 	%line{595} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:596
#   for (int k = -1; k <= 1; k++) {
	for		$tmp605 1395 1397 1444 1446 	%line{596} %argrw{"r"}
	assign		___599_k $const10 	%argrw{"wr"}
	le		$tmp604 ___599_k $const11 	%argrw{"wrr"}
	neq		$tmp605 $tmp604 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:597
#     for (int j = -1; j <= 1; j++) {
	for		$tmp607 1399 1401 1442 1444 	%line{597} %argrw{"r"}
	assign		___601_j $const10 	%argrw{"wr"}
	le		$tmp606 ___601_j $const11 	%argrw{"wrr"}
	neq		$tmp607 $tmp606 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:598
#       for (int i = -1; i <= 1; i++) {
	for		$tmp609 1403 1405 1440 1442 	%line{598} %argrw{"r"}
	assign		___603_i $const10 	%argrw{"wr"}
	le		$tmp608 ___603_i $const11 	%argrw{"wrr"}
	neq		$tmp609 $tmp608 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:599
#         vector3 cellOffset = vector3(i, j, k);
	assign		$tmp610 ___603_i 	%line{599} %argrw{"wr"}
	assign		$tmp611 ___601_j 	%argrw{"wr"}
	assign		$tmp612 ___599_k 	%argrw{"wr"}
	point		___604_cellOffset $tmp610 $tmp611 $tmp612 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:601
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness -
	add		$tmp614 ___591_cellPosition ___604_cellOffset 	%line{601} %argrw{"wrr"}
	functioncall	$const58 1428 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	functioncall	$const37 1413 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{38} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp615 $tmp614 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:39
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp617.x $tmp614 $const12 	%line{39} %argrw{"wrr"}
	compref		$tmp617.y $tmp614 $const11 	%argrw{"wrr"}
	compref		$tmp617.z $tmp614 $const21 	%argrw{"wrr"}
	assign		$tmp617.w $const2 	%argrw{"wr"}
	functioncall	$const59 1420 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp618 $tmp617.x $tmp617.y $tmp617.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp616 $tmp618 $tmp617.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:40
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp620.x $tmp614 $const12 	%line{40} %argrw{"wrr"}
	compref		$tmp620.y $tmp614 $const11 	%argrw{"wrr"}
	compref		$tmp620.z $tmp614 $const21 	%argrw{"wrr"}
	assign		$tmp620.w $const4 	%argrw{"wr"}
	functioncall	$const59 1427 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp621 $tmp620.x $tmp620.y $tmp620.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp619 $tmp621 $tmp620.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	point		$tmp613 $tmp615 $tmp616 $tmp619 	%line{38} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:601
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness -
	mul		$tmp622 $tmp613 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{601} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:600
#         vector3 vectorToPoint = cellOffset +
	add		$tmp623 ___604_cellOffset $tmp622 	%line{600} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:601
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness -
	sub		___604_vectorToPoint $tmp623 ___591_localPosition 	%line{601} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:603
#         vector3 perpendicularToEdge = vectorToPoint - vectorToClosest;
	sub		___604_perpendicularToEdge ___604_vectorToPoint ___591_vectorToClosest 	%line{603} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:604
#         if (dot(perpendicularToEdge, perpendicularToEdge) > 0.0001) {
	dot		$tmp624 ___604_perpendicularToEdge ___604_perpendicularToEdge 	%line{604} %argrw{"wrr"}
	gt		$tmp625 $tmp624 $const51 	%argrw{"wrr"}
	if		$tmp625 1440 1440 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:605
#           float distanceToEdge = dot((vectorToClosest + vectorToPoint) / 2.0,
	add		$tmp626 ___591_vectorToClosest ___604_vectorToPoint 	%line{605} %argrw{"wrr"}
	div		$tmp627 $tmp626 $const4 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:606
#                                      normalize((vector)perpendicularToEdge));
	normalize	$tmp628 ___604_perpendicularToEdge 	%line{606} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:605
#           float distanceToEdge = dot((vectorToClosest + vectorToPoint) / 2.0,
	dot		___605_distanceToEdge $tmp627 $tmp628 	%line{605} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:607
#           minDistance = min(minDistance, distanceToEdge);
	min		___591_minDistance ___591_minDistance ___605_distanceToEdge 	%line{607} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:598
#       for (int i = -1; i <= 1; i++) {
	assign		$tmp629 ___603_i 	%line{598} %argrw{"wr"}
	add		___603_i ___603_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:597
#     for (int j = -1; j <= 1; j++) {
	assign		$tmp630 ___601_j 	%line{597} %argrw{"wr"}
	add		___601_j ___601_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:596
#   for (int k = -1; k <= 1; k++) {
	assign		$tmp631 ___599_k 	%line{596} %argrw{"wr"}
	add		___599_k ___599_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:612
#   outDistance = minDistance;
	assign		Distance ___591_minDistance 	%line{612} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:990
#     else if (feature == "n_sphere_radius") {
	eq		$tmp632 feature $const28 	%line{990} %argrw{"wrr"}
	if		$tmp632 1567 1568 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:991
#       voronoi_n_sphere_radius_3d(coord, randomness, Radius);
	functioncall	$const65 1567 	%line{991} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:617
#   vector3 cellPosition = floor(coord);
	floor		___606_cellPosition coord 	%line{617} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:618
#   vector3 localPosition = coord - cellPosition;
	sub		___606_localPosition coord ___606_cellPosition 	%line{618} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:622
#   float minDistance = 8.0;
	assign		___606_minDistance $const9 	%line{622} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:623
#   for (int k = -1; k <= 1; k++) {
	for		$tmp634 1455 1457 1500 1502 	%line{623} %argrw{"r"}
	assign		___607_k $const10 	%argrw{"wr"}
	le		$tmp633 ___607_k $const11 	%argrw{"wrr"}
	neq		$tmp634 $tmp633 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:624
#     for (int j = -1; j <= 1; j++) {
	for		$tmp636 1459 1461 1498 1500 	%line{624} %argrw{"r"}
	assign		___609_j $const10 	%argrw{"wr"}
	le		$tmp635 ___609_j $const11 	%argrw{"wrr"}
	neq		$tmp636 $tmp635 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:625
#       for (int i = -1; i <= 1; i++) {
	for		$tmp638 1463 1465 1496 1498 	%line{625} %argrw{"r"}
	assign		___611_i $const10 	%argrw{"wr"}
	le		$tmp637 ___611_i $const11 	%argrw{"wrr"}
	neq		$tmp638 $tmp637 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:626
#         vector3 cellOffset = vector3(i, j, k);
	assign		$tmp639 ___611_i 	%line{626} %argrw{"wr"}
	assign		$tmp640 ___609_j 	%argrw{"wr"}
	assign		$tmp641 ___607_k 	%argrw{"wr"}
	point		___612_cellOffset $tmp639 $tmp640 $tmp641 	%argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:628
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	add		$tmp643 ___606_cellPosition ___612_cellOffset 	%line{628} %argrw{"wrr"}
	functioncall	$const58 1488 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	functioncall	$const37 1473 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{38} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp644 $tmp643 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:39
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp646.x $tmp643 $const12 	%line{39} %argrw{"wrr"}
	compref		$tmp646.y $tmp643 $const11 	%argrw{"wrr"}
	compref		$tmp646.z $tmp643 $const21 	%argrw{"wrr"}
	assign		$tmp646.w $const2 	%argrw{"wr"}
	functioncall	$const59 1480 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp647 $tmp646.x $tmp646.y $tmp646.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp645 $tmp647 $tmp646.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:40
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp649.x $tmp643 $const12 	%line{40} %argrw{"wrr"}
	compref		$tmp649.y $tmp643 $const11 	%argrw{"wrr"}
	compref		$tmp649.z $tmp643 $const21 	%argrw{"wrr"}
	assign		$tmp649.w $const4 	%argrw{"wr"}
	functioncall	$const59 1487 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp650 $tmp649.x $tmp649.y $tmp649.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp648 $tmp650 $tmp649.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	point		$tmp642 $tmp644 $tmp645 $tmp648 	%line{38} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:628
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	mul		$tmp651 $tmp642 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{628} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:627
#         vector3 pointPosition = cellOffset +
	add		___612_pointPosition ___612_cellOffset $tmp651 	%line{627} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:629
#         float distanceToPoint = distance(pointPosition, localPosition);
	distance	___612_distanceToPoint ___612_pointPosition ___606_localPosition 	%line{629} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:630
#         if (distanceToPoint < minDistance) {
	lt		$tmp652 ___612_distanceToPoint ___606_minDistance 	%line{630} %argrw{"wrr"}
	if		$tmp652 1496 1496 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:631
#           minDistance = distanceToPoint;
	assign		___606_minDistance ___612_distanceToPoint 	%line{631} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:632
#           closestPoint = pointPosition;
	assign		___606_closestPoint ___612_pointPosition 	%line{632} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:633
#           closestPointOffset = cellOffset;
	assign		___606_closestPointOffset ___612_cellOffset 	%line{633} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:625
#       for (int i = -1; i <= 1; i++) {
	assign		$tmp653 ___611_i 	%line{625} %argrw{"wr"}
	add		___611_i ___611_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:624
#     for (int j = -1; j <= 1; j++) {
	assign		$tmp654 ___609_j 	%line{624} %argrw{"wr"}
	add		___609_j ___609_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:623
#   for (int k = -1; k <= 1; k++) {
	assign		$tmp655 ___607_k 	%line{623} %argrw{"wr"}
	add		___607_k ___607_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:639
#   minDistance = 8.0;
	assign		___606_minDistance $const9 	%line{639} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:641
#   for (int k = -1; k <= 1; k++) {
	for		$tmp657 1505 1507 1563 1565 	%line{641} %argrw{"r"}
	assign		___614_k $const10 	%argrw{"wr"}
	le		$tmp656 ___614_k $const11 	%argrw{"wrr"}
	neq		$tmp657 $tmp656 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:642
#     for (int j = -1; j <= 1; j++) {
	for		$tmp659 1509 1511 1561 1563 	%line{642} %argrw{"r"}
	assign		___616_j $const10 	%argrw{"wr"}
	le		$tmp658 ___616_j $const11 	%argrw{"wrr"}
	neq		$tmp659 $tmp658 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:643
#       for (int i = -1; i <= 1; i++) {
	for		$tmp661 1513 1515 1559 1561 	%line{643} %argrw{"r"}
	assign		___618_i $const10 	%argrw{"wr"}
	le		$tmp660 ___618_i $const11 	%argrw{"wrr"}
	neq		$tmp661 $tmp660 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:644
#         if (i == 0 && j == 0 && k == 0) {
	eq		$tmp662 ___618_i $const12 	%line{644} %argrw{"wrr"}
	neq		$tmp663 $tmp662 $const12 	%argrw{"wrr"}
	if		$tmp663 1521 1521 	%argrw{"r"}
	eq		$tmp664 ___616_j $const12 	%argrw{"wrr"}
	neq		$tmp665 $tmp664 $const12 	%argrw{"wrr"}
	assign		$tmp663 $tmp665 	%argrw{"wr"}
	neq		$tmp666 $tmp663 $const12 	%argrw{"wrr"}
	if		$tmp666 1526 1526 	%argrw{"r"}
	eq		$tmp667 ___614_k $const12 	%argrw{"wrr"}
	neq		$tmp668 $tmp667 $const12 	%argrw{"wrr"}
	assign		$tmp666 $tmp668 	%argrw{"wr"}
	if		$tmp666 1528 1528 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:645
#           continue;
	continue	%line{645}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:647
#         vector3 cellOffset = vector3(i, j, k) + closestPointOffset;
	assign		$tmp670 ___618_i 	%line{647} %argrw{"wr"}
	assign		$tmp671 ___616_j 	%argrw{"wr"}
	assign		$tmp672 ___614_k 	%argrw{"wr"}
	point		$tmp669 $tmp670 $tmp671 $tmp672 	%argrw{"wrrr"}
	add		___619_cellOffset $tmp669 ___606_closestPointOffset 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:649
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	add		$tmp674 ___606_cellPosition ___619_cellOffset 	%line{649} %argrw{"wrr"}
	functioncall	$const58 1552 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	functioncall	$const37 1537 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{38} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:21
#   return hashnoise(k);
	hashnoise	$tmp675 $tmp674 	%line{21} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:39
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 1.0)),
	compref		$tmp677.x $tmp674 $const12 	%line{39} %argrw{"wrr"}
	compref		$tmp677.y $tmp674 $const11 	%argrw{"wrr"}
	compref		$tmp677.z $tmp674 $const21 	%argrw{"wrr"}
	assign		$tmp677.w $const2 	%argrw{"wr"}
	functioncall	$const59 1544 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp678 $tmp677.x $tmp677.y $tmp677.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp676 $tmp678 $tmp677.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:40
#                  hash_vector4_to_float(vector4(k[0], k[1], k[2], 2.0)));
	compref		$tmp680.x $tmp674 $const12 	%line{40} %argrw{"wrr"}
	compref		$tmp680.y $tmp674 $const11 	%argrw{"wrr"}
	compref		$tmp680.z $tmp674 $const21 	%argrw{"wrr"}
	assign		$tmp680.w $const4 	%argrw{"wr"}
	functioncall	$const59 1551 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp681 $tmp680.x $tmp680.y $tmp680.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp679 $tmp681 $tmp680.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:38
#   return vector3(hash_vector3_to_float(k),
	point		$tmp673 $tmp675 $tmp676 $tmp679 	%line{38} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:649
#                                 hash_vector3_to_vector3(cellPosition + cellOffset) * randomness;
	mul		$tmp682 $tmp673 randomness 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{649} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:648
#         vector3 pointPosition = cellOffset +
	add		___619_pointPosition ___619_cellOffset $tmp682 	%line{648} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:650
#         float distanceToPoint = distance(closestPoint, pointPosition);
	distance	___619_distanceToPoint ___606_closestPoint ___619_pointPosition 	%line{650} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:651
#         if (distanceToPoint < minDistance) {
	lt		$tmp683 ___619_distanceToPoint ___606_minDistance 	%line{651} %argrw{"wrr"}
	if		$tmp683 1559 1559 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:652
#           minDistance = distanceToPoint;
	assign		___606_minDistance ___619_distanceToPoint 	%line{652} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:653
#           closestPointToClosestPoint = pointPosition;
	assign		___606_closestPointToClosestPoint ___619_pointPosition 	%line{653} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:643
#       for (int i = -1; i <= 1; i++) {
	assign		$tmp684 ___618_i 	%line{643} %argrw{"wr"}
	add		___618_i ___618_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:642
#     for (int j = -1; j <= 1; j++) {
	assign		$tmp685 ___616_j 	%line{642} %argrw{"wr"}
	add		___616_j ___616_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:641
#   for (int k = -1; k <= 1; k++) {
	assign		$tmp686 ___614_k 	%line{641} %argrw{"wr"}
	add		___614_k ___614_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:658
#   outRadius = distance(closestPointToClosestPoint, closestPoint) / 2.0;
	distance	$tmp687 ___606_closestPointToClosestPoint ___606_closestPoint 	%line{658} %argrw{"wrr"}
	div		Radius $tmp687 $const4 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:994
#       error("Unknown feature!");
	error		$const30 	%line{994} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:996
#     Position = (Scale != 0.0) ? Position / Scale : vector3(0.0);
	neq		$tmp688 Scale $const1 	%line{996} %argrw{"wrr"}
	if		$tmp688 1571 1572 	%argrw{"r"}
	div		Position Position Scale 	%argrw{"wrr"}
	assign		Position $const62 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:998
#   else if (dimensions == "4D") {
	eq		$tmp689 dimensions $const66 	%line{998} %argrw{"wrr"}
	if		$tmp689 2740 2741 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:999
#     vector4 coord4D = vector4(coord[0], coord[1], coord[2], w);
	compref		___718_coord4D.x coord $const12 	%line{999} %argrw{"wrr"}
	compref		___718_coord4D.y coord $const11 	%argrw{"wrr"}
	compref		___718_coord4D.z coord $const21 	%argrw{"wrr"}
	assign		___718_coord4D.w w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1001
#     if (feature == "f1") {
	eq		$tmp690 feature $const7 	%line{1001} %argrw{"wrr"}
	if		$tmp690 1775 2720 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1002
#       voronoi_f1_4d(coord4D, Exponent, randomness, metric, Distance, Color, outPosition4D);
	functioncall	$const67 1775 	%line{1002} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:692
#   vector4 cellPosition = floor(coord);
	functioncall	$const33 1586 	%line{692} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:165
#     return vector4 (floor(in.x),
	floor		___628_cellPosition.x ___718_coord4D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{165} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:166
#                     floor(in.y),
	floor		___628_cellPosition.y ___718_coord4D.y 	%line{166} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:167
#                     floor(in.z),
	floor		___628_cellPosition.z ___718_coord4D.z 	%line{167} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:168
#                     floor(in.w));
	floor		___628_cellPosition.w ___718_coord4D.w 	%line{168} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 1591 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___628_localPosition.x ___718_coord4D.x ___628_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___628_localPosition.y ___718_coord4D.y ___628_cellPosition.y 	%argrw{"wrr"}
	sub		___628_localPosition.z ___718_coord4D.z ___628_cellPosition.z 	%argrw{"wrr"}
	sub		___628_localPosition.w ___718_coord4D.w ___628_cellPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:695
#   float minDistance = 8.0;
	assign		___628_minDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{695} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:697
#   for (int u = -1; u <= 1; u++) {
	for		$tmp692 1594 1596 1743 1745 	%line{697} %argrw{"r"}
	assign		___629_u $const10 	%argrw{"wr"}
	le		$tmp691 ___629_u $const11 	%argrw{"wrr"}
	neq		$tmp692 $tmp691 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:698
#     for (int k = -1; k <= 1; k++) {
	for		$tmp694 1598 1600 1741 1743 	%line{698} %argrw{"r"}
	assign		___631_k $const10 	%argrw{"wr"}
	le		$tmp693 ___631_k $const11 	%argrw{"wrr"}
	neq		$tmp694 $tmp693 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:699
#       for (int j = -1; j <= 1; j++) {
	for		$tmp696 1602 1604 1739 1741 	%line{699} %argrw{"r"}
	assign		___633_j $const10 	%argrw{"wr"}
	le		$tmp695 ___633_j $const11 	%argrw{"wrr"}
	neq		$tmp696 $tmp695 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:700
#         for (int i = -1; i <= 1; i++) {
	for		$tmp698 1606 1608 1737 1739 	%line{700} %argrw{"r"}
	assign		___635_i $const10 	%argrw{"wr"}
	le		$tmp697 ___635_i $const11 	%argrw{"wrr"}
	neq		$tmp698 $tmp697 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:701
#           vector4 cellOffset = vector4(i, j, k, u);
	assign		___636_cellOffset.x ___635_i 	%line{701} %argrw{"wr"}
	assign		___636_cellOffset.y ___633_j 	%argrw{"wr"}
	assign		___636_cellOffset.z ___631_k 	%argrw{"wr"}
	assign		___636_cellOffset.w ___629_u 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1617 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp701.x ___628_cellPosition.x ___636_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp701.y ___628_cellPosition.y ___636_cellOffset.y 	%argrw{"wrr"}
	add		$tmp701.z ___628_cellPosition.z ___636_cellOffset.z 	%argrw{"wrr"}
	add		$tmp701.w ___628_cellPosition.w ___636_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:703
#                                   hash_vector4_to_vector4(cellPosition + cellOffset) * randomness;
	functioncall	$const68 1642 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{703} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:45
#   return vector4(hash_vector4_to_float(k),
	functioncall	$const59 1621 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{45} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp702 $tmp701.x $tmp701.y $tmp701.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp700.x $tmp702 $tmp701.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:46
#                  hash_vector4_to_float(vector4(k.w, k.x, k.y, k.z)),
	assign		$tmp703.x $tmp701.w 	%line{46} %argrw{"wr"}
	assign		$tmp703.y $tmp701.x 	%argrw{"wr"}
	assign		$tmp703.z $tmp701.y 	%argrw{"wr"}
	assign		$tmp703.w $tmp701.z 	%argrw{"wr"}
	functioncall	$const59 1628 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp704 $tmp703.x $tmp703.y $tmp703.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp700.y $tmp704 $tmp703.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:47
#                  hash_vector4_to_float(vector4(k.z, k.w, k.x, k.y)),
	assign		$tmp705.x $tmp701.z 	%line{47} %argrw{"wr"}
	assign		$tmp705.y $tmp701.w 	%argrw{"wr"}
	assign		$tmp705.z $tmp701.x 	%argrw{"wr"}
	assign		$tmp705.w $tmp701.y 	%argrw{"wr"}
	functioncall	$const59 1635 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp706 $tmp705.x $tmp705.y $tmp705.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp700.z $tmp706 $tmp705.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:48
#                  hash_vector4_to_float(vector4(k.y, k.z, k.w, k.x)));
	assign		$tmp707.x $tmp701.y 	%line{48} %argrw{"wr"}
	assign		$tmp707.y $tmp701.z 	%argrw{"wr"}
	assign		$tmp707.z $tmp701.w 	%argrw{"wr"}
	assign		$tmp707.w $tmp701.x 	%argrw{"wr"}
	functioncall	$const59 1642 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp708 $tmp707.x $tmp707.y $tmp707.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp700.w $tmp708 $tmp707.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 1652 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp709.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp709.y randomness 	%argrw{"wr"}
	assign		$tmp709.z randomness 	%argrw{"wr"}
	assign		$tmp709.w randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 1652 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp699.x $tmp700.x $tmp709.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp699.y $tmp700.y $tmp709.y 	%argrw{"wrr"}
	mul		$tmp699.z $tmp700.z $tmp709.z 	%argrw{"wrr"}
	mul		$tmp699.w $tmp700.w $tmp709.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1657 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___636_pointPosition.x ___636_cellOffset.x $tmp699.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___636_pointPosition.y ___636_cellOffset.y $tmp699.y 	%argrw{"wrr"}
	add		___636_pointPosition.z ___636_cellOffset.z $tmp699.z 	%argrw{"wrr"}
	add		___636_pointPosition.w ___636_cellOffset.w $tmp699.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:704
#           float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 1726 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{704} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:665
#   if (metric == "euclidean") {
	eq		$tmp710 metric $const39 	%line{665} %argrw{"wrr"}
	if		$tmp710 1676 1726 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:666
#     return distance(a, b);
	functioncall	$const27 1675 	%line{666} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 1666 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		$tmp711.x ___636_pointPosition.x ___628_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		$tmp711.y ___636_pointPosition.y ___628_localPosition.y 	%argrw{"wrr"}
	sub		$tmp711.z ___636_pointPosition.z ___628_localPosition.z 	%argrw{"wrr"}
	sub		$tmp711.w ___636_pointPosition.w ___628_localPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:38
#   return length(a - b);
	functioncall	$const40 1675 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{38} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:223
#     return sqrt (a.x*a.x + a.y*a.y + a.z*a.z + a.w*a.w);
	mul		$tmp712 $tmp711.x $tmp711.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{223} %argrw{"wrr"}
	mul		$tmp713 $tmp711.y $tmp711.y 	%argrw{"wrr"}
	add		$tmp714 $tmp712 $tmp713 	%argrw{"wrr"}
	mul		$tmp715 $tmp711.z $tmp711.z 	%argrw{"wrr"}
	add		$tmp716 $tmp714 $tmp715 	%argrw{"wrr"}
	mul		$tmp717 $tmp711.w $tmp711.w 	%argrw{"wrr"}
	add		$tmp718 $tmp716 $tmp717 	%argrw{"wrr"}
	sqrt		___636_distanceToPoint $tmp718 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:666
#     return distance(a, b);
	return	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{666}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:668
#   else if (metric == "manhattan") {
	eq		$tmp719 metric $const42 	%line{668} %argrw{"wrr"}
	if		$tmp719 1690 1726 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:669
#     return abs(a.x - b.x) + abs(a.y - b.y) + abs(a.z - b.z) + abs(a.w - b.w);
	sub		$tmp721 ___636_pointPosition.x ___628_localPosition.x 	%line{669} %argrw{"wrr"}
	abs		$tmp720 $tmp721 	%argrw{"wr"}
	sub		$tmp723 ___636_pointPosition.y ___628_localPosition.y 	%argrw{"wrr"}
	abs		$tmp722 $tmp723 	%argrw{"wr"}
	add		$tmp724 $tmp720 $tmp722 	%argrw{"wrr"}
	sub		$tmp726 ___636_pointPosition.z ___628_localPosition.z 	%argrw{"wrr"}
	abs		$tmp725 $tmp726 	%argrw{"wr"}
	add		$tmp727 $tmp724 $tmp725 	%argrw{"wrr"}
	sub		$tmp729 ___636_pointPosition.w ___628_localPosition.w 	%argrw{"wrr"}
	abs		$tmp728 $tmp729 	%argrw{"wr"}
	add		___636_distanceToPoint $tmp727 $tmp728 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:671
#   else if (metric == "chebychev") {
	eq		$tmp730 metric $const43 	%line{671} %argrw{"wrr"}
	if		$tmp730 1704 1726 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:672
#     return max(abs(a.x - b.x), max(abs(a.y - b.y), max(abs(a.z - b.z), abs(a.w - b.w))));
	sub		$tmp732 ___636_pointPosition.x ___628_localPosition.x 	%line{672} %argrw{"wrr"}
	abs		$tmp731 $tmp732 	%argrw{"wr"}
	sub		$tmp735 ___636_pointPosition.y ___628_localPosition.y 	%argrw{"wrr"}
	abs		$tmp734 $tmp735 	%argrw{"wr"}
	sub		$tmp738 ___636_pointPosition.z ___628_localPosition.z 	%argrw{"wrr"}
	abs		$tmp737 $tmp738 	%argrw{"wr"}
	sub		$tmp740 ___636_pointPosition.w ___628_localPosition.w 	%argrw{"wrr"}
	abs		$tmp739 $tmp740 	%argrw{"wr"}
	max		$tmp736 $tmp737 $tmp739 	%argrw{"wrr"}
	max		$tmp733 $tmp734 $tmp736 	%argrw{"wrr"}
	max		___636_distanceToPoint $tmp731 $tmp733 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:674
#   else if (metric == "minkowski") {
	eq		$tmp741 metric $const44 	%line{674} %argrw{"wrr"}
	if		$tmp741 1724 1726 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	sub		$tmp744 ___636_pointPosition.x ___628_localPosition.x 	%line{675} %argrw{"wrr"}
	abs		$tmp743 $tmp744 	%argrw{"wr"}
	pow		$tmp742 $tmp743 Exponent 	%argrw{"wrr"}
	sub		$tmp747 ___636_pointPosition.y ___628_localPosition.y 	%argrw{"wrr"}
	abs		$tmp746 $tmp747 	%argrw{"wr"}
	pow		$tmp745 $tmp746 Exponent 	%argrw{"wrr"}
	add		$tmp748 $tmp742 $tmp745 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:676
#                    pow(abs(a.z - b.z), exponent) + pow(abs(a.w - b.w), exponent),
	sub		$tmp751 ___636_pointPosition.z ___628_localPosition.z 	%line{676} %argrw{"wrr"}
	abs		$tmp750 $tmp751 	%argrw{"wr"}
	pow		$tmp749 $tmp750 Exponent 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	add		$tmp752 $tmp748 $tmp749 	%line{675} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:676
#                    pow(abs(a.z - b.z), exponent) + pow(abs(a.w - b.w), exponent),
	sub		$tmp755 ___636_pointPosition.w ___628_localPosition.w 	%line{676} %argrw{"wrr"}
	abs		$tmp754 $tmp755 	%argrw{"wr"}
	pow		$tmp753 $tmp754 Exponent 	%argrw{"wrr"}
	add		$tmp756 $tmp752 $tmp753 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:677
#                1.0 / exponent);
	div		$tmp757 $const2 Exponent 	%line{677} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	pow		___636_distanceToPoint $tmp756 $tmp757 	%line{675} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:677
#                1.0 / exponent);
	return	%line{677}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:680
#     return 0.0;
	assign		___636_distanceToPoint $const1 	%line{680} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:705
#           if (distanceToPoint < minDistance) {
	lt		$tmp758 ___636_distanceToPoint ___628_minDistance 	%line{705} %argrw{"wrr"}
	if		$tmp758 1737 1737 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:706
#             targetOffset = cellOffset;
	assign		___628_targetOffset.x ___636_cellOffset.x 	%line{706} %argrw{"wr"}
	assign		___628_targetOffset.y ___636_cellOffset.y 	%argrw{"wr"}
	assign		___628_targetOffset.z ___636_cellOffset.z 	%argrw{"wr"}
	assign		___628_targetOffset.w ___636_cellOffset.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:707
#             minDistance = distanceToPoint;
	assign		___628_minDistance ___636_distanceToPoint 	%line{707} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:708
#             targetPosition = pointPosition;
	assign		___628_targetPosition.x ___636_pointPosition.x 	%line{708} %argrw{"wr"}
	assign		___628_targetPosition.y ___636_pointPosition.y 	%argrw{"wr"}
	assign		___628_targetPosition.z ___636_pointPosition.z 	%argrw{"wr"}
	assign		___628_targetPosition.w ___636_pointPosition.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:700
#         for (int i = -1; i <= 1; i++) {
	assign		$tmp759 ___635_i 	%line{700} %argrw{"wr"}
	add		___635_i ___635_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:699
#       for (int j = -1; j <= 1; j++) {
	assign		$tmp760 ___633_j 	%line{699} %argrw{"wr"}
	add		___633_j ___633_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:698
#     for (int k = -1; k <= 1; k++) {
	assign		$tmp761 ___631_k 	%line{698} %argrw{"wr"}
	add		___631_k ___631_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:697
#   for (int u = -1; u <= 1; u++) {
	assign		$tmp762 ___629_u 	%line{697} %argrw{"wr"}
	add		___629_u ___629_u $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:714
#   outDistance = minDistance;
	assign		Distance ___628_minDistance 	%line{714} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1751 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp763.x ___628_cellPosition.x ___628_targetOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp763.y ___628_cellPosition.y ___628_targetOffset.y 	%argrw{"wrr"}
	add		$tmp763.z ___628_cellPosition.z ___628_targetOffset.z 	%argrw{"wrr"}
	add		$tmp763.w ___628_cellPosition.w ___628_targetOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:715
#   outColor = hash_vector4_to_color(cellPosition + targetOffset);
	functioncall	$const69 1770 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{715} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:76
#   return color(hash_vector4_to_float(k),
	functioncall	$const59 1755 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{76} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp765 $tmp763.x $tmp763.y $tmp763.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp764 $tmp765 $tmp763.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:77
#                hash_vector4_to_float(vector4(k.z, k.x, k.w, k.y)),
	assign		$tmp767.x $tmp763.z 	%line{77} %argrw{"wr"}
	assign		$tmp767.y $tmp763.x 	%argrw{"wr"}
	assign		$tmp767.z $tmp763.w 	%argrw{"wr"}
	assign		$tmp767.w $tmp763.y 	%argrw{"wr"}
	functioncall	$const59 1762 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp768 $tmp767.x $tmp767.y $tmp767.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp766 $tmp768 $tmp767.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:78
#                hash_vector4_to_float(vector4(k.w, k.z, k.y, k.x)));
	assign		$tmp770.x $tmp763.w 	%line{78} %argrw{"wr"}
	assign		$tmp770.y $tmp763.z 	%argrw{"wr"}
	assign		$tmp770.z $tmp763.y 	%argrw{"wr"}
	assign		$tmp770.w $tmp763.x 	%argrw{"wr"}
	functioncall	$const59 1769 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp771 $tmp770.x $tmp770.y $tmp770.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp769 $tmp771 $tmp770.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:76
#   return color(hash_vector4_to_float(k),
	color		Color $tmp764 $tmp766 $tmp769 	%line{76} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1775 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___718_outPosition4D.x ___628_targetPosition.x ___628_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___718_outPosition4D.y ___628_targetPosition.y ___628_cellPosition.y 	%argrw{"wrr"}
	add		___718_outPosition4D.z ___628_targetPosition.z ___628_cellPosition.z 	%argrw{"wrr"}
	add		___718_outPosition4D.w ___628_targetPosition.w ___628_cellPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1004
#     else if (feature == "smooth_f1") {
	eq		$tmp772 feature $const17 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1004} %argrw{"wrr"}
	if		$tmp772 1997 2720 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1005
#       voronoi_smooth_f1_4d(
	functioncall	$const70 1997 	%line{1005} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:728
#   vector4 cellPosition = floor(coord);
	functioncall	$const33 1783 	%line{728} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:165
#     return vector4 (floor(in.x),
	floor		___638_cellPosition.x ___718_coord4D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{165} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:166
#                     floor(in.y),
	floor		___638_cellPosition.y ___718_coord4D.y 	%line{166} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:167
#                     floor(in.z),
	floor		___638_cellPosition.z ___718_coord4D.z 	%line{167} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:168
#                     floor(in.w));
	floor		___638_cellPosition.w ___718_coord4D.w 	%line{168} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 1788 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___638_localPosition.x ___718_coord4D.x ___638_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___638_localPosition.y ___718_coord4D.y ___638_cellPosition.y 	%argrw{"wrr"}
	sub		___638_localPosition.z ___718_coord4D.z ___638_cellPosition.z 	%argrw{"wrr"}
	sub		___638_localPosition.w ___718_coord4D.w ___638_cellPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:731
#   float smoothDistance = 8.0;
	assign		___638_smoothDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{731} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:732
#   color smoothColor = color(0.0);
	assign		___638_smoothColor $const19 	%line{732} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:733
#   vector4 smoothPosition = vector4(0.0, 0.0, 0.0, 0.0);
	assign		___638_smoothPosition.x $const1 	%line{733} %argrw{"wr"}
	assign		___638_smoothPosition.y $const1 	%argrw{"wr"}
	assign		___638_smoothPosition.z $const1 	%argrw{"wr"}
	assign		___638_smoothPosition.w $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:734
#   for (int u = -2; u <= 2; u++) {
	for		$tmp774 1796 1798 1988 1990 	%line{734} %argrw{"r"}
	assign		___639_u $const20 	%argrw{"wr"}
	le		$tmp773 ___639_u $const21 	%argrw{"wrr"}
	neq		$tmp774 $tmp773 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:735
#     for (int k = -2; k <= 2; k++) {
	for		$tmp776 1800 1802 1986 1988 	%line{735} %argrw{"r"}
	assign		___641_k $const20 	%argrw{"wr"}
	le		$tmp775 ___641_k $const21 	%argrw{"wrr"}
	neq		$tmp776 $tmp775 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:736
#       for (int j = -2; j <= 2; j++) {
	for		$tmp778 1804 1806 1984 1986 	%line{736} %argrw{"r"}
	assign		___643_j $const20 	%argrw{"wr"}
	le		$tmp777 ___643_j $const21 	%argrw{"wrr"}
	neq		$tmp778 $tmp777 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:737
#         for (int i = -2; i <= 2; i++) {
	for		$tmp780 1808 1810 1982 1984 	%line{737} %argrw{"r"}
	assign		___645_i $const20 	%argrw{"wr"}
	le		$tmp779 ___645_i $const21 	%argrw{"wrr"}
	neq		$tmp780 $tmp779 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:738
#           vector4 cellOffset = vector4(i, j, k, u);
	assign		___646_cellOffset.x ___645_i 	%line{738} %argrw{"wr"}
	assign		___646_cellOffset.y ___643_j 	%argrw{"wr"}
	assign		___646_cellOffset.z ___641_k 	%argrw{"wr"}
	assign		___646_cellOffset.w ___639_u 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1819 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp783.x ___638_cellPosition.x ___646_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp783.y ___638_cellPosition.y ___646_cellOffset.y 	%argrw{"wrr"}
	add		$tmp783.z ___638_cellPosition.z ___646_cellOffset.z 	%argrw{"wrr"}
	add		$tmp783.w ___638_cellPosition.w ___646_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:740
#                                   hash_vector4_to_vector4(cellPosition + cellOffset) * randomness;
	functioncall	$const68 1844 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{740} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:45
#   return vector4(hash_vector4_to_float(k),
	functioncall	$const59 1823 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{45} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp784 $tmp783.x $tmp783.y $tmp783.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp782.x $tmp784 $tmp783.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:46
#                  hash_vector4_to_float(vector4(k.w, k.x, k.y, k.z)),
	assign		$tmp785.x $tmp783.w 	%line{46} %argrw{"wr"}
	assign		$tmp785.y $tmp783.x 	%argrw{"wr"}
	assign		$tmp785.z $tmp783.y 	%argrw{"wr"}
	assign		$tmp785.w $tmp783.z 	%argrw{"wr"}
	functioncall	$const59 1830 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp786 $tmp785.x $tmp785.y $tmp785.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp782.y $tmp786 $tmp785.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:47
#                  hash_vector4_to_float(vector4(k.z, k.w, k.x, k.y)),
	assign		$tmp787.x $tmp783.z 	%line{47} %argrw{"wr"}
	assign		$tmp787.y $tmp783.w 	%argrw{"wr"}
	assign		$tmp787.z $tmp783.x 	%argrw{"wr"}
	assign		$tmp787.w $tmp783.y 	%argrw{"wr"}
	functioncall	$const59 1837 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp788 $tmp787.x $tmp787.y $tmp787.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp782.z $tmp788 $tmp787.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:48
#                  hash_vector4_to_float(vector4(k.y, k.z, k.w, k.x)));
	assign		$tmp789.x $tmp783.y 	%line{48} %argrw{"wr"}
	assign		$tmp789.y $tmp783.z 	%argrw{"wr"}
	assign		$tmp789.z $tmp783.w 	%argrw{"wr"}
	assign		$tmp789.w $tmp783.x 	%argrw{"wr"}
	functioncall	$const59 1844 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp790 $tmp789.x $tmp789.y $tmp789.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp782.w $tmp790 $tmp789.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 1854 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp791.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp791.y randomness 	%argrw{"wr"}
	assign		$tmp791.z randomness 	%argrw{"wr"}
	assign		$tmp791.w randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 1854 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp781.x $tmp782.x $tmp791.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp781.y $tmp782.y $tmp791.y 	%argrw{"wrr"}
	mul		$tmp781.z $tmp782.z $tmp791.z 	%argrw{"wrr"}
	mul		$tmp781.w $tmp782.w $tmp791.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1859 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___646_pointPosition.x ___646_cellOffset.x $tmp781.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___646_pointPosition.y ___646_cellOffset.y $tmp781.y 	%argrw{"wrr"}
	add		___646_pointPosition.z ___646_cellOffset.z $tmp781.z 	%argrw{"wrr"}
	add		___646_pointPosition.w ___646_cellOffset.w $tmp781.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:741
#           float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 1928 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{741} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:665
#   if (metric == "euclidean") {
	eq		$tmp792 metric $const39 	%line{665} %argrw{"wrr"}
	if		$tmp792 1878 1928 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:666
#     return distance(a, b);
	functioncall	$const27 1877 	%line{666} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 1868 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		$tmp793.x ___646_pointPosition.x ___638_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		$tmp793.y ___646_pointPosition.y ___638_localPosition.y 	%argrw{"wrr"}
	sub		$tmp793.z ___646_pointPosition.z ___638_localPosition.z 	%argrw{"wrr"}
	sub		$tmp793.w ___646_pointPosition.w ___638_localPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:38
#   return length(a - b);
	functioncall	$const40 1877 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{38} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:223
#     return sqrt (a.x*a.x + a.y*a.y + a.z*a.z + a.w*a.w);
	mul		$tmp794 $tmp793.x $tmp793.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{223} %argrw{"wrr"}
	mul		$tmp795 $tmp793.y $tmp793.y 	%argrw{"wrr"}
	add		$tmp796 $tmp794 $tmp795 	%argrw{"wrr"}
	mul		$tmp797 $tmp793.z $tmp793.z 	%argrw{"wrr"}
	add		$tmp798 $tmp796 $tmp797 	%argrw{"wrr"}
	mul		$tmp799 $tmp793.w $tmp793.w 	%argrw{"wrr"}
	add		$tmp800 $tmp798 $tmp799 	%argrw{"wrr"}
	sqrt		___646_distanceToPoint $tmp800 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:666
#     return distance(a, b);
	return	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{666}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:668
#   else if (metric == "manhattan") {
	eq		$tmp801 metric $const42 	%line{668} %argrw{"wrr"}
	if		$tmp801 1892 1928 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:669
#     return abs(a.x - b.x) + abs(a.y - b.y) + abs(a.z - b.z) + abs(a.w - b.w);
	sub		$tmp803 ___646_pointPosition.x ___638_localPosition.x 	%line{669} %argrw{"wrr"}
	abs		$tmp802 $tmp803 	%argrw{"wr"}
	sub		$tmp805 ___646_pointPosition.y ___638_localPosition.y 	%argrw{"wrr"}
	abs		$tmp804 $tmp805 	%argrw{"wr"}
	add		$tmp806 $tmp802 $tmp804 	%argrw{"wrr"}
	sub		$tmp808 ___646_pointPosition.z ___638_localPosition.z 	%argrw{"wrr"}
	abs		$tmp807 $tmp808 	%argrw{"wr"}
	add		$tmp809 $tmp806 $tmp807 	%argrw{"wrr"}
	sub		$tmp811 ___646_pointPosition.w ___638_localPosition.w 	%argrw{"wrr"}
	abs		$tmp810 $tmp811 	%argrw{"wr"}
	add		___646_distanceToPoint $tmp809 $tmp810 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:671
#   else if (metric == "chebychev") {
	eq		$tmp812 metric $const43 	%line{671} %argrw{"wrr"}
	if		$tmp812 1906 1928 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:672
#     return max(abs(a.x - b.x), max(abs(a.y - b.y), max(abs(a.z - b.z), abs(a.w - b.w))));
	sub		$tmp814 ___646_pointPosition.x ___638_localPosition.x 	%line{672} %argrw{"wrr"}
	abs		$tmp813 $tmp814 	%argrw{"wr"}
	sub		$tmp817 ___646_pointPosition.y ___638_localPosition.y 	%argrw{"wrr"}
	abs		$tmp816 $tmp817 	%argrw{"wr"}
	sub		$tmp820 ___646_pointPosition.z ___638_localPosition.z 	%argrw{"wrr"}
	abs		$tmp819 $tmp820 	%argrw{"wr"}
	sub		$tmp822 ___646_pointPosition.w ___638_localPosition.w 	%argrw{"wrr"}
	abs		$tmp821 $tmp822 	%argrw{"wr"}
	max		$tmp818 $tmp819 $tmp821 	%argrw{"wrr"}
	max		$tmp815 $tmp816 $tmp818 	%argrw{"wrr"}
	max		___646_distanceToPoint $tmp813 $tmp815 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:674
#   else if (metric == "minkowski") {
	eq		$tmp823 metric $const44 	%line{674} %argrw{"wrr"}
	if		$tmp823 1926 1928 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	sub		$tmp826 ___646_pointPosition.x ___638_localPosition.x 	%line{675} %argrw{"wrr"}
	abs		$tmp825 $tmp826 	%argrw{"wr"}
	pow		$tmp824 $tmp825 Exponent 	%argrw{"wrr"}
	sub		$tmp829 ___646_pointPosition.y ___638_localPosition.y 	%argrw{"wrr"}
	abs		$tmp828 $tmp829 	%argrw{"wr"}
	pow		$tmp827 $tmp828 Exponent 	%argrw{"wrr"}
	add		$tmp830 $tmp824 $tmp827 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:676
#                    pow(abs(a.z - b.z), exponent) + pow(abs(a.w - b.w), exponent),
	sub		$tmp833 ___646_pointPosition.z ___638_localPosition.z 	%line{676} %argrw{"wrr"}
	abs		$tmp832 $tmp833 	%argrw{"wr"}
	pow		$tmp831 $tmp832 Exponent 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	add		$tmp834 $tmp830 $tmp831 	%line{675} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:676
#                    pow(abs(a.z - b.z), exponent) + pow(abs(a.w - b.w), exponent),
	sub		$tmp837 ___646_pointPosition.w ___638_localPosition.w 	%line{676} %argrw{"wrr"}
	abs		$tmp836 $tmp837 	%argrw{"wr"}
	pow		$tmp835 $tmp836 Exponent 	%argrw{"wrr"}
	add		$tmp838 $tmp834 $tmp835 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:677
#                1.0 / exponent);
	div		$tmp839 $const2 Exponent 	%line{677} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	pow		___646_distanceToPoint $tmp838 $tmp839 	%line{675} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:677
#                1.0 / exponent);
	return	%line{677}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:680
#     return 0.0;
	assign		___646_distanceToPoint $const1 	%line{680} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:743
#               0.0, 1.0, 0.5 + 0.5 * (smoothDistance - distanceToPoint) / smoothness);
	sub		$tmp840 ___638_smoothDistance ___646_distanceToPoint 	%line{743} %argrw{"wrr"}
	mul		$tmp841 $const5 $tmp840 	%argrw{"wrr"}
	div		$tmp842 $tmp841 smoothness 	%argrw{"wrr"}
	add		$tmp843 $const5 $tmp842 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:742
#           float h = smoothstep(
	smoothstep	___646_h $const1 $const2 $tmp843 	%line{742} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:744
#           float correctionFactor = smoothness * h * (1.0 - h);
	mul		$tmp844 smoothness ___646_h 	%line{744} %argrw{"wrr"}
	sub		$tmp845 $const2 ___646_h 	%argrw{"wrr"}
	mul		___646_correctionFactor $tmp844 $tmp845 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:745
#           smoothDistance = mix(smoothDistance, distanceToPoint, h) - correctionFactor;
	mix		$tmp846 ___638_smoothDistance ___646_distanceToPoint ___646_h 	%line{745} %argrw{"wrrr"}
	sub		___638_smoothDistance $tmp846 ___646_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:746
#           correctionFactor /= 1.0 + 3.0 * smoothness;
	mul		$tmp847 $const22 smoothness 	%line{746} %argrw{"wrr"}
	add		$tmp848 $const2 $tmp847 	%argrw{"wrr"}
	div		___646_correctionFactor ___646_correctionFactor $tmp848 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1946 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp849.x ___638_cellPosition.x ___646_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp849.y ___638_cellPosition.y ___646_cellOffset.y 	%argrw{"wrr"}
	add		$tmp849.z ___638_cellPosition.z ___646_cellOffset.z 	%argrw{"wrr"}
	add		$tmp849.w ___638_cellPosition.w ___646_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:747
#           color cellColor = hash_vector4_to_color(cellPosition + cellOffset);
	functioncall	$const69 1965 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{747} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:76
#   return color(hash_vector4_to_float(k),
	functioncall	$const59 1950 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{76} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp851 $tmp849.x $tmp849.y $tmp849.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp850 $tmp851 $tmp849.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:77
#                hash_vector4_to_float(vector4(k.z, k.x, k.w, k.y)),
	assign		$tmp853.x $tmp849.z 	%line{77} %argrw{"wr"}
	assign		$tmp853.y $tmp849.x 	%argrw{"wr"}
	assign		$tmp853.z $tmp849.w 	%argrw{"wr"}
	assign		$tmp853.w $tmp849.y 	%argrw{"wr"}
	functioncall	$const59 1957 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp854 $tmp853.x $tmp853.y $tmp853.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp852 $tmp854 $tmp853.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:78
#                hash_vector4_to_float(vector4(k.w, k.z, k.y, k.x)));
	assign		$tmp856.x $tmp849.w 	%line{78} %argrw{"wr"}
	assign		$tmp856.y $tmp849.z 	%argrw{"wr"}
	assign		$tmp856.z $tmp849.y 	%argrw{"wr"}
	assign		$tmp856.w $tmp849.x 	%argrw{"wr"}
	functioncall	$const59 1964 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp857 $tmp856.x $tmp856.y $tmp856.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp855 $tmp857 $tmp856.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:76
#   return color(hash_vector4_to_float(k),
	color		___646_cellColor $tmp850 $tmp852 $tmp855 	%line{76} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:748
#           smoothColor = mix(smoothColor, cellColor, h) - correctionFactor;
	mix		$tmp858 ___638_smoothColor ___646_cellColor ___646_h 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{748} %argrw{"wrrr"}
	sub		___638_smoothColor $tmp858 ___646_correctionFactor 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:749
#           smoothPosition = mix(smoothPosition, pointPosition, h) - correctionFactor;
	functioncall	$const47 1972 	%line{749} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:205
#     return vector4 (mix( value1.x, value2.x, x),
	mix		$tmp859.x ___638_smoothPosition.x ___646_pointPosition.x ___646_h 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{205} %argrw{"wrrr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:206
#                     mix( value1.y, value2.y, x),
	mix		$tmp859.y ___638_smoothPosition.y ___646_pointPosition.y ___646_h 	%line{206} %argrw{"wrrr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:207
#                     mix( value1.z, value2.z, x),
	mix		$tmp859.z ___638_smoothPosition.z ___646_pointPosition.z ___646_h 	%line{207} %argrw{"wrrr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:208
#                     mix( value1.w, value2.w, x));
	mix		$tmp859.w ___638_smoothPosition.w ___646_pointPosition.w ___646_h 	%line{208} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 1982 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:65
#     return a - vector4(b, b, b, b);
	assign		$tmp860.x ___646_correctionFactor 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{65} %argrw{"wr"}
	assign		$tmp860.y ___646_correctionFactor 	%argrw{"wr"}
	assign		$tmp860.z ___646_correctionFactor 	%argrw{"wr"}
	assign		$tmp860.w ___646_correctionFactor 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 1982 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___638_smoothPosition.x $tmp859.x $tmp860.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___638_smoothPosition.y $tmp859.y $tmp860.y 	%argrw{"wrr"}
	sub		___638_smoothPosition.z $tmp859.z $tmp860.z 	%argrw{"wrr"}
	sub		___638_smoothPosition.w $tmp859.w $tmp860.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:737
#         for (int i = -2; i <= 2; i++) {
	assign		$tmp861 ___645_i 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{737} %argrw{"wr"}
	add		___645_i ___645_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:736
#       for (int j = -2; j <= 2; j++) {
	assign		$tmp862 ___643_j 	%line{736} %argrw{"wr"}
	add		___643_j ___643_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:735
#     for (int k = -2; k <= 2; k++) {
	assign		$tmp863 ___641_k 	%line{735} %argrw{"wr"}
	add		___641_k ___641_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:734
#   for (int u = -2; u <= 2; u++) {
	assign		$tmp864 ___639_u 	%line{734} %argrw{"wr"}
	add		___639_u ___639_u $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:754
#   outDistance = smoothDistance;
	assign		Distance ___638_smoothDistance 	%line{754} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:755
#   outColor = smoothColor;
	assign		Color ___638_smoothColor 	%line{755} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 1997 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___718_outPosition4D.x ___638_cellPosition.x ___638_smoothPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___718_outPosition4D.y ___638_cellPosition.y ___638_smoothPosition.y 	%argrw{"wrr"}
	add		___718_outPosition4D.z ___638_cellPosition.z ___638_smoothPosition.z 	%argrw{"wrr"}
	add		___718_outPosition4D.w ___638_cellPosition.w ___638_smoothPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1008
#     else if (feature == "f2") {
	eq		$tmp865 feature $const23 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1008} %argrw{"wrr"}
	if		$tmp865 2223 2720 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1009
#       voronoi_f2_4d(coord4D, Exponent, randomness, metric, Distance, Color, outPosition4D);
	functioncall	$const71 2223 	%line{1009} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:767
#   vector4 cellPosition = floor(coord);
	functioncall	$const33 2005 	%line{767} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:165
#     return vector4 (floor(in.x),
	floor		___647_cellPosition.x ___718_coord4D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{165} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:166
#                     floor(in.y),
	floor		___647_cellPosition.y ___718_coord4D.y 	%line{166} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:167
#                     floor(in.z),
	floor		___647_cellPosition.z ___718_coord4D.z 	%line{167} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:168
#                     floor(in.w));
	floor		___647_cellPosition.w ___718_coord4D.w 	%line{168} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2010 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___647_localPosition.x ___718_coord4D.x ___647_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___647_localPosition.y ___718_coord4D.y ___647_cellPosition.y 	%argrw{"wrr"}
	sub		___647_localPosition.z ___718_coord4D.z ___647_cellPosition.z 	%argrw{"wrr"}
	sub		___647_localPosition.w ___718_coord4D.w ___647_cellPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:770
#   float distanceF1 = 8.0;
	assign		___647_distanceF1 $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{770} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:771
#   float distanceF2 = 8.0;
	assign		___647_distanceF2 $const9 	%line{771} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:772
#   vector4 offsetF1 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		___647_offsetF1.x $const1 	%line{772} %argrw{"wr"}
	assign		___647_offsetF1.y $const1 	%argrw{"wr"}
	assign		___647_offsetF1.z $const1 	%argrw{"wr"}
	assign		___647_offsetF1.w $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:773
#   vector4 positionF1 = vector4(0.0, 0.0, 0.0, 0.0);
	assign		___647_positionF1.x $const1 	%line{773} %argrw{"wr"}
	assign		___647_positionF1.y $const1 	%argrw{"wr"}
	assign		___647_positionF1.z $const1 	%argrw{"wr"}
	assign		___647_positionF1.w $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:775
#   for (int u = -1; u <= 1; u++) {
	for		$tmp867 2022 2024 2191 2193 	%line{775} %argrw{"r"}
	assign		___648_u $const10 	%argrw{"wr"}
	le		$tmp866 ___648_u $const11 	%argrw{"wrr"}
	neq		$tmp867 $tmp866 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:776
#     for (int k = -1; k <= 1; k++) {
	for		$tmp869 2026 2028 2189 2191 	%line{776} %argrw{"r"}
	assign		___650_k $const10 	%argrw{"wr"}
	le		$tmp868 ___650_k $const11 	%argrw{"wrr"}
	neq		$tmp869 $tmp868 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:777
#       for (int j = -1; j <= 1; j++) {
	for		$tmp871 2030 2032 2187 2189 	%line{777} %argrw{"r"}
	assign		___652_j $const10 	%argrw{"wr"}
	le		$tmp870 ___652_j $const11 	%argrw{"wrr"}
	neq		$tmp871 $tmp870 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:778
#         for (int i = -1; i <= 1; i++) {
	for		$tmp873 2034 2036 2185 2187 	%line{778} %argrw{"r"}
	assign		___654_i $const10 	%argrw{"wr"}
	le		$tmp872 ___654_i $const11 	%argrw{"wrr"}
	neq		$tmp873 $tmp872 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:779
#           vector4 cellOffset = vector4(i, j, k, u);
	assign		___655_cellOffset.x ___654_i 	%line{779} %argrw{"wr"}
	assign		___655_cellOffset.y ___652_j 	%argrw{"wr"}
	assign		___655_cellOffset.z ___650_k 	%argrw{"wr"}
	assign		___655_cellOffset.w ___648_u 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2045 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp876.x ___647_cellPosition.x ___655_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp876.y ___647_cellPosition.y ___655_cellOffset.y 	%argrw{"wrr"}
	add		$tmp876.z ___647_cellPosition.z ___655_cellOffset.z 	%argrw{"wrr"}
	add		$tmp876.w ___647_cellPosition.w ___655_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:781
#                                   hash_vector4_to_vector4(cellPosition + cellOffset) * randomness;
	functioncall	$const68 2070 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{781} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:45
#   return vector4(hash_vector4_to_float(k),
	functioncall	$const59 2049 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{45} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp877 $tmp876.x $tmp876.y $tmp876.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp875.x $tmp877 $tmp876.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:46
#                  hash_vector4_to_float(vector4(k.w, k.x, k.y, k.z)),
	assign		$tmp878.x $tmp876.w 	%line{46} %argrw{"wr"}
	assign		$tmp878.y $tmp876.x 	%argrw{"wr"}
	assign		$tmp878.z $tmp876.y 	%argrw{"wr"}
	assign		$tmp878.w $tmp876.z 	%argrw{"wr"}
	functioncall	$const59 2056 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp879 $tmp878.x $tmp878.y $tmp878.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp875.y $tmp879 $tmp878.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:47
#                  hash_vector4_to_float(vector4(k.z, k.w, k.x, k.y)),
	assign		$tmp880.x $tmp876.z 	%line{47} %argrw{"wr"}
	assign		$tmp880.y $tmp876.w 	%argrw{"wr"}
	assign		$tmp880.z $tmp876.x 	%argrw{"wr"}
	assign		$tmp880.w $tmp876.y 	%argrw{"wr"}
	functioncall	$const59 2063 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp881 $tmp880.x $tmp880.y $tmp880.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp875.z $tmp881 $tmp880.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:48
#                  hash_vector4_to_float(vector4(k.y, k.z, k.w, k.x)));
	assign		$tmp882.x $tmp876.y 	%line{48} %argrw{"wr"}
	assign		$tmp882.y $tmp876.z 	%argrw{"wr"}
	assign		$tmp882.z $tmp876.w 	%argrw{"wr"}
	assign		$tmp882.w $tmp876.x 	%argrw{"wr"}
	functioncall	$const59 2070 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp883 $tmp882.x $tmp882.y $tmp882.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp875.w $tmp883 $tmp882.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2080 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp884.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp884.y randomness 	%argrw{"wr"}
	assign		$tmp884.z randomness 	%argrw{"wr"}
	assign		$tmp884.w randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2080 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp874.x $tmp875.x $tmp884.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp874.y $tmp875.y $tmp884.y 	%argrw{"wrr"}
	mul		$tmp874.z $tmp875.z $tmp884.z 	%argrw{"wrr"}
	mul		$tmp874.w $tmp875.w $tmp884.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2085 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___655_pointPosition.x ___655_cellOffset.x $tmp874.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___655_pointPosition.y ___655_cellOffset.y $tmp874.y 	%argrw{"wrr"}
	add		___655_pointPosition.z ___655_cellOffset.z $tmp874.z 	%argrw{"wrr"}
	add		___655_pointPosition.w ___655_cellOffset.w $tmp874.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:782
#           float distanceToPoint = voronoi_distance(pointPosition, localPosition, metric, exponent);
	functioncall	$const14 2154 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{782} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:665
#   if (metric == "euclidean") {
	eq		$tmp885 metric $const39 	%line{665} %argrw{"wrr"}
	if		$tmp885 2104 2154 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:666
#     return distance(a, b);
	functioncall	$const27 2103 	%line{666} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2094 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		$tmp886.x ___655_pointPosition.x ___647_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		$tmp886.y ___655_pointPosition.y ___647_localPosition.y 	%argrw{"wrr"}
	sub		$tmp886.z ___655_pointPosition.z ___647_localPosition.z 	%argrw{"wrr"}
	sub		$tmp886.w ___655_pointPosition.w ___647_localPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:38
#   return length(a - b);
	functioncall	$const40 2103 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{38} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:223
#     return sqrt (a.x*a.x + a.y*a.y + a.z*a.z + a.w*a.w);
	mul		$tmp887 $tmp886.x $tmp886.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{223} %argrw{"wrr"}
	mul		$tmp888 $tmp886.y $tmp886.y 	%argrw{"wrr"}
	add		$tmp889 $tmp887 $tmp888 	%argrw{"wrr"}
	mul		$tmp890 $tmp886.z $tmp886.z 	%argrw{"wrr"}
	add		$tmp891 $tmp889 $tmp890 	%argrw{"wrr"}
	mul		$tmp892 $tmp886.w $tmp886.w 	%argrw{"wrr"}
	add		$tmp893 $tmp891 $tmp892 	%argrw{"wrr"}
	sqrt		___655_distanceToPoint $tmp893 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:666
#     return distance(a, b);
	return	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{666}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:668
#   else if (metric == "manhattan") {
	eq		$tmp894 metric $const42 	%line{668} %argrw{"wrr"}
	if		$tmp894 2118 2154 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:669
#     return abs(a.x - b.x) + abs(a.y - b.y) + abs(a.z - b.z) + abs(a.w - b.w);
	sub		$tmp896 ___655_pointPosition.x ___647_localPosition.x 	%line{669} %argrw{"wrr"}
	abs		$tmp895 $tmp896 	%argrw{"wr"}
	sub		$tmp898 ___655_pointPosition.y ___647_localPosition.y 	%argrw{"wrr"}
	abs		$tmp897 $tmp898 	%argrw{"wr"}
	add		$tmp899 $tmp895 $tmp897 	%argrw{"wrr"}
	sub		$tmp901 ___655_pointPosition.z ___647_localPosition.z 	%argrw{"wrr"}
	abs		$tmp900 $tmp901 	%argrw{"wr"}
	add		$tmp902 $tmp899 $tmp900 	%argrw{"wrr"}
	sub		$tmp904 ___655_pointPosition.w ___647_localPosition.w 	%argrw{"wrr"}
	abs		$tmp903 $tmp904 	%argrw{"wr"}
	add		___655_distanceToPoint $tmp902 $tmp903 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:671
#   else if (metric == "chebychev") {
	eq		$tmp905 metric $const43 	%line{671} %argrw{"wrr"}
	if		$tmp905 2132 2154 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:672
#     return max(abs(a.x - b.x), max(abs(a.y - b.y), max(abs(a.z - b.z), abs(a.w - b.w))));
	sub		$tmp907 ___655_pointPosition.x ___647_localPosition.x 	%line{672} %argrw{"wrr"}
	abs		$tmp906 $tmp907 	%argrw{"wr"}
	sub		$tmp910 ___655_pointPosition.y ___647_localPosition.y 	%argrw{"wrr"}
	abs		$tmp909 $tmp910 	%argrw{"wr"}
	sub		$tmp913 ___655_pointPosition.z ___647_localPosition.z 	%argrw{"wrr"}
	abs		$tmp912 $tmp913 	%argrw{"wr"}
	sub		$tmp915 ___655_pointPosition.w ___647_localPosition.w 	%argrw{"wrr"}
	abs		$tmp914 $tmp915 	%argrw{"wr"}
	max		$tmp911 $tmp912 $tmp914 	%argrw{"wrr"}
	max		$tmp908 $tmp909 $tmp911 	%argrw{"wrr"}
	max		___655_distanceToPoint $tmp906 $tmp908 	%argrw{"wrr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:674
#   else if (metric == "minkowski") {
	eq		$tmp916 metric $const44 	%line{674} %argrw{"wrr"}
	if		$tmp916 2152 2154 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	sub		$tmp919 ___655_pointPosition.x ___647_localPosition.x 	%line{675} %argrw{"wrr"}
	abs		$tmp918 $tmp919 	%argrw{"wr"}
	pow		$tmp917 $tmp918 Exponent 	%argrw{"wrr"}
	sub		$tmp922 ___655_pointPosition.y ___647_localPosition.y 	%argrw{"wrr"}
	abs		$tmp921 $tmp922 	%argrw{"wr"}
	pow		$tmp920 $tmp921 Exponent 	%argrw{"wrr"}
	add		$tmp923 $tmp917 $tmp920 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:676
#                    pow(abs(a.z - b.z), exponent) + pow(abs(a.w - b.w), exponent),
	sub		$tmp926 ___655_pointPosition.z ___647_localPosition.z 	%line{676} %argrw{"wrr"}
	abs		$tmp925 $tmp926 	%argrw{"wr"}
	pow		$tmp924 $tmp925 Exponent 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	add		$tmp927 $tmp923 $tmp924 	%line{675} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:676
#                    pow(abs(a.z - b.z), exponent) + pow(abs(a.w - b.w), exponent),
	sub		$tmp930 ___655_pointPosition.w ___647_localPosition.w 	%line{676} %argrw{"wrr"}
	abs		$tmp929 $tmp930 	%argrw{"wr"}
	pow		$tmp928 $tmp929 Exponent 	%argrw{"wrr"}
	add		$tmp931 $tmp927 $tmp928 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:677
#                1.0 / exponent);
	div		$tmp932 $const2 Exponent 	%line{677} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:675
#     return pow(pow(abs(a.x - b.x), exponent) + pow(abs(a.y - b.y), exponent) +
	pow		___655_distanceToPoint $tmp931 $tmp932 	%line{675} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:677
#                1.0 / exponent);
	return	%line{677}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:680
#     return 0.0;
	assign		___655_distanceToPoint $const1 	%line{680} %argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:783
#           if (distanceToPoint < distanceF1) {
	lt		$tmp933 ___655_distanceToPoint ___647_distanceF1 	%line{783} %argrw{"wrr"}
	if		$tmp933 2174 2185 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:784
#             distanceF2 = distanceF1;
	assign		___647_distanceF2 ___647_distanceF1 	%line{784} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:785
#             distanceF1 = distanceToPoint;
	assign		___647_distanceF1 ___655_distanceToPoint 	%line{785} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:786
#             offsetF2 = offsetF1;
	assign		___647_offsetF2.x ___647_offsetF1.x 	%line{786} %argrw{"wr"}
	assign		___647_offsetF2.y ___647_offsetF1.y 	%argrw{"wr"}
	assign		___647_offsetF2.z ___647_offsetF1.z 	%argrw{"wr"}
	assign		___647_offsetF2.w ___647_offsetF1.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:787
#             offsetF1 = cellOffset;
	assign		___647_offsetF1.x ___655_cellOffset.x 	%line{787} %argrw{"wr"}
	assign		___647_offsetF1.y ___655_cellOffset.y 	%argrw{"wr"}
	assign		___647_offsetF1.z ___655_cellOffset.z 	%argrw{"wr"}
	assign		___647_offsetF1.w ___655_cellOffset.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:788
#             positionF2 = positionF1;
	assign		___647_positionF2.x ___647_positionF1.x 	%line{788} %argrw{"wr"}
	assign		___647_positionF2.y ___647_positionF1.y 	%argrw{"wr"}
	assign		___647_positionF2.z ___647_positionF1.z 	%argrw{"wr"}
	assign		___647_positionF2.w ___647_positionF1.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:789
#             positionF1 = pointPosition;
	assign		___647_positionF1.x ___655_pointPosition.x 	%line{789} %argrw{"wr"}
	assign		___647_positionF1.y ___655_pointPosition.y 	%argrw{"wr"}
	assign		___647_positionF1.z ___655_pointPosition.z 	%argrw{"wr"}
	assign		___647_positionF1.w ___655_pointPosition.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:791
#           else if (distanceToPoint < distanceF2) {
	lt		$tmp934 ___655_distanceToPoint ___647_distanceF2 	%line{791} %argrw{"wrr"}
	if		$tmp934 2185 2185 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:792
#             distanceF2 = distanceToPoint;
	assign		___647_distanceF2 ___655_distanceToPoint 	%line{792} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:793
#             offsetF2 = cellOffset;
	assign		___647_offsetF2.x ___655_cellOffset.x 	%line{793} %argrw{"wr"}
	assign		___647_offsetF2.y ___655_cellOffset.y 	%argrw{"wr"}
	assign		___647_offsetF2.z ___655_cellOffset.z 	%argrw{"wr"}
	assign		___647_offsetF2.w ___655_cellOffset.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:794
#             positionF2 = pointPosition;
	assign		___647_positionF2.x ___655_pointPosition.x 	%line{794} %argrw{"wr"}
	assign		___647_positionF2.y ___655_pointPosition.y 	%argrw{"wr"}
	assign		___647_positionF2.z ___655_pointPosition.z 	%argrw{"wr"}
	assign		___647_positionF2.w ___655_pointPosition.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:778
#         for (int i = -1; i <= 1; i++) {
	assign		$tmp935 ___654_i 	%line{778} %argrw{"wr"}
	add		___654_i ___654_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:777
#       for (int j = -1; j <= 1; j++) {
	assign		$tmp936 ___652_j 	%line{777} %argrw{"wr"}
	add		___652_j ___652_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:776
#     for (int k = -1; k <= 1; k++) {
	assign		$tmp937 ___650_k 	%line{776} %argrw{"wr"}
	add		___650_k ___650_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:775
#   for (int u = -1; u <= 1; u++) {
	assign		$tmp938 ___648_u 	%line{775} %argrw{"wr"}
	add		___648_u ___648_u $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:800
#   outDistance = distanceF2;
	assign		Distance ___647_distanceF2 	%line{800} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2199 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp939.x ___647_cellPosition.x ___647_offsetF2.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp939.y ___647_cellPosition.y ___647_offsetF2.y 	%argrw{"wrr"}
	add		$tmp939.z ___647_cellPosition.z ___647_offsetF2.z 	%argrw{"wrr"}
	add		$tmp939.w ___647_cellPosition.w ___647_offsetF2.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:801
#   outColor = hash_vector4_to_color(cellPosition + offsetF2);
	functioncall	$const69 2218 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{801} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:76
#   return color(hash_vector4_to_float(k),
	functioncall	$const59 2203 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{76} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp941 $tmp939.x $tmp939.y $tmp939.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp940 $tmp941 $tmp939.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:77
#                hash_vector4_to_float(vector4(k.z, k.x, k.w, k.y)),
	assign		$tmp943.x $tmp939.z 	%line{77} %argrw{"wr"}
	assign		$tmp943.y $tmp939.x 	%argrw{"wr"}
	assign		$tmp943.z $tmp939.w 	%argrw{"wr"}
	assign		$tmp943.w $tmp939.y 	%argrw{"wr"}
	functioncall	$const59 2210 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp944 $tmp943.x $tmp943.y $tmp943.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp942 $tmp944 $tmp943.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:78
#                hash_vector4_to_float(vector4(k.w, k.z, k.y, k.x)));
	assign		$tmp946.x $tmp939.w 	%line{78} %argrw{"wr"}
	assign		$tmp946.y $tmp939.z 	%argrw{"wr"}
	assign		$tmp946.z $tmp939.y 	%argrw{"wr"}
	assign		$tmp946.w $tmp939.x 	%argrw{"wr"}
	functioncall	$const59 2217 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp947 $tmp946.x $tmp946.y $tmp946.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp945 $tmp947 $tmp946.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:76
#   return color(hash_vector4_to_float(k),
	color		Color $tmp940 $tmp942 $tmp945 	%line{76} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2223 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___718_outPosition4D.x ___647_positionF2.x ___647_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___718_outPosition4D.y ___647_positionF2.y ___647_cellPosition.y 	%argrw{"wrr"}
	add		___718_outPosition4D.z ___647_positionF2.z ___647_cellPosition.z 	%argrw{"wrr"}
	add		___718_outPosition4D.w ___647_positionF2.w ___647_cellPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1011
#     else if (feature == "distance_to_edge") {
	eq		$tmp948 feature $const25 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1011} %argrw{"wrr"}
	if		$tmp948 2471 2720 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1012
#       voronoi_distance_to_edge_4d(coord4D, randomness, Distance);
	functioncall	$const72 2471 	%line{1012} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:807
#   vector4 cellPosition = floor(coord);
	functioncall	$const33 2231 	%line{807} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:165
#     return vector4 (floor(in.x),
	floor		___658_cellPosition.x ___718_coord4D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{165} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:166
#                     floor(in.y),
	floor		___658_cellPosition.y ___718_coord4D.y 	%line{166} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:167
#                     floor(in.z),
	floor		___658_cellPosition.z ___718_coord4D.z 	%line{167} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:168
#                     floor(in.w));
	floor		___658_cellPosition.w ___718_coord4D.w 	%line{168} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2236 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___658_localPosition.x ___718_coord4D.x ___658_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___658_localPosition.y ___718_coord4D.y ___658_cellPosition.y 	%argrw{"wrr"}
	sub		___658_localPosition.z ___718_coord4D.z ___658_cellPosition.z 	%argrw{"wrr"}
	sub		___658_localPosition.w ___718_coord4D.w ___658_cellPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:811
#   float minDistance = 8.0;
	assign		___658_minDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{811} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:812
#   for (int u = -1; u <= 1; u++) {
	for		$tmp950 2239 2241 2328 2330 	%line{812} %argrw{"r"}
	assign		___659_u $const10 	%argrw{"wr"}
	le		$tmp949 ___659_u $const11 	%argrw{"wrr"}
	neq		$tmp950 $tmp949 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:813
#     for (int k = -1; k <= 1; k++) {
	for		$tmp952 2243 2245 2326 2328 	%line{813} %argrw{"r"}
	assign		___661_k $const10 	%argrw{"wr"}
	le		$tmp951 ___661_k $const11 	%argrw{"wrr"}
	neq		$tmp952 $tmp951 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:814
#       for (int j = -1; j <= 1; j++) {
	for		$tmp954 2247 2249 2324 2326 	%line{814} %argrw{"r"}
	assign		___663_j $const10 	%argrw{"wr"}
	le		$tmp953 ___663_j $const11 	%argrw{"wrr"}
	neq		$tmp954 $tmp953 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:815
#         for (int i = -1; i <= 1; i++) {
	for		$tmp956 2251 2253 2322 2324 	%line{815} %argrw{"r"}
	assign		___665_i $const10 	%argrw{"wr"}
	le		$tmp955 ___665_i $const11 	%argrw{"wrr"}
	neq		$tmp956 $tmp955 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:816
#           vector4 cellOffset = vector4(i, j, k, u);
	assign		___666_cellOffset.x ___665_i 	%line{816} %argrw{"wr"}
	assign		___666_cellOffset.y ___663_j 	%argrw{"wr"}
	assign		___666_cellOffset.z ___661_k 	%argrw{"wr"}
	assign		___666_cellOffset.w ___659_u 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2262 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp960.x ___658_cellPosition.x ___666_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp960.y ___658_cellPosition.y ___666_cellOffset.y 	%argrw{"wrr"}
	add		$tmp960.z ___658_cellPosition.z ___666_cellOffset.z 	%argrw{"wrr"}
	add		$tmp960.w ___658_cellPosition.w ___666_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:818
#                                   hash_vector4_to_vector4(cellPosition + cellOffset) * randomness -
	functioncall	$const68 2287 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{818} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:45
#   return vector4(hash_vector4_to_float(k),
	functioncall	$const59 2266 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{45} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp961 $tmp960.x $tmp960.y $tmp960.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp959.x $tmp961 $tmp960.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:46
#                  hash_vector4_to_float(vector4(k.w, k.x, k.y, k.z)),
	assign		$tmp962.x $tmp960.w 	%line{46} %argrw{"wr"}
	assign		$tmp962.y $tmp960.x 	%argrw{"wr"}
	assign		$tmp962.z $tmp960.y 	%argrw{"wr"}
	assign		$tmp962.w $tmp960.z 	%argrw{"wr"}
	functioncall	$const59 2273 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp963 $tmp962.x $tmp962.y $tmp962.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp959.y $tmp963 $tmp962.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:47
#                  hash_vector4_to_float(vector4(k.z, k.w, k.x, k.y)),
	assign		$tmp964.x $tmp960.z 	%line{47} %argrw{"wr"}
	assign		$tmp964.y $tmp960.w 	%argrw{"wr"}
	assign		$tmp964.z $tmp960.x 	%argrw{"wr"}
	assign		$tmp964.w $tmp960.y 	%argrw{"wr"}
	functioncall	$const59 2280 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp965 $tmp964.x $tmp964.y $tmp964.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp959.z $tmp965 $tmp964.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:48
#                  hash_vector4_to_float(vector4(k.y, k.z, k.w, k.x)));
	assign		$tmp966.x $tmp960.y 	%line{48} %argrw{"wr"}
	assign		$tmp966.y $tmp960.z 	%argrw{"wr"}
	assign		$tmp966.z $tmp960.w 	%argrw{"wr"}
	assign		$tmp966.w $tmp960.x 	%argrw{"wr"}
	functioncall	$const59 2287 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp967 $tmp966.x $tmp966.y $tmp966.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp959.w $tmp967 $tmp966.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2297 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp968.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp968.y randomness 	%argrw{"wr"}
	assign		$tmp968.z randomness 	%argrw{"wr"}
	assign		$tmp968.w randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2297 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp958.x $tmp959.x $tmp968.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp958.y $tmp959.y $tmp968.y 	%argrw{"wrr"}
	mul		$tmp958.z $tmp959.z $tmp968.z 	%argrw{"wrr"}
	mul		$tmp958.w $tmp959.w $tmp968.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2302 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp957.x ___666_cellOffset.x $tmp958.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp957.y ___666_cellOffset.y $tmp958.y 	%argrw{"wrr"}
	add		$tmp957.z ___666_cellOffset.z $tmp958.z 	%argrw{"wrr"}
	add		$tmp957.w ___666_cellOffset.w $tmp958.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2307 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___666_vectorToPoint.x $tmp957.x ___658_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___666_vectorToPoint.y $tmp957.y ___658_localPosition.y 	%argrw{"wrr"}
	sub		___666_vectorToPoint.z $tmp957.z ___658_localPosition.z 	%argrw{"wrr"}
	sub		___666_vectorToPoint.w $tmp957.w ___658_localPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:820
#           float distanceToPoint = dot(vectorToPoint, vectorToPoint);
	functioncall	$const50 2315 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{820} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:218
#     return ((a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w));
	mul		$tmp969 ___666_vectorToPoint.x ___666_vectorToPoint.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{218} %argrw{"wrr"}
	mul		$tmp970 ___666_vectorToPoint.y ___666_vectorToPoint.y 	%argrw{"wrr"}
	add		$tmp971 $tmp969 $tmp970 	%argrw{"wrr"}
	mul		$tmp972 ___666_vectorToPoint.z ___666_vectorToPoint.z 	%argrw{"wrr"}
	add		$tmp973 $tmp971 $tmp972 	%argrw{"wrr"}
	mul		$tmp974 ___666_vectorToPoint.w ___666_vectorToPoint.w 	%argrw{"wrr"}
	add		___666_distanceToPoint $tmp973 $tmp974 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:821
#           if (distanceToPoint < minDistance) {
	lt		$tmp975 ___666_distanceToPoint ___658_minDistance 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{821} %argrw{"wrr"}
	if		$tmp975 2322 2322 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:822
#             minDistance = distanceToPoint;
	assign		___658_minDistance ___666_distanceToPoint 	%line{822} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:823
#             vectorToClosest = vectorToPoint;
	assign		___658_vectorToClosest.x ___666_vectorToPoint.x 	%line{823} %argrw{"wr"}
	assign		___658_vectorToClosest.y ___666_vectorToPoint.y 	%argrw{"wr"}
	assign		___658_vectorToClosest.z ___666_vectorToPoint.z 	%argrw{"wr"}
	assign		___658_vectorToClosest.w ___666_vectorToPoint.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:815
#         for (int i = -1; i <= 1; i++) {
	assign		$tmp976 ___665_i 	%line{815} %argrw{"wr"}
	add		___665_i ___665_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:814
#       for (int j = -1; j <= 1; j++) {
	assign		$tmp977 ___663_j 	%line{814} %argrw{"wr"}
	add		___663_j ___663_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:813
#     for (int k = -1; k <= 1; k++) {
	assign		$tmp978 ___661_k 	%line{813} %argrw{"wr"}
	add		___661_k ___661_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:812
#   for (int u = -1; u <= 1; u++) {
	assign		$tmp979 ___659_u 	%line{812} %argrw{"wr"}
	add		___659_u ___659_u $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:830
#   minDistance = 8.0;
	assign		___658_minDistance $const9 	%line{830} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:831
#   for (int u = -1; u <= 1; u++) {
	for		$tmp981 2333 2335 2468 2470 	%line{831} %argrw{"r"}
	assign		___668_u $const10 	%argrw{"wr"}
	le		$tmp980 ___668_u $const11 	%argrw{"wrr"}
	neq		$tmp981 $tmp980 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:832
#     for (int k = -1; k <= 1; k++) {
	for		$tmp983 2337 2339 2466 2468 	%line{832} %argrw{"r"}
	assign		___670_k $const10 	%argrw{"wr"}
	le		$tmp982 ___670_k $const11 	%argrw{"wrr"}
	neq		$tmp983 $tmp982 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:833
#       for (int j = -1; j <= 1; j++) {
	for		$tmp985 2341 2343 2464 2466 	%line{833} %argrw{"r"}
	assign		___672_j $const10 	%argrw{"wr"}
	le		$tmp984 ___672_j $const11 	%argrw{"wrr"}
	neq		$tmp985 $tmp984 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:834
#         for (int i = -1; i <= 1; i++) {
	for		$tmp987 2345 2347 2462 2464 	%line{834} %argrw{"r"}
	assign		___674_i $const10 	%argrw{"wr"}
	le		$tmp986 ___674_i $const11 	%argrw{"wrr"}
	neq		$tmp987 $tmp986 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:835
#           vector4 cellOffset = vector4(i, j, k, u);
	assign		___675_cellOffset.x ___674_i 	%line{835} %argrw{"wr"}
	assign		___675_cellOffset.y ___672_j 	%argrw{"wr"}
	assign		___675_cellOffset.z ___670_k 	%argrw{"wr"}
	assign		___675_cellOffset.w ___668_u 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2356 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp991.x ___658_cellPosition.x ___675_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp991.y ___658_cellPosition.y ___675_cellOffset.y 	%argrw{"wrr"}
	add		$tmp991.z ___658_cellPosition.z ___675_cellOffset.z 	%argrw{"wrr"}
	add		$tmp991.w ___658_cellPosition.w ___675_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:837
#                                   hash_vector4_to_vector4(cellPosition + cellOffset) * randomness -
	functioncall	$const68 2381 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{837} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:45
#   return vector4(hash_vector4_to_float(k),
	functioncall	$const59 2360 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{45} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp992 $tmp991.x $tmp991.y $tmp991.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp990.x $tmp992 $tmp991.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:46
#                  hash_vector4_to_float(vector4(k.w, k.x, k.y, k.z)),
	assign		$tmp993.x $tmp991.w 	%line{46} %argrw{"wr"}
	assign		$tmp993.y $tmp991.x 	%argrw{"wr"}
	assign		$tmp993.z $tmp991.y 	%argrw{"wr"}
	assign		$tmp993.w $tmp991.z 	%argrw{"wr"}
	functioncall	$const59 2367 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp994 $tmp993.x $tmp993.y $tmp993.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp990.y $tmp994 $tmp993.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:47
#                  hash_vector4_to_float(vector4(k.z, k.w, k.x, k.y)),
	assign		$tmp995.x $tmp991.z 	%line{47} %argrw{"wr"}
	assign		$tmp995.y $tmp991.w 	%argrw{"wr"}
	assign		$tmp995.z $tmp991.x 	%argrw{"wr"}
	assign		$tmp995.w $tmp991.y 	%argrw{"wr"}
	functioncall	$const59 2374 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp996 $tmp995.x $tmp995.y $tmp995.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp990.z $tmp996 $tmp995.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:48
#                  hash_vector4_to_float(vector4(k.y, k.z, k.w, k.x)));
	assign		$tmp997.x $tmp991.y 	%line{48} %argrw{"wr"}
	assign		$tmp997.y $tmp991.z 	%argrw{"wr"}
	assign		$tmp997.z $tmp991.w 	%argrw{"wr"}
	assign		$tmp997.w $tmp991.x 	%argrw{"wr"}
	functioncall	$const59 2381 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp998 $tmp997.x $tmp997.y $tmp997.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp990.w $tmp998 $tmp997.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2391 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp999.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp999.y randomness 	%argrw{"wr"}
	assign		$tmp999.z randomness 	%argrw{"wr"}
	assign		$tmp999.w randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2391 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp989.x $tmp990.x $tmp999.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp989.y $tmp990.y $tmp999.y 	%argrw{"wrr"}
	mul		$tmp989.z $tmp990.z $tmp999.z 	%argrw{"wrr"}
	mul		$tmp989.w $tmp990.w $tmp999.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2396 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp988.x ___675_cellOffset.x $tmp989.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp988.y ___675_cellOffset.y $tmp989.y 	%argrw{"wrr"}
	add		$tmp988.z ___675_cellOffset.z $tmp989.z 	%argrw{"wrr"}
	add		$tmp988.w ___675_cellOffset.w $tmp989.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2401 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___675_vectorToPoint.x $tmp988.x ___658_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___675_vectorToPoint.y $tmp988.y ___658_localPosition.y 	%argrw{"wrr"}
	sub		___675_vectorToPoint.z $tmp988.z ___658_localPosition.z 	%argrw{"wrr"}
	sub		___675_vectorToPoint.w $tmp988.w ___658_localPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2406 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___675_perpendicularToEdge.x ___675_vectorToPoint.x ___658_vectorToClosest.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___675_perpendicularToEdge.y ___675_vectorToPoint.y ___658_vectorToClosest.y 	%argrw{"wrr"}
	sub		___675_perpendicularToEdge.z ___675_vectorToPoint.z ___658_vectorToClosest.z 	%argrw{"wrr"}
	sub		___675_perpendicularToEdge.w ___675_vectorToPoint.w ___658_vectorToClosest.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:840
#           if (dot(perpendicularToEdge, perpendicularToEdge) > 0.0001) {
	functioncall	$const50 2414 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{840} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:218
#     return ((a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w));
	mul		$tmp1001 ___675_perpendicularToEdge.x ___675_perpendicularToEdge.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{218} %argrw{"wrr"}
	mul		$tmp1002 ___675_perpendicularToEdge.y ___675_perpendicularToEdge.y 	%argrw{"wrr"}
	add		$tmp1003 $tmp1001 $tmp1002 	%argrw{"wrr"}
	mul		$tmp1004 ___675_perpendicularToEdge.z ___675_perpendicularToEdge.z 	%argrw{"wrr"}
	add		$tmp1005 $tmp1003 $tmp1004 	%argrw{"wrr"}
	mul		$tmp1006 ___675_perpendicularToEdge.w ___675_perpendicularToEdge.w 	%argrw{"wrr"}
	add		$tmp1000 $tmp1005 $tmp1006 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:840
#           if (dot(perpendicularToEdge, perpendicularToEdge) > 0.0001) {
	gt		$tmp1007 $tmp1000 $const51 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{840} %argrw{"wrr"}
	if		$tmp1007 2462 2462 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2421 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp1009.x ___658_vectorToClosest.x ___675_vectorToPoint.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp1009.y ___658_vectorToClosest.y ___675_vectorToPoint.y 	%argrw{"wrr"}
	add		$tmp1009.z ___658_vectorToClosest.z ___675_vectorToPoint.z 	%argrw{"wrr"}
	add		$tmp1009.w ___658_vectorToClosest.w ___675_vectorToPoint.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const52 2432 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:116
#     float b_inv = 1/b;
	div		___435_b_inv $const2 $const4 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{116} %argrw{"wrr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:117
#     return a * vector4(b_inv, b_inv, b_inv, b_inv);
	assign		$tmp1010.x ___435_b_inv 	%line{117} %argrw{"wr"}
	assign		$tmp1010.y ___435_b_inv 	%argrw{"wr"}
	assign		$tmp1010.z ___435_b_inv 	%argrw{"wr"}
	assign		$tmp1010.w ___435_b_inv 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2432 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp1008.x $tmp1009.x $tmp1010.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp1008.y $tmp1009.y $tmp1010.y 	%argrw{"wrr"}
	mul		$tmp1008.z $tmp1009.z $tmp1010.z 	%argrw{"wrr"}
	mul		$tmp1008.w $tmp1009.w $tmp1010.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:842
#                                        normalize(perpendicularToEdge));
	functioncall	$const53 2453 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{842} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:273
#     return a / length(a);
	functioncall	$const40 2442 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{273} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:223
#     return sqrt (a.x*a.x + a.y*a.y + a.z*a.z + a.w*a.w);
	mul		$tmp1013 ___675_perpendicularToEdge.x ___675_perpendicularToEdge.x 	%line{223} %argrw{"wrr"}
	mul		$tmp1014 ___675_perpendicularToEdge.y ___675_perpendicularToEdge.y 	%argrw{"wrr"}
	add		$tmp1015 $tmp1013 $tmp1014 	%argrw{"wrr"}
	mul		$tmp1016 ___675_perpendicularToEdge.z ___675_perpendicularToEdge.z 	%argrw{"wrr"}
	add		$tmp1017 $tmp1015 $tmp1016 	%argrw{"wrr"}
	mul		$tmp1018 ___675_perpendicularToEdge.w ___675_perpendicularToEdge.w 	%argrw{"wrr"}
	add		$tmp1019 $tmp1017 $tmp1018 	%argrw{"wrr"}
	sqrt		$tmp1012 $tmp1019 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const52 2453 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:116
#     float b_inv = 1/b;
	div		___435_b_inv $const2 $tmp1012 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{116} %argrw{"wrr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:117
#     return a * vector4(b_inv, b_inv, b_inv, b_inv);
	assign		$tmp1020.x ___435_b_inv 	%line{117} %argrw{"wr"}
	assign		$tmp1020.y ___435_b_inv 	%argrw{"wr"}
	assign		$tmp1020.z ___435_b_inv 	%argrw{"wr"}
	assign		$tmp1020.w ___435_b_inv 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2453 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp1011.x ___675_perpendicularToEdge.x $tmp1020.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp1011.y ___675_perpendicularToEdge.y $tmp1020.y 	%argrw{"wrr"}
	mul		$tmp1011.z ___675_perpendicularToEdge.z $tmp1020.z 	%argrw{"wrr"}
	mul		$tmp1011.w ___675_perpendicularToEdge.w $tmp1020.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:841
#             float distanceToEdge = dot((vectorToClosest + vectorToPoint) / 2.0,
	functioncall	$const50 2461 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{841} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:218
#     return ((a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w));
	mul		$tmp1021 $tmp1008.x $tmp1011.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{218} %argrw{"wrr"}
	mul		$tmp1022 $tmp1008.y $tmp1011.y 	%argrw{"wrr"}
	add		$tmp1023 $tmp1021 $tmp1022 	%argrw{"wrr"}
	mul		$tmp1024 $tmp1008.z $tmp1011.z 	%argrw{"wrr"}
	add		$tmp1025 $tmp1023 $tmp1024 	%argrw{"wrr"}
	mul		$tmp1026 $tmp1008.w $tmp1011.w 	%argrw{"wrr"}
	add		___676_distanceToEdge $tmp1025 $tmp1026 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:843
#             minDistance = min(minDistance, distanceToEdge);
	min		___658_minDistance ___658_minDistance ___676_distanceToEdge 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{843} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:834
#         for (int i = -1; i <= 1; i++) {
	assign		$tmp1027 ___674_i 	%line{834} %argrw{"wr"}
	add		___674_i ___674_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:833
#       for (int j = -1; j <= 1; j++) {
	assign		$tmp1028 ___672_j 	%line{833} %argrw{"wr"}
	add		___672_j ___672_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:832
#     for (int k = -1; k <= 1; k++) {
	assign		$tmp1029 ___670_k 	%line{832} %argrw{"wr"}
	add		___670_k ___670_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:831
#   for (int u = -1; u <= 1; u++) {
	assign		$tmp1030 ___668_u 	%line{831} %argrw{"wr"}
	add		___668_u ___668_u $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:849
#   outDistance = minDistance;
	assign		Distance ___658_minDistance 	%line{849} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1014
#     else if (feature == "n_sphere_radius") {
	eq		$tmp1031 feature $const28 	%line{1014} %argrw{"wrr"}
	if		$tmp1031 2719 2720 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1015
#       voronoi_n_sphere_radius_4d(coord4D, randomness, Radius);
	functioncall	$const73 2719 	%line{1015} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:854
#   vector4 cellPosition = floor(coord);
	functioncall	$const33 2479 	%line{854} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:165
#     return vector4 (floor(in.x),
	floor		___677_cellPosition.x ___718_coord4D.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{165} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:166
#                     floor(in.y),
	floor		___677_cellPosition.y ___718_coord4D.y 	%line{166} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:167
#                     floor(in.z),
	floor		___677_cellPosition.z ___718_coord4D.z 	%line{167} %argrw{"wr"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:168
#                     floor(in.w));
	floor		___677_cellPosition.w ___718_coord4D.w 	%line{168} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2484 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		___677_localPosition.x ___718_coord4D.x ___677_cellPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		___677_localPosition.y ___718_coord4D.y ___677_cellPosition.y 	%argrw{"wrr"}
	sub		___677_localPosition.z ___718_coord4D.z ___677_cellPosition.z 	%argrw{"wrr"}
	sub		___677_localPosition.w ___718_coord4D.w ___677_cellPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:859
#   float minDistance = 8.0;
	assign		___677_minDistance $const9 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{859} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:860
#   for (int u = -1; u <= 1; u++) {
	for		$tmp1033 2487 2489 2582 2584 	%line{860} %argrw{"r"}
	assign		___678_u $const10 	%argrw{"wr"}
	le		$tmp1032 ___678_u $const11 	%argrw{"wrr"}
	neq		$tmp1033 $tmp1032 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:861
#     for (int k = -1; k <= 1; k++) {
	for		$tmp1035 2491 2493 2580 2582 	%line{861} %argrw{"r"}
	assign		___680_k $const10 	%argrw{"wr"}
	le		$tmp1034 ___680_k $const11 	%argrw{"wrr"}
	neq		$tmp1035 $tmp1034 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:862
#       for (int j = -1; j <= 1; j++) {
	for		$tmp1037 2495 2497 2578 2580 	%line{862} %argrw{"r"}
	assign		___682_j $const10 	%argrw{"wr"}
	le		$tmp1036 ___682_j $const11 	%argrw{"wrr"}
	neq		$tmp1037 $tmp1036 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:863
#         for (int i = -1; i <= 1; i++) {
	for		$tmp1039 2499 2501 2576 2578 	%line{863} %argrw{"r"}
	assign		___684_i $const10 	%argrw{"wr"}
	le		$tmp1038 ___684_i $const11 	%argrw{"wrr"}
	neq		$tmp1039 $tmp1038 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:864
#           vector4 cellOffset = vector4(i, j, k, u);
	assign		___685_cellOffset.x ___684_i 	%line{864} %argrw{"wr"}
	assign		___685_cellOffset.y ___682_j 	%argrw{"wr"}
	assign		___685_cellOffset.z ___680_k 	%argrw{"wr"}
	assign		___685_cellOffset.w ___678_u 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2510 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp1042.x ___677_cellPosition.x ___685_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp1042.y ___677_cellPosition.y ___685_cellOffset.y 	%argrw{"wrr"}
	add		$tmp1042.z ___677_cellPosition.z ___685_cellOffset.z 	%argrw{"wrr"}
	add		$tmp1042.w ___677_cellPosition.w ___685_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:866
#                                   hash_vector4_to_vector4(cellPosition + cellOffset) * randomness;
	functioncall	$const68 2535 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{866} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:45
#   return vector4(hash_vector4_to_float(k),
	functioncall	$const59 2514 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{45} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1043 $tmp1042.x $tmp1042.y $tmp1042.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1041.x $tmp1043 $tmp1042.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:46
#                  hash_vector4_to_float(vector4(k.w, k.x, k.y, k.z)),
	assign		$tmp1044.x $tmp1042.w 	%line{46} %argrw{"wr"}
	assign		$tmp1044.y $tmp1042.x 	%argrw{"wr"}
	assign		$tmp1044.z $tmp1042.y 	%argrw{"wr"}
	assign		$tmp1044.w $tmp1042.z 	%argrw{"wr"}
	functioncall	$const59 2521 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1045 $tmp1044.x $tmp1044.y $tmp1044.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1041.y $tmp1045 $tmp1044.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:47
#                  hash_vector4_to_float(vector4(k.z, k.w, k.x, k.y)),
	assign		$tmp1046.x $tmp1042.z 	%line{47} %argrw{"wr"}
	assign		$tmp1046.y $tmp1042.w 	%argrw{"wr"}
	assign		$tmp1046.z $tmp1042.x 	%argrw{"wr"}
	assign		$tmp1046.w $tmp1042.y 	%argrw{"wr"}
	functioncall	$const59 2528 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1047 $tmp1046.x $tmp1046.y $tmp1046.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1041.z $tmp1047 $tmp1046.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:48
#                  hash_vector4_to_float(vector4(k.y, k.z, k.w, k.x)));
	assign		$tmp1048.x $tmp1042.y 	%line{48} %argrw{"wr"}
	assign		$tmp1048.y $tmp1042.z 	%argrw{"wr"}
	assign		$tmp1048.z $tmp1042.w 	%argrw{"wr"}
	assign		$tmp1048.w $tmp1042.x 	%argrw{"wr"}
	functioncall	$const59 2535 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1049 $tmp1048.x $tmp1048.y $tmp1048.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1041.w $tmp1049 $tmp1048.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2545 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp1050.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp1050.y randomness 	%argrw{"wr"}
	assign		$tmp1050.z randomness 	%argrw{"wr"}
	assign		$tmp1050.w randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2545 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp1040.x $tmp1041.x $tmp1050.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp1040.y $tmp1041.y $tmp1050.y 	%argrw{"wrr"}
	mul		$tmp1040.z $tmp1041.z $tmp1050.z 	%argrw{"wrr"}
	mul		$tmp1040.w $tmp1041.w $tmp1050.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2550 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___685_pointPosition.x ___685_cellOffset.x $tmp1040.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___685_pointPosition.y ___685_cellOffset.y $tmp1040.y 	%argrw{"wrr"}
	add		___685_pointPosition.z ___685_cellOffset.z $tmp1040.z 	%argrw{"wrr"}
	add		___685_pointPosition.w ___685_cellOffset.w $tmp1040.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:867
#           float distanceToPoint = distance(pointPosition, localPosition);
	functioncall	$const27 2565 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{867} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2556 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		$tmp1051.x ___685_pointPosition.x ___677_localPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		$tmp1051.y ___685_pointPosition.y ___677_localPosition.y 	%argrw{"wrr"}
	sub		$tmp1051.z ___685_pointPosition.z ___677_localPosition.z 	%argrw{"wrr"}
	sub		$tmp1051.w ___685_pointPosition.w ___677_localPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:38
#   return length(a - b);
	functioncall	$const40 2565 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{38} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:223
#     return sqrt (a.x*a.x + a.y*a.y + a.z*a.z + a.w*a.w);
	mul		$tmp1052 $tmp1051.x $tmp1051.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{223} %argrw{"wrr"}
	mul		$tmp1053 $tmp1051.y $tmp1051.y 	%argrw{"wrr"}
	add		$tmp1054 $tmp1052 $tmp1053 	%argrw{"wrr"}
	mul		$tmp1055 $tmp1051.z $tmp1051.z 	%argrw{"wrr"}
	add		$tmp1056 $tmp1054 $tmp1055 	%argrw{"wrr"}
	mul		$tmp1057 $tmp1051.w $tmp1051.w 	%argrw{"wrr"}
	add		$tmp1058 $tmp1056 $tmp1057 	%argrw{"wrr"}
	sqrt		___685_distanceToPoint $tmp1058 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:868
#           if (distanceToPoint < minDistance) {
	lt		$tmp1059 ___685_distanceToPoint ___677_minDistance 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{868} %argrw{"wrr"}
	if		$tmp1059 2576 2576 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:869
#             minDistance = distanceToPoint;
	assign		___677_minDistance ___685_distanceToPoint 	%line{869} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:870
#             closestPoint = pointPosition;
	assign		___677_closestPoint.x ___685_pointPosition.x 	%line{870} %argrw{"wr"}
	assign		___677_closestPoint.y ___685_pointPosition.y 	%argrw{"wr"}
	assign		___677_closestPoint.z ___685_pointPosition.z 	%argrw{"wr"}
	assign		___677_closestPoint.w ___685_pointPosition.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:871
#             closestPointOffset = cellOffset;
	assign		___677_closestPointOffset.x ___685_cellOffset.x 	%line{871} %argrw{"wr"}
	assign		___677_closestPointOffset.y ___685_cellOffset.y 	%argrw{"wr"}
	assign		___677_closestPointOffset.z ___685_cellOffset.z 	%argrw{"wr"}
	assign		___677_closestPointOffset.w ___685_cellOffset.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:863
#         for (int i = -1; i <= 1; i++) {
	assign		$tmp1060 ___684_i 	%line{863} %argrw{"wr"}
	add		___684_i ___684_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:862
#       for (int j = -1; j <= 1; j++) {
	assign		$tmp1061 ___682_j 	%line{862} %argrw{"wr"}
	add		___682_j ___682_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:861
#     for (int k = -1; k <= 1; k++) {
	assign		$tmp1062 ___680_k 	%line{861} %argrw{"wr"}
	add		___680_k ___680_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:860
#   for (int u = -1; u <= 1; u++) {
	assign		$tmp1063 ___678_u 	%line{860} %argrw{"wr"}
	add		___678_u ___678_u $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:878
#   minDistance = 8.0;
	assign		___677_minDistance $const9 	%line{878} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:880
#   for (int u = -1; u <= 1; u++) {
	for		$tmp1065 2587 2589 2701 2703 	%line{880} %argrw{"r"}
	assign		___687_u $const10 	%argrw{"wr"}
	le		$tmp1064 ___687_u $const11 	%argrw{"wrr"}
	neq		$tmp1065 $tmp1064 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:881
#     for (int k = -1; k <= 1; k++) {
	for		$tmp1067 2591 2593 2699 2701 	%line{881} %argrw{"r"}
	assign		___689_k $const10 	%argrw{"wr"}
	le		$tmp1066 ___689_k $const11 	%argrw{"wrr"}
	neq		$tmp1067 $tmp1066 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:882
#       for (int j = -1; j <= 1; j++) {
	for		$tmp1069 2595 2597 2697 2699 	%line{882} %argrw{"r"}
	assign		___691_j $const10 	%argrw{"wr"}
	le		$tmp1068 ___691_j $const11 	%argrw{"wrr"}
	neq		$tmp1069 $tmp1068 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:883
#         for (int i = -1; i <= 1; i++) {
	for		$tmp1071 2599 2601 2695 2697 	%line{883} %argrw{"r"}
	assign		___693_i $const10 	%argrw{"wr"}
	le		$tmp1070 ___693_i $const11 	%argrw{"wrr"}
	neq		$tmp1071 $tmp1070 $const12 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:884
#           if (i == 0 && j == 0 && k == 0 && u == 0) {
	eq		$tmp1072 ___693_i $const12 	%line{884} %argrw{"wrr"}
	neq		$tmp1073 $tmp1072 $const12 	%argrw{"wrr"}
	if		$tmp1073 2607 2607 	%argrw{"r"}
	eq		$tmp1074 ___691_j $const12 	%argrw{"wrr"}
	neq		$tmp1075 $tmp1074 $const12 	%argrw{"wrr"}
	assign		$tmp1073 $tmp1075 	%argrw{"wr"}
	neq		$tmp1076 $tmp1073 $const12 	%argrw{"wrr"}
	if		$tmp1076 2612 2612 	%argrw{"r"}
	eq		$tmp1077 ___689_k $const12 	%argrw{"wrr"}
	neq		$tmp1078 $tmp1077 $const12 	%argrw{"wrr"}
	assign		$tmp1076 $tmp1078 	%argrw{"wr"}
	neq		$tmp1079 $tmp1076 $const12 	%argrw{"wrr"}
	if		$tmp1079 2617 2617 	%argrw{"r"}
	eq		$tmp1080 ___687_u $const12 	%argrw{"wrr"}
	neq		$tmp1081 $tmp1080 $const12 	%argrw{"wrr"}
	assign		$tmp1079 $tmp1081 	%argrw{"wr"}
	if		$tmp1079 2619 2619 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:885
#             continue;
	continue	%line{885}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:887
#           vector4 cellOffset = vector4(i, j, k, u) + closestPointOffset;
	assign		$tmp1082.x ___693_i 	%line{887} %argrw{"wr"}
	assign		$tmp1082.y ___691_j 	%argrw{"wr"}
	assign		$tmp1082.z ___689_k 	%argrw{"wr"}
	assign		$tmp1082.w ___687_u 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2628 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___694_cellOffset.x $tmp1082.x ___677_closestPointOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___694_cellOffset.y $tmp1082.y ___677_closestPointOffset.y 	%argrw{"wrr"}
	add		___694_cellOffset.z $tmp1082.z ___677_closestPointOffset.z 	%argrw{"wrr"}
	add		___694_cellOffset.w $tmp1082.w ___677_closestPointOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2633 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		$tmp1085.x ___677_cellPosition.x ___694_cellOffset.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		$tmp1085.y ___677_cellPosition.y ___694_cellOffset.y 	%argrw{"wrr"}
	add		$tmp1085.z ___677_cellPosition.z ___694_cellOffset.z 	%argrw{"wrr"}
	add		$tmp1085.w ___677_cellPosition.w ___694_cellOffset.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:889
#                                   hash_vector4_to_vector4(cellPosition + cellOffset) * randomness;
	functioncall	$const68 2658 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{889} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:45
#   return vector4(hash_vector4_to_float(k),
	functioncall	$const59 2637 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h"} %line{45} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1086 $tmp1085.x $tmp1085.y $tmp1085.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1084.x $tmp1086 $tmp1085.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:46
#                  hash_vector4_to_float(vector4(k.w, k.x, k.y, k.z)),
	assign		$tmp1087.x $tmp1085.w 	%line{46} %argrw{"wr"}
	assign		$tmp1087.y $tmp1085.x 	%argrw{"wr"}
	assign		$tmp1087.z $tmp1085.y 	%argrw{"wr"}
	assign		$tmp1087.w $tmp1085.z 	%argrw{"wr"}
	functioncall	$const59 2644 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1088 $tmp1087.x $tmp1087.y $tmp1087.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1084.y $tmp1088 $tmp1087.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:47
#                  hash_vector4_to_float(vector4(k.z, k.w, k.x, k.y)),
	assign		$tmp1089.x $tmp1085.z 	%line{47} %argrw{"wr"}
	assign		$tmp1089.y $tmp1085.w 	%argrw{"wr"}
	assign		$tmp1089.z $tmp1085.x 	%argrw{"wr"}
	assign		$tmp1089.w $tmp1085.y 	%argrw{"wr"}
	functioncall	$const59 2651 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1090 $tmp1089.x $tmp1089.y $tmp1089.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1084.z $tmp1090 $tmp1089.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:48
#                  hash_vector4_to_float(vector4(k.y, k.z, k.w, k.x)));
	assign		$tmp1091.x $tmp1085.y 	%line{48} %argrw{"wr"}
	assign		$tmp1091.y $tmp1085.z 	%argrw{"wr"}
	assign		$tmp1091.z $tmp1085.w 	%argrw{"wr"}
	assign		$tmp1091.w $tmp1085.x 	%argrw{"wr"}
	functioncall	$const59 2658 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_hash.h:26
#   return hashnoise(vector3(k.x, k.y, k.z), k.w);
	point		$tmp1092 $tmp1091.x $tmp1091.y $tmp1091.z 	%line{26} %argrw{"wrrr"}
	hashnoise	$tmp1084.w $tmp1092 $tmp1091.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2668 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp1093.x randomness 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp1093.y randomness 	%argrw{"wr"}
	assign		$tmp1093.z randomness 	%argrw{"wr"}
	assign		$tmp1093.w randomness 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const38 2668 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		$tmp1083.x $tmp1084.x $tmp1093.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{80} %argrw{"wrr"}
	mul		$tmp1083.y $tmp1084.y $tmp1093.y 	%argrw{"wrr"}
	mul		$tmp1083.z $tmp1084.z $tmp1093.z 	%argrw{"wrr"}
	mul		$tmp1083.w $tmp1084.w $tmp1093.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const35 2673 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:30
#     return vector4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
	add		___694_pointPosition.x ___694_cellOffset.x $tmp1083.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{30} %argrw{"wrr"}
	add		___694_pointPosition.y ___694_cellOffset.y $tmp1083.y 	%argrw{"wrr"}
	add		___694_pointPosition.z ___694_cellOffset.z $tmp1083.z 	%argrw{"wrr"}
	add		___694_pointPosition.w ___694_cellOffset.w $tmp1083.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:890
#           float distanceToPoint = distance(closestPoint, pointPosition);
	functioncall	$const27 2688 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{890} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2679 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		$tmp1094.x ___677_closestPoint.x ___694_pointPosition.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		$tmp1094.y ___677_closestPoint.y ___694_pointPosition.y 	%argrw{"wrr"}
	sub		$tmp1094.z ___677_closestPoint.z ___694_pointPosition.z 	%argrw{"wrr"}
	sub		$tmp1094.w ___677_closestPoint.w ___694_pointPosition.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:38
#   return length(a - b);
	functioncall	$const40 2688 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{38} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:223
#     return sqrt (a.x*a.x + a.y*a.y + a.z*a.z + a.w*a.w);
	mul		$tmp1095 $tmp1094.x $tmp1094.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{223} %argrw{"wrr"}
	mul		$tmp1096 $tmp1094.y $tmp1094.y 	%argrw{"wrr"}
	add		$tmp1097 $tmp1095 $tmp1096 	%argrw{"wrr"}
	mul		$tmp1098 $tmp1094.z $tmp1094.z 	%argrw{"wrr"}
	add		$tmp1099 $tmp1097 $tmp1098 	%argrw{"wrr"}
	mul		$tmp1100 $tmp1094.w $tmp1094.w 	%argrw{"wrr"}
	add		$tmp1101 $tmp1099 $tmp1100 	%argrw{"wrr"}
	sqrt		___694_distanceToPoint $tmp1101 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:891
#           if (distanceToPoint < minDistance) {
	lt		$tmp1102 ___694_distanceToPoint ___677_minDistance 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{891} %argrw{"wrr"}
	if		$tmp1102 2695 2695 	%argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:892
#             minDistance = distanceToPoint;
	assign		___677_minDistance ___694_distanceToPoint 	%line{892} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:893
#             closestPointToClosestPoint = pointPosition;
	assign		___677_closestPointToClosestPoint.x ___694_pointPosition.x 	%line{893} %argrw{"wr"}
	assign		___677_closestPointToClosestPoint.y ___694_pointPosition.y 	%argrw{"wr"}
	assign		___677_closestPointToClosestPoint.z ___694_pointPosition.z 	%argrw{"wr"}
	assign		___677_closestPointToClosestPoint.w ___694_pointPosition.w 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:883
#         for (int i = -1; i <= 1; i++) {
	assign		$tmp1103 ___693_i 	%line{883} %argrw{"wr"}
	add		___693_i ___693_i $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:882
#       for (int j = -1; j <= 1; j++) {
	assign		$tmp1104 ___691_j 	%line{882} %argrw{"wr"}
	add		___691_j ___691_j $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:881
#     for (int k = -1; k <= 1; k++) {
	assign		$tmp1105 ___689_k 	%line{881} %argrw{"wr"}
	add		___689_k ___689_k $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:880
#   for (int u = -1; u <= 1; u++) {
	assign		$tmp1106 ___687_u 	%line{880} %argrw{"wr"}
	add		___687_u ___687_u $const11 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:899
#   outRadius = distance(closestPointToClosestPoint, closestPoint) / 2.0;
	functioncall	$const27 2718 	%line{899} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1028
# 
	functioncall	$const34 2709 	%line{1028} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:55
#     return vector4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w);
	sub		$tmp1108.x ___677_closestPointToClosestPoint.x ___677_closestPoint.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{55} %argrw{"wrr"}
	sub		$tmp1108.y ___677_closestPointToClosestPoint.y ___677_closestPoint.y 	%argrw{"wrr"}
	sub		$tmp1108.z ___677_closestPointToClosestPoint.z ___677_closestPoint.z 	%argrw{"wrr"}
	sub		$tmp1108.w ___677_closestPointToClosestPoint.w ___677_closestPoint.w 	%argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:38
#   return length(a - b);
	functioncall	$const40 2718 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{38} %argrw{"r"}
# /opt/lib/osl-1.10.9/shaders/vector4.h:223
#     return sqrt (a.x*a.x + a.y*a.y + a.z*a.z + a.w*a.w);
	mul		$tmp1109 $tmp1108.x $tmp1108.x 	%filename{"/opt/lib/osl-1.10.9/shaders/vector4.h"} %line{223} %argrw{"wrr"}
	mul		$tmp1110 $tmp1108.y $tmp1108.y 	%argrw{"wrr"}
	add		$tmp1111 $tmp1109 $tmp1110 	%argrw{"wrr"}
	mul		$tmp1112 $tmp1108.z $tmp1108.z 	%argrw{"wrr"}
	add		$tmp1113 $tmp1111 $tmp1112 	%argrw{"wrr"}
	mul		$tmp1114 $tmp1108.w $tmp1108.w 	%argrw{"wrr"}
	add		$tmp1115 $tmp1113 $tmp1114 	%argrw{"wrr"}
	sqrt		$tmp1107 $tmp1115 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:899
#   outRadius = distance(closestPointToClosestPoint, closestPoint) / 2.0;
	div		Radius $tmp1107 $const4 	%filename{"/mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl"} %line{899} %argrw{"wrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1018
#       error("Unknown feature!");
	error		$const30 	%line{1018} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1020
#     outPosition4D = safe_divide(outPosition4D, Scale);
	functioncall	$const55 2738 	%line{1020} %argrw{"r"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:50
#   return vector4((b != 0.0) ? a.x / b : 0.0,
	neq		$tmp1116 Scale $const1 	%line{50} %argrw{"wrr"}
	if		$tmp1116 2724 2725 	%argrw{"r"}
	div		___718_outPosition4D.x ___718_outPosition4D.x Scale 	%argrw{"wrr"}
	assign		___718_outPosition4D.x $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:51
#                  (b != 0.0) ? a.y / b : 0.0,
	neq		$tmp1117 Scale $const1 	%line{51} %argrw{"wrr"}
	if		$tmp1117 2728 2729 	%argrw{"r"}
	div		___718_outPosition4D.y ___718_outPosition4D.y Scale 	%argrw{"wrr"}
	assign		___718_outPosition4D.y $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:52
#                  (b != 0.0) ? a.z / b : 0.0,
	neq		$tmp1118 Scale $const1 	%line{52} %argrw{"wrr"}
	if		$tmp1118 2732 2733 	%argrw{"r"}
	div		___718_outPosition4D.z ___718_outPosition4D.z Scale 	%argrw{"wrr"}
	assign		___718_outPosition4D.z $const1 	%argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:53
#                  (b != 0.0) ? a.w / b : 0.0);
	neq		$tmp1119 Scale $const1 	%line{53} %argrw{"wrr"}
	if		$tmp1119 2736 2737 	%argrw{"r"}
	div		___718_outPosition4D.w ___718_outPosition4D.w Scale 	%argrw{"wrr"}
	assign		___718_outPosition4D.w $const1 	%argrw{"wr"}
	return
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1021
#     Position = vector3(outPosition4D.x, outPosition4D.y, outPosition4D.z);
	point		Position ___718_outPosition4D.x ___718_outPosition4D.y ___718_outPosition4D.z 	%line{1021} %argrw{"wrrr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1022
#     WOut = outPosition4D.w;
	assign		WOut ___718_outPosition4D.w 	%line{1022} %argrw{"wr"}
# /mnt/hd/dev/blender/blender/intern/cycles/kernel/shaders/node_voronoi_texture.osl:1025
#     error("Unknown dimension!");
	error		$const74 	%line{1025} %argrw{"r"}
	end
